{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";import _isEqual from \"lodash/isEqual\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AlteredSliceTag/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@superset-ui/core';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired };\n\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !_isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (_isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState((prevState) => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !_isEmpty(diffs) }));\n\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: controlsMap[key] && controlsMap[key].label || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap) }));\n\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = props.origFormData;\n    const cfd = props.currentFormData;\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach((fdKey) => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'having_filters', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return _isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {var _controlsMap$key, _controlsMap$key2, _controlsMap$key3;\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (((_controlsMap$key = controlsMap[key]) == null ? void 0 : _controlsMap$key.type) === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value.\n      map((v) => {\n        const filterVal =\n        v.comparator && v.comparator.constructor === Array ?\n        `[${v.comparator.join(', ')}]` :\n        v.comparator;\n        return `${v.subject} ${v.operator} ${filterVal}`;\n      }).\n      join(', ');\n    }\n    if (((_controlsMap$key2 = controlsMap[key]) == null ? void 0 : _controlsMap$key2.type) === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (((_controlsMap$key3 = controlsMap[key]) == null ? void 0 : _controlsMap$key3.type) === 'CollectionControl') {\n      return value.map((v) => safeStringify(v)).join(', ');\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      return value.length ? value.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n    {\n      accessor: 'control',\n      Header: 'Control' },\n\n    {\n      accessor: 'before',\n      Header: 'Before' },\n\n    {\n      accessor: 'after',\n      Header: 'After' }];\n\n\n\n    return (\n      ___EmotionJSX(TableView, {\n        columns: columns,\n        data: this.state.rows,\n        pageSize: 50,\n        className: \"table-condensed\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 7 } }));\n\n\n  }\n\n  renderTriggerNode() {\n    return (\n      ___EmotionJSX(Tooltip, { id: \"difference-tooltip\", title: t('Click to see difference'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 177, columnNumber: 7 } },\n      ___EmotionJSX(\"span\", {\n        className: \"label label-warning m-l-5\",\n        style: { fontSize: '12px' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 178, columnNumber: 9 } },\n\n      t('Altered'))));\n\n\n\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      ___EmotionJSX(ModalTrigger, {\n        triggerNode: this.renderTriggerNode(),\n        modalTitle: t('Chart changes'),\n        modalBody: this.renderModalBody(),\n        responsive: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 7 } }));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAlteredSliceTag.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AlteredSliceTag/index.jsx\");reactHotLoader.register(alterForComparison, \"alterForComparison\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AlteredSliceTag/index.jsx\");reactHotLoader.register(AlteredSliceTag, \"AlteredSliceTag\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AlteredSliceTag/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AlteredSliceTag/index.jsx"],"names":["React","PropTypes","t","getControlsForVizType","safeStringify","Tooltip","ModalTrigger","TableView","propTypes","origFormData","object","isRequired","currentFormData","alterForComparison","value","undefined","Array","isArray","length","keys","Object","AlteredSliceTag","Component","constructor","props","diffs","getDiffs","controlsMap","viz_type","rows","getRowsFromDiffs","state","hasDiffs","UNSAFE_componentWillReceiveProps","newProps","setState","prevState","entries","map","key","diff","control","label","before","formatValue","after","ofd","cfd","fdKeys","forEach","fdKey","includes","isEqualish","val1","val2","type","v","filterVal","comparator","join","subject","operator","renderModalBody","columns","accessor","Header","renderTriggerNode","fontSize","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty } from 'lodash';\nimport { t } from '@superset-ui/core';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired,\n};\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState(prevState => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !isEmpty(diffs),\n    }));\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: (controlsMap[key] && controlsMap[key].label) || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap),\n    }));\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = props.origFormData;\n    const cfd = props.currentFormData;\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'having_filters', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (controlsMap[key]?.type === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value\n        .map(v => {\n          const filterVal =\n            v.comparator && v.comparator.constructor === Array\n              ? `[${v.comparator.join(', ')}]`\n              : v.comparator;\n          return `${v.subject} ${v.operator} ${filterVal}`;\n        })\n        .join(', ');\n    }\n    if (controlsMap[key]?.type === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (controlsMap[key]?.type === 'CollectionControl') {\n      return value.map(v => safeStringify(v)).join(', ');\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      return value.length ? value.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: 'Control',\n      },\n      {\n        accessor: 'before',\n        Header: 'Before',\n      },\n      {\n        accessor: 'after',\n        Header: 'After',\n      },\n    ];\n\n    return (\n      <TableView\n        columns={columns}\n        data={this.state.rows}\n        pageSize={50}\n        className=\"table-condensed\"\n      />\n    );\n  }\n\n  renderTriggerNode() {\n    return (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <span\n          className=\"label label-warning m-l-5\"\n          style={{ fontSize: '12px' }}\n        >\n          {t('Altered')}\n        </span>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      <ModalTrigger\n        triggerNode={this.renderTriggerNode()}\n        modalTitle={t('Chart changes')}\n        modalBody={this.renderModalBody()}\n        responsive\n      />\n    );\n  }\n}\n\nAlteredSliceTag.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}