{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const NOOP = () => {};\nexport default function transformProps(chartProps) {\n  const { datasource, formData, hooks, initialValues, queriesData, rawDatasource = {}, rawFormData, width, height } = chartProps;\n  const { onAddFilter = NOOP, onFilterMenuOpen = NOOP, onFilterMenuClose = NOOP } = hooks;\n  const { sliceId, dateFilter, instantFiltering, showDruidTimeGranularity, showDruidTimeOrigin, showSqlaTimeColumn, showSqlaTimeGranularity } = formData;\n  const { verboseMap = {} } = datasource;\n  const filterConfigs = formData.filterConfigs || [];\n  const filtersFields = filterConfigs.map((flt) => ({\n    ...flt,\n    key: flt.column,\n    label: flt.label || verboseMap[flt.column] || flt.column }));\n\n  return {\n    chartId: sliceId,\n    width,\n    height,\n    datasource: rawDatasource,\n    filtersChoices: queriesData[0].data,\n    filtersFields,\n    instantFiltering,\n    onChange: onAddFilter,\n    onFilterMenuOpen,\n    onFilterMenuClose,\n    origSelectedValues: initialValues || {},\n    showDateFilter: dateFilter,\n    showDruidTimeGrain: showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGrain: showSqlaTimeGranularity,\n    // the original form data, needed for async select options\n    rawFormData };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NOOP, \"NOOP\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/transformProps.ts\");reactHotLoader.register(transformProps, \"transformProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/transformProps.ts"],"names":[],"mappings":"uSAoBA,MAAM,IAAI,GAAG,MAAK,CAAG,CAArB;AAEA,eAAc,SAAU,cAAV,CAAyB,UAAzB,EAAwD;AACpE,QAAM,EACJ,UADI,EAEJ,QAFI,EAGJ,KAHI,EAIJ,aAJI,EAKJ,WALI,EAMJ,aAAa,GAAG,EANZ,EAOJ,WAPI,EAQJ,KARI,EASJ,MATI,KAUF,UAVJ;AAWA,QAAM,EACJ,WAAW,GAAG,IADV,EAEJ,gBAAgB,GAAG,IAFf,EAGJ,iBAAiB,GAAG,IAHhB,KAIF,KAJJ;AAKA,QAAM,EACJ,OADI,EAEJ,UAFI,EAGJ,gBAHI,EAIJ,wBAJI,EAKJ,mBALI,EAMJ,kBANI,EAOJ,uBAPI,KAQF,QARJ;AASA,QAAM,EAAE,UAAU,GAAG,EAAf,KAAsB,UAA5B;AACA,QAAM,aAAa,GAAG,QAAQ,CAAC,aAAT,IAA0B,EAAhD;AAEA,QAAM,aAAa,GAAG,aAAa,CAAC,GAAd,CAAkB,CAAA,GAAG,MAAK;AAC9C,OAAG,GAD2C;AAE9C,IAAA,GAAG,EAAE,GAAG,CAAC,MAFqC;AAG9C,IAAA,KAAK,EAAE,GAAG,CAAC,KAAJ,IAAa,UAAU,CAAC,GAAG,CAAC,MAAL,CAAvB,IAAuC,GAAG,CAAC,MAHJ,EAAL,CAArB,CAAtB;;AAMA,SAAO;AACL,IAAA,OAAO,EAAE,OADJ;AAEL,IAAA,KAFK;AAGL,IAAA,MAHK;AAIL,IAAA,UAAU,EAAE,aAJP;AAKL,IAAA,cAAc,EAAE,WAAW,CAAC,CAAD,CAAX,CAAe,IAL1B;AAML,IAAA,aANK;AAOL,IAAA,gBAPK;AAQL,IAAA,QAAQ,EAAE,WARL;AASL,IAAA,gBATK;AAUL,IAAA,iBAVK;AAWL,IAAA,kBAAkB,EAAE,aAAa,IAAI,EAXhC;AAYL,IAAA,cAAc,EAAE,UAZX;AAaL,IAAA,kBAAkB,EAAE,wBAbf;AAcL,IAAA,mBAdK;AAeL,IAAA,kBAfK;AAgBL,IAAA,iBAAiB,EAAE,uBAhBd;AAiBL;AACA,IAAA,WAlBK,EAAP;;AAoBD,C,iLAzDK,I,sIAEkB,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FilterBoxChartProps } from './types';\n\nconst NOOP = () => {};\n\nexport default function transformProps(chartProps: FilterBoxChartProps) {\n  const {\n    datasource,\n    formData,\n    hooks,\n    initialValues,\n    queriesData,\n    rawDatasource = {},\n    rawFormData,\n    width,\n    height,\n  } = chartProps;\n  const {\n    onAddFilter = NOOP,\n    onFilterMenuOpen = NOOP,\n    onFilterMenuClose = NOOP,\n  } = hooks;\n  const {\n    sliceId,\n    dateFilter,\n    instantFiltering,\n    showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGranularity,\n  } = formData;\n  const { verboseMap = {} } = datasource;\n  const filterConfigs = formData.filterConfigs || [];\n\n  const filtersFields = filterConfigs.map(flt => ({\n    ...flt,\n    key: flt.column,\n    label: flt.label || verboseMap[flt.column] || flt.column,\n  }));\n\n  return {\n    chartId: sliceId,\n    width,\n    height,\n    datasource: rawDatasource,\n    filtersChoices: queriesData[0].data,\n    filtersFields,\n    instantFiltering,\n    onChange: onAddFilter,\n    onFilterMenuOpen,\n    onFilterMenuClose,\n    origSelectedValues: initialValues || {},\n    showDateFilter: dateFilter,\n    showDruidTimeGrain: showDruidTimeGranularity,\n    showDruidTimeOrigin,\n    showSqlaTimeColumn,\n    showSqlaTimeGrain: showSqlaTimeGranularity,\n    // the original form data, needed for async select options\n    rawFormData,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}