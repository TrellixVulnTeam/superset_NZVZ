{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { Form, Typography } from 'src/common/components';\nimport { useComponentDidUpdate } from 'src/common/hooks/useComponentDidUpdate/useComponentDidUpdate';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst CleanFormItem = styled(Form.Item)`\n  margin-bottom: 0;\n`;\nconst FilterScope = ({ pathToFormValue = [], formScopingType, formFilterScope, forceUpdate, filterScope, updateFormValues, chartId, initiallyExcludedCharts }) => {\n  const [initialFilterScope] = useState(filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts));\n  const [initialScopingType] = useState(isScopingAll(initialFilterScope, chartId) ?\n  ScopingType.all :\n  ScopingType.specific);\n  const [hasScopeBeenModified, setHasScopeBeenModified] = useState(!!filterScope);\n  const onUpdateFormValues = useCallback((formValues) => {\n    updateFormValues(formValues);\n    setHasScopeBeenModified(true);\n  }, [updateFormValues]);\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId) ?\n      ScopingType.all :\n      ScopingType.specific });\n\n  }, [\n  chartId,\n  filterScope,\n  hasScopeBeenModified,\n  initiallyExcludedCharts,\n  updateFormValues]);\n\n  useComponentDidUpdate(updateScopes);\n  return ___EmotionJSX(Wrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 66, columnNumber: 13 } },\n  ___EmotionJSX(CleanFormItem, { name: [...pathToFormValue, 'scoping'], initialValue: initialScopingType, __self: this, __source: { fileName: _jsxFileName, lineNumber: 67, columnNumber: 7 } },\n  ___EmotionJSX(Radio.Group, { onChange: ({ target: { value } }) => {\n      if (value === ScopingType.all) {\n        const scope = getDefaultScopeValue(chartId);\n        updateFormValues({\n          scope });\n\n      }\n      setHasScopeBeenModified(true);\n      forceUpdate();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 68, columnNumber: 9 } },\n  ___EmotionJSX(Radio, { value: ScopingType.all, __self: this, __source: { fileName: _jsxFileName, lineNumber: 78, columnNumber: 11 } }, t('Apply to all panels')),\n  ___EmotionJSX(Radio, { value: ScopingType.specific, __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 11 } },\n  t('Apply to specific panels')))),\n\n\n\n  ___EmotionJSX(Typography.Text, { type: \"secondary\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 7 } },\n  (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.specific ?\n  t('Only selected panels will be affected by this filter') :\n  t('All panels with this column will be affected by this filter')),\n\n  (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.specific && ___EmotionJSX(ScopingTree, { updateFormValues: onUpdateFormValues, initialScope: initialFilterScope, formScope: formFilterScope, forceUpdate: forceUpdate, chartId: chartId, initiallyExcludedCharts: initiallyExcludedCharts, __self: this, __source: { fileName: _jsxFileName, lineNumber: 89, columnNumber: 77 } }),\n  ___EmotionJSX(CleanFormItem, { name: [...pathToFormValue, 'scope'], hidden: true, initialValue: initialFilterScope, __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 7 } }));\n\n};__signature__(FilterScope, \"useState{[initialFilterScope](filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts))}\\nuseState{[initialScopingType](isScopingAll(initialFilterScope, chartId)\\n        ? ScopingType.all\\n        : ScopingType.specific)}\\nuseState{[hasScopeBeenModified, setHasScopeBeenModified](!!filterScope)}\\nuseCallback{onUpdateFormValues}\\nuseCallback{updateScopes}\\nuseComponentDidUpdate{}\", () => [useComponentDidUpdate]);const _default =\nFilterScope;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(FilterScope, \"FilterScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useCallback, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { Form, Typography } from 'src/common/components';\nimport { useComponentDidUpdate } from 'src/common/hooks/useComponentDidUpdate/useComponentDidUpdate';\nimport { Scope } from '../../../types';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';\n\ntype FilterScopeProps = {\n  pathToFormValue?: string[];\n  updateFormValues: (values: any) => void;\n  formFilterScope?: Scope;\n  forceUpdate: Function;\n  filterScope?: Scope;\n  formScopingType?: ScopingType;\n  chartId?: number;\n  initiallyExcludedCharts?: number[];\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst CleanFormItem = styled(Form.Item)`\n  margin-bottom: 0;\n`;\n\nconst FilterScope: FC<FilterScopeProps> = ({\n  pathToFormValue = [],\n  formScopingType,\n  formFilterScope,\n  forceUpdate,\n  filterScope,\n  updateFormValues,\n  chartId,\n  initiallyExcludedCharts,\n}) => {\n  const [initialFilterScope] = useState(\n    filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts),\n  );\n  const [initialScopingType] = useState(\n    isScopingAll(initialFilterScope, chartId)\n      ? ScopingType.all\n      : ScopingType.specific,\n  );\n  const [hasScopeBeenModified, setHasScopeBeenModified] = useState(\n    !!filterScope,\n  );\n\n  const onUpdateFormValues = useCallback(\n    (formValues: any) => {\n      updateFormValues(formValues);\n      setHasScopeBeenModified(true);\n    },\n    [updateFormValues],\n  );\n\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId)\n        ? ScopingType.all\n        : ScopingType.specific,\n    });\n  }, [\n    chartId,\n    filterScope,\n    hasScopeBeenModified,\n    initiallyExcludedCharts,\n    updateFormValues,\n  ]);\n  useComponentDidUpdate(updateScopes);\n\n  return (\n    <Wrapper>\n      <CleanFormItem\n        name={[...pathToFormValue, 'scoping']}\n        initialValue={initialScopingType}\n      >\n        <Radio.Group\n          onChange={({ target: { value } }) => {\n            if (value === ScopingType.all) {\n              const scope = getDefaultScopeValue(chartId);\n              updateFormValues({\n                scope,\n              });\n            }\n            setHasScopeBeenModified(true);\n            forceUpdate();\n          }}\n        >\n          <Radio value={ScopingType.all}>{t('Apply to all panels')}</Radio>\n          <Radio value={ScopingType.specific}>\n            {t('Apply to specific panels')}\n          </Radio>\n        </Radio.Group>\n      </CleanFormItem>\n      <Typography.Text type=\"secondary\">\n        {(formScopingType ?? initialScopingType) === ScopingType.specific\n          ? t('Only selected panels will be affected by this filter')\n          : t('All panels with this column will be affected by this filter')}\n      </Typography.Text>\n      {(formScopingType ?? initialScopingType) === ScopingType.specific && (\n        <ScopingTree\n          updateFormValues={onUpdateFormValues}\n          initialScope={initialFilterScope}\n          formScope={formFilterScope}\n          forceUpdate={forceUpdate}\n          chartId={chartId}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      )}\n      <CleanFormItem\n        name={[...pathToFormValue, 'scope']}\n        hidden\n        initialValue={initialFilterScope}\n      />\n    </Wrapper>\n  );\n};\n\nexport default FilterScope;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}