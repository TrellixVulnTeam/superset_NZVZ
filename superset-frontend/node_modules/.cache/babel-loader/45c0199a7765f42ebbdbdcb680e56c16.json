{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/Fieldset.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'src/components/Form';\n\nimport { recurseReactClone } from './utils';\nimport Field from './Field';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func,\n  item: PropTypes.object,\n  title: PropTypes.node,\n  compact: PropTypes.bool };\n\nconst defaultProps = {\n  compact: false,\n  title: null };\n\n\nexport default class Fieldset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val });\n\n  }\n\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact });\n\n    return (\n      ___EmotionJSX(Form, { componentClass: \"fieldset\", className: \"CRUD\", layout: \"vertical\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 59, columnNumber: 7 } },\n      title && ___EmotionJSX(\"legend\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 60, columnNumber: 19 } }, title),\n      recurseReactClone(this.props.children, Field, propExtender)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Fieldset.propTypes = propTypes;\nFieldset.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/Fieldset.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/Fieldset.jsx\");reactHotLoader.register(Fieldset, \"Fieldset\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/Fieldset.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/Fieldset.jsx"],"names":["React","PropTypes","Form","recurseReactClone","Field","propTypes","children","node","isRequired","onChange","func","item","object","title","compact","bool","defaultProps","Fieldset","PureComponent","constructor","props","bind","fieldKey","val","render","propExtender","field","value"],"mappings":"qYAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,qBAArB;;AAEA,SAASC,iBAAT,QAAkC,SAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC,UADT;AAEhBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,IAFJ;AAGhBC,EAAAA,IAAI,EAAEV,SAAS,CAACW,MAHA;AAIhBC,EAAAA,KAAK,EAAEZ,SAAS,CAACM,IAJD;AAKhBO,EAAAA,OAAO,EAAEb,SAAS,CAACc,IALH,EAAlB;;AAOA,MAAMC,YAAY,GAAG;AACnBF,EAAAA,OAAO,EAAE,KADU;AAEnBD,EAAAA,KAAK,EAAE,IAFY,EAArB;;;AAKA,eAAe,MAAMI,QAAN,SAAuBjB,KAAK,CAACkB,aAA7B,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKX,QAAL,GAAgB,KAAKA,QAAL,CAAcY,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDZ,EAAAA,QAAQ,CAACa,QAAD,EAAWC,GAAX,EAAgB;AACtB,WAAO,KAAKH,KAAL,CAAWX,QAAX,CAAoB;AACzB,SAAG,KAAKW,KAAL,CAAWT,IADW;AAEzB,OAACW,QAAD,GAAYC,GAFa,EAApB,CAAP;;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEX,KAAF,KAAY,KAAKO,KAAvB;AACA,UAAMK,YAAY,GAAG,CAAAC,KAAK,MAAK;AAC7BjB,MAAAA,QAAQ,EAAE,KAAKA,QADc;AAE7BkB,MAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWT,IAAX,CAAgBe,KAAK,CAACN,KAAN,CAAYE,QAA5B,CAFsB;AAG7BR,MAAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN,OAHS,EAAL,CAA1B;;AAKA;AACE,oBAAC,IAAD,IAAM,cAAc,EAAC,UAArB,EAAgC,SAAS,EAAC,MAA1C,EAAiD,MAAM,EAAC,UAAxD;AACGD,MAAAA,KAAK,IAAI,kHAASA,KAAT,CADZ;AAEGV,MAAAA,iBAAiB,CAAC,KAAKiB,KAAL,CAAWd,QAAZ,EAAsBF,KAAtB,EAA6BqB,YAA7B,CAFpB,CADF;;;AAMD,GA1BuD;AAAA;AAAA,6BA4B1DR,QAAQ,CAACZ,SAAT,GAAqBA,SAArB;AACAY,QAAQ,CAACD,YAAT,GAAwBA,YAAxB,C,iLAzCMX,S,kHAOAW,Y,qHAKeC,Q","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'src/components/Form';\n\nimport { recurseReactClone } from './utils';\nimport Field from './Field';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func,\n  item: PropTypes.object,\n  title: PropTypes.node,\n  compact: PropTypes.bool,\n};\nconst defaultProps = {\n  compact: false,\n  title: null,\n};\n\nexport default class Fieldset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val,\n    });\n  }\n\n  render() {\n    const { title } = this.props;\n    const propExtender = field => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact,\n    });\n    return (\n      <Form componentClass=\"fieldset\" className=\"CRUD\" layout=\"vertical\">\n        {title && <legend>{title}</legend>}\n        {recurseReactClone(this.props.children, Field, propExtender)}\n      </Form>\n    );\n  }\n}\nFieldset.propTypes = propTypes;\nFieldset.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}