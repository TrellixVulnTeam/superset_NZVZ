{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/Control.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport controlMap from './controls';\nimport './Control.less';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function Control(props) {\n  const { actions: { setControlValue }, name, type, hidden } = props;\n  const [hovered, setHovered] = useState(false);\n  const onChange = useCallback((value, errors) => setControlValue(name, value, errors), [name, setControlValue]);\n  if (!type)\n  return null;\n  const ControlComponent = typeof type === 'string' ? controlMap[type] : type;\n  if (!ControlComponent) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unknown controlType: ${type}`);\n    return null;\n  }\n  return ___EmotionJSX(\"div\", { className: \"Control\", \"data-test\": name, style: hidden ? { display: 'none' } : undefined, onMouseEnter: () => setHovered(true), onMouseLeave: () => setHovered(false), __self: this, __source: { fileName: _jsxFileName, lineNumber: 35, columnNumber: 13 } },\n  ___EmotionJSX(ErrorBoundary, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 36, columnNumber: 7 } },\n  ___EmotionJSX(ControlComponent, _extends({ onChange: onChange, hovered: hovered }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 37, columnNumber: 9 } }))));\n\n\n}__signature__(Control, \"useState{[hovered, setHovered](false)}\\nuseCallback{onChange}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Control, \"Control\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/Control.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/Control.tsx"],"names":[],"mappings":"gdAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAA2B,WAA3B,EAAwC,QAAxC,QAAwD,OAAxD;AAIA,OAAO,aAAP,MAA0B,8BAA1B;AAEA,OAAO,UAAP,MAAuB,YAAvB;AAEA,OAAO,gBAAP,C;AA2BA,eAAc,SAAU,OAAV,CAAkB,KAAlB,EAAqC;AACjD,QAAM,EACJ,OAAO,EAAE,EAAE,eAAF,EADL,EAEJ,IAFI,EAGJ,IAHI,EAIJ,MAJI,KAKF,KALJ;AAOA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,KAAD,EAAa,MAAb,KAA+B,eAAe,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CADpB,EAE1B,CAAC,IAAD,EAAO,eAAP,CAF0B,CAA5B;AAKA,MAAI,CAAC,IAAL;AAAW,SAAO,IAAP;AAEX,QAAM,gBAAgB,GAAG,OAAO,IAAP,KAAgB,QAAhB,GAA2B,UAAU,CAAC,IAAD,CAArC,GAA8C,IAAvE;AACA,MAAI,CAAC,gBAAL,EAAuB;AACrB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,wBAAwB,IAAI,EAAzC;AACA,WAAO,IAAP;AACD;AAED,SACE,uBACE,SAAS,EAAC,SADZ,EAEE,aAAW,IAFb,EAGE,KAAK,EAAE,MAAM,GAAG,EAAE,OAAO,EAAE,MAAX,EAAH,GAAyB,SAHxC,EAIE,YAAY,EAAE,MAAM,UAAU,CAAC,IAAD,CAJhC,EAKE,YAAY,EAAE,MAAM,UAAU,CAAC,KAAD,CALhC;AAOE,gBAAC,aAAD;AACE,gBAAC,gBAAD,aAAkB,QAAQ,EAAE,QAA5B,EAAsC,OAAO,EAAE,OAA/C,IAA4D,KAA5D,2FADF,CAPF,CADF;;;AAaD,C,cApCuB,O,oPAAA,O","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useCallback, useState } from 'react';\nimport { ControlType } from '@superset-ui/chart-controls';\nimport { ControlComponentProps as BaseControlComponentProps } from '@superset-ui/chart-controls/lib/shared-controls/components/types';\nimport { JsonValue, QueryFormData } from '@superset-ui/core';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport controlMap from './controls';\n\nimport './Control.less';\n\nexport type ControlProps = {\n  // the actual action dispatcher (via bindActionCreators) has identical\n  // signature to the original action factory.\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  type: ControlType;\n  label?: ReactNode;\n  name: string;\n  description?: ReactNode;\n  tooltipOnClick?: () => ReactNode;\n  places?: number;\n  rightNode?: ReactNode;\n  formData?: QueryFormData | null;\n  value?: JsonValue;\n  validationErrors?: any[];\n  hidden?: boolean;\n  renderTrigger?: boolean;\n};\n\n/**\n *\n */\nexport type ControlComponentProps<\n  ValueType extends JsonValue = JsonValue\n> = Omit<ControlProps, 'value'> & BaseControlComponentProps<ValueType>;\n\nexport default function Control(props: ControlProps) {\n  const {\n    actions: { setControlValue },\n    name,\n    type,\n    hidden,\n  } = props;\n\n  const [hovered, setHovered] = useState(false);\n  const onChange = useCallback(\n    (value: any, errors: any[]) => setControlValue(name, value, errors),\n    [name, setControlValue],\n  );\n\n  if (!type) return null;\n\n  const ControlComponent = typeof type === 'string' ? controlMap[type] : type;\n  if (!ControlComponent) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unknown controlType: ${type}`);\n    return null;\n  }\n\n  return (\n    <div\n      className=\"Control\"\n      data-test={name}\n      style={hidden ? { display: 'none' } : undefined}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <ErrorBoundary>\n        <ControlComponent onChange={onChange} hovered={hovered} {...props} />\n      </ErrorBoundary>\n    </div>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}