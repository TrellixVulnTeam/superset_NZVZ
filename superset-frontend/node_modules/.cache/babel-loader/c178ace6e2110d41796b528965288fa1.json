{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClassNames } from '@emotion/react';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst propTypes = {\n  column: PropTypes.object.isRequired };\n\nconst StyledTooltip = (props) => {\n  const theme = useTheme();\n  return ___EmotionJSX(ClassNames, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 29, columnNumber: 13 } },\n  ({ css }) => ___EmotionJSX(Tooltip, _extends({ overlayClassName: css`\n            .ant-tooltip-inner {\n              max-width: ${theme.gridUnit * 125}px;\n              word-wrap: break-word;\n              text-align: center;\n\n              pre {\n                background: transparent;\n                border: none;\n                text-align: left;\n                color: ${theme.colors.grayscale.light5};\n                font-size: ${theme.typography.sizes.xs}px;\n              }\n            }\n          ` }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 30, columnNumber: 22 } })));\n\n};__signature__(StyledTooltip, \"useTheme{theme}\", () => [useTheme]);\nconst Hr = styled.hr`\n  margin-top: ${({ theme }) => theme.gridUnit * 1.5}px;\n`;\nconst iconMap = {\n  pk: 'fa-key',\n  fk: 'fa-link',\n  index: 'fa-bookmark' };\n\nconst tooltipTitleMap = {\n  pk: 'Primary key',\n  fk: 'Foreign key',\n  index: 'Index' };\n\nexport default function ColumnElement({ column }) {\n  let columnName = column.name;\n  let icons;\n  if (column.keys && column.keys.length > 0) {\n    columnName = ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 64, columnNumber: 22 } }, column.name);\n    icons = column.keys.map((key, i) => ___EmotionJSX(\"span\", { key: i, className: \"ColumnElement\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 65, columnNumber: 46 } },\n    ___EmotionJSX(StyledTooltip, { placement: \"right\", title: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 67, columnNumber: 15 } }, tooltipTitleMap[key.type]),\n      ___EmotionJSX(Hr, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 68, columnNumber: 15 } }),\n      ___EmotionJSX(\"pre\", { className: \"text-small\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 69, columnNumber: 15 } },\n      JSON.stringify(key, null, '  '))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 66, columnNumber: 9 } },\n\n\n    ___EmotionJSX(\"i\", { className: `fa text-muted m-l-2 ${iconMap[key.type]}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 73, columnNumber: 11 } }))));\n\n\n  }\n  return ___EmotionJSX(\"div\", { className: \"clearfix table-column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 77, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"pull-left m-l-10 col-name\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 78, columnNumber: 7 } },\n  columnName,\n  icons),\n\n  ___EmotionJSX(\"div\", { className: \"pull-right text-muted\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 7 } },\n  ___EmotionJSX(\"small\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 9 } }, \" \", column.type)));\n\n\n}\nColumnElement.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");reactHotLoader.register(StyledTooltip, \"StyledTooltip\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");reactHotLoader.register(Hr, \"Hr\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");reactHotLoader.register(iconMap, \"iconMap\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");reactHotLoader.register(tooltipTitleMap, \"tooltipTitleMap\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");reactHotLoader.register(ColumnElement, \"ColumnElement\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ColumnElement/index.tsx"],"names":[],"mappings":"2dAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,SAAS,UAAT,QAA2B,gBAA3B;AACA,SAAS,MAAT,EAAiB,QAAjB,QAAiC,mBAAjC;AAEA,SAAS,OAAT,QAAwB,wBAAxB,C;AAEA,MAAM,SAAS,GAAG;AAChB,EAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,UADT,EAAlB;;AAIA,MAAM,aAAa,GAAG,CAAC,KAAD,KAAe;AACnC,QAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,SACE,cAAC,UAAD;AACG,GAAC,EAAE,GAAF,EAAD,KACC,cAAC,OAAD,aACE,gBAAgB,EAAE,GAAG;;2BAEJ,KAAK,CAAC,QAAN,GAAiB,GAAG;;;;;;;;yBAQtB,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;6BACzB,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,EAAE;;;AAG3C,WAfH,IAgBM,KAhBN,4FAFJ,CADF;;AAwBD,CA1BD,C,cAAM,a,4BACU,Q;AA2BhB,MAAM,EAAE,GAAG,MAAM,CAAC,EAAE;gBACJ,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,GAAG;AAClD,CAFD;AAIA,MAAM,OAAO,GAAG;AACd,EAAA,EAAE,EAAE,QADU;AAEd,EAAA,EAAE,EAAE,SAFU;AAGd,EAAA,KAAK,EAAE,aAHO,EAAhB;;AAKA,MAAM,eAAe,GAAG;AACtB,EAAA,EAAE,EAAE,aADkB;AAEtB,EAAA,EAAE,EAAE,aAFkB;AAGtB,EAAA,KAAK,EAAE,OAHe,EAAxB;;AAgBA,eAAc,SAAU,aAAV,CAAwB,EAAE,MAAF,EAAxB,EAAsD;AAClE,MAAI,UAAU,GAAoB,MAAM,CAAC,IAAzC;AACA,MAAI,KAAJ;AACA,MAAI,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,IAAP,CAAY,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,IAAA,UAAU,GAAG,kHAAS,MAAM,CAAC,IAAhB,CAAb;AACA,IAAA,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAgB,CAAC,GAAD,EAAM,CAAN,KACtB,wBAAM,GAAG,EAAE,CAAX,EAAc,SAAS,EAAC,eAAxB;AACE,kBAAC,aAAD,IACE,SAAS,EAAC,OADZ,EAEE,KAAK,EACH;AACE,wHAAS,eAAe,CAAC,GAAG,CAAC,IAAL,CAAxB,CADF;AAEE,oBAAC,EAAD,2FAFF;AAGE,6BAAK,SAAS,EAAC,YAAf;AACG,MAAA,IAAI,CAAC,SAAL,CAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CADH,CAHF,CAHJ;;;AAYE,yBAAG,SAAS,EAAE,uBAAuB,OAAO,CAAC,GAAG,CAAC,IAAL,CAAU,EAAtD,yFAZF,CADF,CADM,CAAR;;;AAkBD;AACD,SACE,uBAAK,SAAS,EAAC,uBAAf;AACE,yBAAK,SAAS,EAAC,2BAAf;AACG,EAAA,UADH;AAEG,EAAA,KAFH,CADF;;AAKE,yBAAK,SAAS,EAAC,uBAAf;AACE,uHAAS,MAAM,CAAC,IAAhB,CADF,CALF,CADF;;;AAWD;AACD,aAAa,CAAC,SAAd,GAA0B,SAA1B,C,iLA7FM,S,0IAIA,a,8IA4BA,E,mIAIA,O,wIAKA,e,gJAgBkB,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClassNames } from '@emotion/react';\nimport { styled, useTheme } from '@superset-ui/core';\n\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst propTypes = {\n  column: PropTypes.object.isRequired,\n};\n\nconst StyledTooltip = (props: any) => {\n  const theme = useTheme();\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <Tooltip\n          overlayClassName={css`\n            .ant-tooltip-inner {\n              max-width: ${theme.gridUnit * 125}px;\n              word-wrap: break-word;\n              text-align: center;\n\n              pre {\n                background: transparent;\n                border: none;\n                text-align: left;\n                color: ${theme.colors.grayscale.light5};\n                font-size: ${theme.typography.sizes.xs}px;\n              }\n            }\n          `}\n          {...props}\n        />\n      )}\n    </ClassNames>\n  );\n};\n\nconst Hr = styled.hr`\n  margin-top: ${({ theme }) => theme.gridUnit * 1.5}px;\n`;\n\nconst iconMap = {\n  pk: 'fa-key',\n  fk: 'fa-link',\n  index: 'fa-bookmark',\n};\nconst tooltipTitleMap = {\n  pk: 'Primary key',\n  fk: 'Foreign key',\n  index: 'Index',\n};\n\nexport type ColumnKeyTypeType = keyof typeof tooltipTitleMap;\n\ninterface ColumnElementProps {\n  column: {\n    name: string;\n    keys?: { type: ColumnKeyTypeType }[];\n    type: string;\n  };\n}\n\nexport default function ColumnElement({ column }: ColumnElementProps) {\n  let columnName: React.ReactNode = column.name;\n  let icons;\n  if (column.keys && column.keys.length > 0) {\n    columnName = <strong>{column.name}</strong>;\n    icons = column.keys.map((key, i) => (\n      <span key={i} className=\"ColumnElement\">\n        <StyledTooltip\n          placement=\"right\"\n          title={\n            <>\n              <strong>{tooltipTitleMap[key.type]}</strong>\n              <Hr />\n              <pre className=\"text-small\">\n                {JSON.stringify(key, null, '  ')}\n              </pre>\n            </>\n          }\n        >\n          <i className={`fa text-muted m-l-2 ${iconMap[key.type]}`} />\n        </StyledTooltip>\n      </span>\n    ));\n  }\n  return (\n    <div className=\"clearfix table-column\">\n      <div className=\"pull-left m-l-10 col-name\">\n        {columnName}\n        {icons}\n      </div>\n      <div className=\"pull-right text-muted\">\n        <small> {column.type}</small>\n      </div>\n    </div>\n  );\n}\nColumnElement.propTypes = propTypes;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}