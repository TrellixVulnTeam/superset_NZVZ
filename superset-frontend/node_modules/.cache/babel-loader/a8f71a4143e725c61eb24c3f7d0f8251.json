{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\n\nimport { Dropdown, Menu } from 'src/common/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ChangeDatasourceModal from 'src/datasource/ChangeDatasourceModal';\nimport DatasourceModal from 'src/datasource/DatasourceModal';\nimport { postForm } from 'src/explore/exploreUtils';\nimport Button from 'src/components/Button';\nimport ErrorAlert from 'src/components/ErrorMessage/ErrorAlert';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  datasource: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isEditable: PropTypes.bool,\n  onDatasourceSave: PropTypes.func };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  onDatasourceSave: null,\n  value: null,\n  isEditable: true };\n\n\nconst Styles = styled.div`\n  .data-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    padding: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .error-alert {\n    margin: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .ant-dropdown-trigger {\n    margin-left: ${({ theme }) => 2 * theme.gridUnit}px;\n    box-shadow: none;\n    &:active {\n      box-shadow: none;\n    }\n  }\n  .btn-group .open .dropdown-toggle {\n    box-shadow: none;\n    &.button-default {\n      background: none;\n    }\n  }\n  i.angle {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n  svg.datasource-modal-trigger {\n    color: ${({ theme }) => theme.colors.primary.base};\n    cursor: pointer;\n  }\n  .title-select {\n    flex: 1 1 100%;\n    display: inline-block;\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    text-align: center;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n  .dataset-svg {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n    flex: none;\n  }\n  span[aria-label='dataset-physical'] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  span[aria-label='more-vert'] {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nconst CHANGE_DATASET = 'change_dataset';\nconst VIEW_IN_SQL_LAB = 'view_in_sql_lab';\nconst EDIT_DATASET = 'edit_dataset';\n\nclass DatasourceControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditDatasourceModal: false,\n      showChangeDatasourceModal: false };\n\n    this.onDatasourceSave = this.onDatasourceSave.bind(this);\n    this.toggleChangeDatasourceModal = this.toggleChangeDatasourceModal.bind(\n    this);\n\n    this.toggleEditDatasourceModal = this.toggleEditDatasourceModal.bind(this);\n    this.toggleShowDatasource = this.toggleShowDatasource.bind(this);\n    this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\n  }\n\n  onDatasourceSave(datasource) {var _this$props$form_data, _columns$find;\n    this.props.actions.setDatasource(datasource);\n    const timeCol = (_this$props$form_data = this.props.form_data) == null ? void 0 : _this$props$form_data.granularity_sqla;\n    const { columns } = this.props.datasource;\n    const firstDttmCol = columns.find((column) => column.is_dttm);\n    if (\n    datasource.type === 'table' &&\n    !((_columns$find = columns.find(({ column_name }) => column_name === timeCol)) != null && _columns$find.is_dttm))\n    {\n      // set `granularity_sqla` to first datatime column name or null\n      this.props.actions.setControlValue(\n      'granularity_sqla',\n      firstDttmCol ? firstDttmCol.column_name : null);\n\n    }\n    if (this.props.onDatasourceSave) {\n      this.props.onDatasourceSave(datasource);\n    }\n  }\n\n  toggleShowDatasource() {\n    this.setState(({ showDatasource }) => ({\n      showDatasource: !showDatasource }));\n\n  }\n\n  toggleChangeDatasourceModal() {\n    this.setState(({ showChangeDatasourceModal }) => ({\n      showChangeDatasourceModal: !showChangeDatasourceModal }));\n\n  }\n\n  toggleEditDatasourceModal() {\n    this.setState(({ showEditDatasourceModal }) => ({\n      showEditDatasourceModal: !showEditDatasourceModal }));\n\n  }\n\n  handleMenuItemClick({ key }) {\n    if (key === CHANGE_DATASET) {\n      this.toggleChangeDatasourceModal();\n    }\n    if (key === EDIT_DATASET) {\n      this.toggleEditDatasourceModal();\n    }\n    if (key === VIEW_IN_SQL_LAB) {\n      const { datasource } = this.props;\n      const payload = {\n        datasourceKey: `${datasource.id}__${datasource.type}`,\n        sql: datasource.sql };\n\n      postForm('/superset/sqllab/', payload);\n    }\n  }\n\n  render() {var _extra;\n    const { showChangeDatasourceModal, showEditDatasourceModal } = this.state;\n    const { datasource, onChange } = this.props;\n    const isMissingDatasource = datasource.id == null;\n\n    const isSqlSupported = datasource.type === 'table';\n\n    const datasourceMenu =\n    ___EmotionJSX(Menu, { onClick: this.handleMenuItemClick, __self: this, __source: { fileName: _jsxFileName, lineNumber: 188, columnNumber: 7 } },\n    this.props.isEditable &&\n    ___EmotionJSX(Menu.Item, { key: EDIT_DATASET, \"data-test\": \"edit-dataset\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 190, columnNumber: 11 } },\n    t('Edit dataset')),\n\n\n    ___EmotionJSX(Menu.Item, { key: CHANGE_DATASET, __self: this, __source: { fileName: _jsxFileName, lineNumber: 194, columnNumber: 9 } }, t('Change dataset')),\n    isSqlSupported &&\n    ___EmotionJSX(Menu.Item, { key: VIEW_IN_SQL_LAB, __self: this, __source: { fileName: _jsxFileName, lineNumber: 196, columnNumber: 11 } }, t('View in SQL Lab')));\n\n\n\n\n    const { health_check_message: healthCheckMessage } = datasource;\n\n    let extra = {};\n    if (datasource != null && datasource.extra) {\n      try {\n        extra = JSON.parse(datasource == null ? void 0 : datasource.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      ___EmotionJSX(Styles, { \"data-test\": \"datasource-control\", className: \"DatasourceControl\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 211, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { className: \"data-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 212, columnNumber: 9 } },\n      ___EmotionJSX(Icons.DatasetPhysical, { className: \"dataset-svg\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 213, columnNumber: 11 } }),\n\n      !isMissingDatasource && datasource.name.length > 25 ?\n      ___EmotionJSX(Tooltip, { title: datasource.name, __self: this, __source: { fileName: _jsxFileName, lineNumber: 216, columnNumber: 13 } },\n      ___EmotionJSX(\"span\", { className: \"title-select\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 217, columnNumber: 15 } }, datasource.name)) :\n\n\n      ___EmotionJSX(\"span\", { title: datasource.name, className: \"title-select\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 220, columnNumber: 13 } },\n      datasource.name),\n\n\n      healthCheckMessage &&\n      ___EmotionJSX(Tooltip, { title: healthCheckMessage, __self: this, __source: { fileName: _jsxFileName, lineNumber: 225, columnNumber: 13 } },\n      ___EmotionJSX(Icons.AlertSolid, { iconColor: supersetTheme.colors.warning.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 226, columnNumber: 15 } })),\n\n\n      ((_extra = extra) == null ? void 0 : _extra.warning_markdown) &&\n      ___EmotionJSX(WarningIconWithTooltip, { warningMarkdown: extra.warning_markdown, __self: this, __source: { fileName: _jsxFileName, lineNumber: 230, columnNumber: 13 } }),\n\n      ___EmotionJSX(Dropdown, {\n        overlay: datasourceMenu,\n        trigger: ['click'],\n        \"data-test\": \"datasource-menu\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 232, columnNumber: 11 } },\n\n      ___EmotionJSX(Tooltip, { title: t('More dataset related options'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 237, columnNumber: 13 } },\n      ___EmotionJSX(Icons.MoreVert, {\n        className: \"datasource-modal-trigger\",\n        \"data-test\": \"datasource-menu-trigger\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 238, columnNumber: 15 } })))),\n\n\n\n\n\n      isMissingDatasource &&\n      ___EmotionJSX(\"div\", { className: \"error-alert\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 247, columnNumber: 11 } },\n      ___EmotionJSX(ErrorAlert, {\n        level: \"warning\",\n        title: t('Missing dataset'),\n        source: \"explore\",\n        subtitle:\n        ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 254, columnNumber: 19 } },\n        t(\n        'The dataset linked to this chart may have been deleted.')),\n\n\n        ___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 259, columnNumber: 19 } },\n        ___EmotionJSX(Button, {\n          buttonStyle: \"primary\",\n          onClick: () =>\n          this.handleMenuItemClick({ key: CHANGE_DATASET }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 260, columnNumber: 21 } },\n\n\n        t('Change dataset')))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 248, columnNumber: 13 } })),\n\n\n\n\n\n\n\n      showEditDatasourceModal &&\n      ___EmotionJSX(DatasourceModal, {\n        datasource: datasource,\n        show: showEditDatasourceModal,\n        onDatasourceSave: this.onDatasourceSave,\n        onHide: this.toggleEditDatasourceModal, __self: this, __source: { fileName: _jsxFileName, lineNumber: 275, columnNumber: 11 } }),\n\n\n      showChangeDatasourceModal &&\n      ___EmotionJSX(ChangeDatasourceModal, {\n        onDatasourceSave: this.onDatasourceSave,\n        onHide: this.toggleChangeDatasourceModal,\n        show: showChangeDatasourceModal,\n        onChange: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 283, columnNumber: 11 } })));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceControl.propTypes = propTypes;\nDatasourceControl.defaultProps = defaultProps;const _default =\n\nDatasourceControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(CHANGE_DATASET, \"CHANGE_DATASET\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(VIEW_IN_SQL_LAB, \"VIEW_IN_SQL_LAB\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(EDIT_DATASET, \"EDIT_DATASET\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(DatasourceControl, \"DatasourceControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx"],"names":["React","PropTypes","t","styled","supersetTheme","Dropdown","Menu","Tooltip","Icons","ChangeDatasourceModal","DatasourceModal","postForm","Button","ErrorAlert","WarningIconWithTooltip","propTypes","actions","object","isRequired","onChange","func","value","string","datasource","form_data","isEditable","bool","onDatasourceSave","defaultProps","Styles","div","theme","colors","grayscale","light2","gridUnit","primary","base","light3","borderRadius","CHANGE_DATASET","VIEW_IN_SQL_LAB","EDIT_DATASET","DatasourceControl","PureComponent","constructor","props","state","showEditDatasourceModal","showChangeDatasourceModal","bind","toggleChangeDatasourceModal","toggleEditDatasourceModal","toggleShowDatasource","handleMenuItemClick","setDatasource","timeCol","granularity_sqla","columns","firstDttmCol","find","column","is_dttm","type","column_name","setControlValue","setState","showDatasource","key","payload","datasourceKey","id","sql","render","isMissingDatasource","isSqlSupported","datasourceMenu","health_check_message","healthCheckMessage","extra","JSON","parse","name","length","warning","warning_markdown"],"mappings":"2aAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,CAAT,EAAYC,MAAZ,EAAoBC,aAApB,QAAyC,mBAAzC;;AAEA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADV;AAEhBC,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,IAFJ;AAGhBC,EAAAA,KAAK,EAAEpB,SAAS,CAACqB,MAHD;AAIhBC,EAAAA,UAAU,EAAEtB,SAAS,CAACgB,MAAV,CAAiBC,UAJb;AAKhBM,EAAAA,SAAS,EAAEvB,SAAS,CAACgB,MAAV,CAAiBC,UALZ;AAMhBO,EAAAA,UAAU,EAAExB,SAAS,CAACyB,IANN;AAOhBC,EAAAA,gBAAgB,EAAE1B,SAAS,CAACmB,IAPZ,EAAlB;;;AAUA,MAAMQ,YAAY,GAAG;AACnBT,EAAAA,QAAQ,EAAE,MAAM,CAAE,CADC;AAEnBQ,EAAAA,gBAAgB,EAAE,IAFC;AAGnBN,EAAAA,KAAK,EAAE,IAHY;AAInBI,EAAAA,UAAU,EAAE,IAJO,EAArB;;;AAOA,MAAMI,MAAM,GAAG1B,MAAM,CAAC2B,GAAI;AAC1B;AACA;AACA;AACA;AACA,+BAA+B,CAAC,EAAEC,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAO;AAC5E,eAAe,CAAC,EAAEH,KAAF,EAAD,KAAe,IAAIA,KAAK,CAACI,QAAS;AACjD;AACA;AACA,cAAc,CAAC,EAAEJ,KAAF,EAAD,KAAe,IAAIA,KAAK,CAACI,QAAS;AAChD;AACA;AACA,mBAAmB,CAAC,EAAEJ,KAAF,EAAD,KAAe,IAAIA,KAAK,CAACI,QAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC,EAAEJ,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,OAAb,CAAqBC,IAAK;AACtD;AACA;AACA,aAAa,CAAC,EAAEN,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,OAAb,CAAqBC,IAAK;AACtD;AACA;AACA;AACA;AACA;AACA,wBAAwB,CAAC,EAAEN,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBK,MAAO;AACrE,eAAe,CAAC,EAAEP,KAAF,EAAD,KAAeA,KAAK,CAACI,QAAN,GAAiB,CAAE;AACjD,qBAAqB,CAAC,EAAEJ,KAAF,EAAD,KAAeA,KAAK,CAACQ,YAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,CAAC,EAAER,KAAF,EAAD,KAAe,IAAIA,KAAK,CAACI,QAAS;AACtD;AACA;AACA;AACA,aAAa,CAAC,EAAEJ,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBI,IAAK;AACxD;AACA;AACA,aAAa,CAAC,EAAEN,KAAF,EAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,OAAb,CAAqBC,IAAK;AACtD;AACA,CApDA;;AAsDA,MAAMG,cAAc,GAAG,gBAAvB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,MAAMC,iBAAN,SAAgC3C,KAAK,CAAC4C,aAAtC,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,uBAAuB,EAAE,KADd;AAEXC,MAAAA,yBAAyB,EAAE,KAFhB,EAAb;;AAIA,SAAKtB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBuB,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCD,IAAjC;AACjC,QADiC,CAAnC;;AAGA,SAAKE,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BF,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKG,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BH,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKI,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDvB,EAAAA,gBAAgB,CAACJ,UAAD,EAAa;AAC3B,SAAKuB,KAAL,CAAW9B,OAAX,CAAmBuC,aAAnB,CAAiChC,UAAjC;AACA,UAAMiC,OAAO,4BAAG,KAAKV,KAAL,CAAWtB,SAAd,qBAAG,sBAAsBiC,gBAAtC;AACA,UAAM,EAAEC,OAAF,KAAc,KAAKZ,KAAL,CAAWvB,UAA/B;AACA,UAAMoC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAa,CAAAC,MAAM,KAAIA,MAAM,CAACC,OAA9B,CAArB;AACA;AACEvC,IAAAA,UAAU,CAACwC,IAAX,KAAoB,OAApB;AACA,uBAACL,OAAO,CAACE,IAAR,CAAa,CAAC,EAAEI,WAAF,EAAD,KAAqBA,WAAW,KAAKR,OAAlD,CAAD,aAAC,cAA4DM,OAA7D,CAFF;AAGE;AACA;AACA,WAAKhB,KAAL,CAAW9B,OAAX,CAAmBiD,eAAnB;AACE,wBADF;AAEEN,MAAAA,YAAY,GAAGA,YAAY,CAACK,WAAhB,GAA8B,IAF5C;;AAID;AACD,QAAI,KAAKlB,KAAL,CAAWnB,gBAAf,EAAiC;AAC/B,WAAKmB,KAAL,CAAWnB,gBAAX,CAA4BJ,UAA5B;AACD;AACF;;AAED8B,EAAAA,oBAAoB,GAAG;AACrB,SAAKa,QAAL,CAAc,CAAC,EAAEC,cAAF,EAAD,MAAyB;AACrCA,MAAAA,cAAc,EAAE,CAACA,cADoB,EAAzB,CAAd;;AAGD;;AAEDhB,EAAAA,2BAA2B,GAAG;AAC5B,SAAKe,QAAL,CAAc,CAAC,EAAEjB,yBAAF,EAAD,MAAoC;AAChDA,MAAAA,yBAAyB,EAAE,CAACA,yBADoB,EAApC,CAAd;;AAGD;;AAEDG,EAAAA,yBAAyB,GAAG;AAC1B,SAAKc,QAAL,CAAc,CAAC,EAAElB,uBAAF,EAAD,MAAkC;AAC9CA,MAAAA,uBAAuB,EAAE,CAACA,uBADoB,EAAlC,CAAd;;AAGD;;AAEDM,EAAAA,mBAAmB,CAAC,EAAEc,GAAF,EAAD,EAAU;AAC3B,QAAIA,GAAG,KAAK5B,cAAZ,EAA4B;AAC1B,WAAKW,2BAAL;AACD;AACD,QAAIiB,GAAG,KAAK1B,YAAZ,EAA0B;AACxB,WAAKU,yBAAL;AACD;AACD,QAAIgB,GAAG,KAAK3B,eAAZ,EAA6B;AAC3B,YAAM,EAAElB,UAAF,KAAiB,KAAKuB,KAA5B;AACA,YAAMuB,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,GAAE/C,UAAU,CAACgD,EAAG,KAAIhD,UAAU,CAACwC,IAAK,EADtC;AAEdS,QAAAA,GAAG,EAAEjD,UAAU,CAACiD,GAFF,EAAhB;;AAIA7D,MAAAA,QAAQ,CAAC,mBAAD,EAAsB0D,OAAtB,CAAR;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM,EAAExB,yBAAF,EAA6BD,uBAA7B,KAAyD,KAAKD,KAApE;AACA,UAAM,EAAExB,UAAF,EAAcJ,QAAd,KAA2B,KAAK2B,KAAtC;AACA,UAAM4B,mBAAmB,GAAGnD,UAAU,CAACgD,EAAX,IAAiB,IAA7C;;AAEA,UAAMI,cAAc,GAAGpD,UAAU,CAACwC,IAAX,KAAoB,OAA3C;;AAEA,UAAMa,cAAc;AAClB,kBAAC,IAAD,IAAM,OAAO,EAAE,KAAKtB,mBAApB;AACG,SAAKR,KAAL,CAAWrB,UAAX;AACC,kBAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAEiB,YAAhB,EAA8B,aAAU,cAAxC;AACGxC,IAAAA,CAAC,CAAC,cAAD,CADJ,CAFJ;;;AAME,kBAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAEsC,cAAhB,0FAAiCtC,CAAC,CAAC,gBAAD,CAAlC,CANF;AAOGyE,IAAAA,cAAc;AACb,kBAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAElC,eAAhB,2FAAkCvC,CAAC,CAAC,iBAAD,CAAnC,CARJ,CADF;;;;;AAcA,UAAM,EAAE2E,oBAAoB,EAAEC,kBAAxB,KAA+CvD,UAArD;;AAEA,QAAIwD,KAAK,GAAG,EAAZ;AACA,QAAIxD,UAAJ,YAAIA,UAAU,CAAEwD,KAAhB,EAAuB;AACrB,UAAI;AACFA,QAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW1D,UAAX,oBAAWA,UAAU,CAAEwD,KAAvB,CAAR;AACD,OAFD,CAEE,MAAM,CAAE,CAHW,CAGV;AACZ;;AAED;AACE,oBAAC,MAAD,IAAQ,aAAU,oBAAlB,EAAuC,SAAS,EAAC,mBAAjD;AACE,6BAAK,SAAS,EAAC,gBAAf;AACE,oBAAC,KAAD,CAAO,eAAP,IAAuB,SAAS,EAAC,aAAjC,0FADF;;AAGG,OAACL,mBAAD,IAAwBnD,UAAU,CAAC2D,IAAX,CAAgBC,MAAhB,GAAyB,EAAjD;AACC,oBAAC,OAAD,IAAS,KAAK,EAAE5D,UAAU,CAAC2D,IAA3B;AACE,8BAAM,SAAS,EAAC,cAAhB,2FAAgC3D,UAAU,CAAC2D,IAA3C,CADF,CADD;;;AAKC,8BAAM,KAAK,EAAE3D,UAAU,CAAC2D,IAAxB,EAA8B,SAAS,EAAC,cAAxC;AACG3D,MAAAA,UAAU,CAAC2D,IADd,CARJ;;;AAYGJ,MAAAA,kBAAkB;AACjB,oBAAC,OAAD,IAAS,KAAK,EAAEA,kBAAhB;AACE,oBAAC,KAAD,CAAO,UAAP,IAAkB,SAAS,EAAE1E,aAAa,CAAC4B,MAAd,CAAqBoD,OAArB,CAA6B/C,IAA1D,0FADF,CAbJ;;;AAiBG,iBAAA0C,KAAK,SAAL,mBAAOM,gBAAP;AACC,oBAAC,sBAAD,IAAwB,eAAe,EAAEN,KAAK,CAACM,gBAA/C,0FAlBJ;;AAoBE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAET,cADX;AAEE,QAAA,OAAO,EAAE,CAAC,OAAD,CAFX;AAGE,qBAAU,iBAHZ;;AAKE,oBAAC,OAAD,IAAS,KAAK,EAAE1E,CAAC,CAAC,8BAAD,CAAjB;AACE,oBAAC,KAAD,CAAO,QAAP;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,qBAAU,yBAFZ,0FADF,CALF,CApBF,CADF;;;;;;AAmCGwE,MAAAA,mBAAmB;AAClB,6BAAK,SAAS,EAAC,aAAf;AACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,KAAK,EAAExE,CAAC,CAAC,iBAAD,CAFV;AAGE,QAAA,MAAM,EAAC,SAHT;AAIE,QAAA,QAAQ;AACN;AACE;AACGA,QAAAA,CAAC;AACA,iEADA,CADJ,CADF;;;AAME;AACE,sBAAC,MAAD;AACE,UAAA,WAAW,EAAC,SADd;AAEE,UAAA,OAAO,EAAE;AACP,eAAKoD,mBAAL,CAAyB,EAAEc,GAAG,EAAE5B,cAAP,EAAzB,CAHJ;;;AAMGtC,QAAAA,CAAC,CAAC,gBAAD,CANJ,CADF,CANF,CALJ,0FADF,CApCJ;;;;;;;;AA+DG8C,MAAAA,uBAAuB;AACtB,oBAAC,eAAD;AACE,QAAA,UAAU,EAAEzB,UADd;AAEE,QAAA,IAAI,EAAEyB,uBAFR;AAGE,QAAA,gBAAgB,EAAE,KAAKrB,gBAHzB;AAIE,QAAA,MAAM,EAAE,KAAKyB,yBAJf,0FAhEJ;;;AAuEGH,MAAAA,yBAAyB;AACxB,oBAAC,qBAAD;AACE,QAAA,gBAAgB,EAAE,KAAKtB,gBADzB;AAEE,QAAA,MAAM,EAAE,KAAKwB,2BAFf;AAGE,QAAA,IAAI,EAAEF,yBAHR;AAIE,QAAA,QAAQ,EAAE9B,QAJZ,0FAxEJ,CADF;;;;;AAkFD,GAvLiD;AAAA;AAAA;AA0LpDwB,iBAAiB,CAAC5B,SAAlB,GAA8BA,SAA9B;AACA4B,iBAAiB,CAACf,YAAlB,GAAiCA,YAAjC,C;;AAEee,iB,CAAf,wB,iLAxQM5B,S,wJAUAa,Y,2JAOAC,M,qJAsDAW,c,6JACAC,e,8JACAC,Y,2JAEAC,iB","sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\n\nimport { Dropdown, Menu } from 'src/common/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ChangeDatasourceModal from 'src/datasource/ChangeDatasourceModal';\nimport DatasourceModal from 'src/datasource/DatasourceModal';\nimport { postForm } from 'src/explore/exploreUtils';\nimport Button from 'src/components/Button';\nimport ErrorAlert from 'src/components/ErrorMessage/ErrorAlert';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  datasource: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isEditable: PropTypes.bool,\n  onDatasourceSave: PropTypes.func,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  onDatasourceSave: null,\n  value: null,\n  isEditable: true,\n};\n\nconst Styles = styled.div`\n  .data-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    padding: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .error-alert {\n    margin: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .ant-dropdown-trigger {\n    margin-left: ${({ theme }) => 2 * theme.gridUnit}px;\n    box-shadow: none;\n    &:active {\n      box-shadow: none;\n    }\n  }\n  .btn-group .open .dropdown-toggle {\n    box-shadow: none;\n    &.button-default {\n      background: none;\n    }\n  }\n  i.angle {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n  svg.datasource-modal-trigger {\n    color: ${({ theme }) => theme.colors.primary.base};\n    cursor: pointer;\n  }\n  .title-select {\n    flex: 1 1 100%;\n    display: inline-block;\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    text-align: center;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n  .dataset-svg {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n    flex: none;\n  }\n  span[aria-label='dataset-physical'] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  span[aria-label='more-vert'] {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nconst CHANGE_DATASET = 'change_dataset';\nconst VIEW_IN_SQL_LAB = 'view_in_sql_lab';\nconst EDIT_DATASET = 'edit_dataset';\n\nclass DatasourceControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditDatasourceModal: false,\n      showChangeDatasourceModal: false,\n    };\n    this.onDatasourceSave = this.onDatasourceSave.bind(this);\n    this.toggleChangeDatasourceModal = this.toggleChangeDatasourceModal.bind(\n      this,\n    );\n    this.toggleEditDatasourceModal = this.toggleEditDatasourceModal.bind(this);\n    this.toggleShowDatasource = this.toggleShowDatasource.bind(this);\n    this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\n  }\n\n  onDatasourceSave(datasource) {\n    this.props.actions.setDatasource(datasource);\n    const timeCol = this.props.form_data?.granularity_sqla;\n    const { columns } = this.props.datasource;\n    const firstDttmCol = columns.find(column => column.is_dttm);\n    if (\n      datasource.type === 'table' &&\n      !columns.find(({ column_name }) => column_name === timeCol)?.is_dttm\n    ) {\n      // set `granularity_sqla` to first datatime column name or null\n      this.props.actions.setControlValue(\n        'granularity_sqla',\n        firstDttmCol ? firstDttmCol.column_name : null,\n      );\n    }\n    if (this.props.onDatasourceSave) {\n      this.props.onDatasourceSave(datasource);\n    }\n  }\n\n  toggleShowDatasource() {\n    this.setState(({ showDatasource }) => ({\n      showDatasource: !showDatasource,\n    }));\n  }\n\n  toggleChangeDatasourceModal() {\n    this.setState(({ showChangeDatasourceModal }) => ({\n      showChangeDatasourceModal: !showChangeDatasourceModal,\n    }));\n  }\n\n  toggleEditDatasourceModal() {\n    this.setState(({ showEditDatasourceModal }) => ({\n      showEditDatasourceModal: !showEditDatasourceModal,\n    }));\n  }\n\n  handleMenuItemClick({ key }) {\n    if (key === CHANGE_DATASET) {\n      this.toggleChangeDatasourceModal();\n    }\n    if (key === EDIT_DATASET) {\n      this.toggleEditDatasourceModal();\n    }\n    if (key === VIEW_IN_SQL_LAB) {\n      const { datasource } = this.props;\n      const payload = {\n        datasourceKey: `${datasource.id}__${datasource.type}`,\n        sql: datasource.sql,\n      };\n      postForm('/superset/sqllab/', payload);\n    }\n  }\n\n  render() {\n    const { showChangeDatasourceModal, showEditDatasourceModal } = this.state;\n    const { datasource, onChange } = this.props;\n    const isMissingDatasource = datasource.id == null;\n\n    const isSqlSupported = datasource.type === 'table';\n\n    const datasourceMenu = (\n      <Menu onClick={this.handleMenuItemClick}>\n        {this.props.isEditable && (\n          <Menu.Item key={EDIT_DATASET} data-test=\"edit-dataset\">\n            {t('Edit dataset')}\n          </Menu.Item>\n        )}\n        <Menu.Item key={CHANGE_DATASET}>{t('Change dataset')}</Menu.Item>\n        {isSqlSupported && (\n          <Menu.Item key={VIEW_IN_SQL_LAB}>{t('View in SQL Lab')}</Menu.Item>\n        )}\n      </Menu>\n    );\n\n    const { health_check_message: healthCheckMessage } = datasource;\n\n    let extra = {};\n    if (datasource?.extra) {\n      try {\n        extra = JSON.parse(datasource?.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      <Styles data-test=\"datasource-control\" className=\"DatasourceControl\">\n        <div className=\"data-container\">\n          <Icons.DatasetPhysical className=\"dataset-svg\" />\n          {/* Add a tooltip only for long dataset names */}\n          {!isMissingDatasource && datasource.name.length > 25 ? (\n            <Tooltip title={datasource.name}>\n              <span className=\"title-select\">{datasource.name}</span>\n            </Tooltip>\n          ) : (\n            <span title={datasource.name} className=\"title-select\">\n              {datasource.name}\n            </span>\n          )}\n          {healthCheckMessage && (\n            <Tooltip title={healthCheckMessage}>\n              <Icons.AlertSolid iconColor={supersetTheme.colors.warning.base} />\n            </Tooltip>\n          )}\n          {extra?.warning_markdown && (\n            <WarningIconWithTooltip warningMarkdown={extra.warning_markdown} />\n          )}\n          <Dropdown\n            overlay={datasourceMenu}\n            trigger={['click']}\n            data-test=\"datasource-menu\"\n          >\n            <Tooltip title={t('More dataset related options')}>\n              <Icons.MoreVert\n                className=\"datasource-modal-trigger\"\n                data-test=\"datasource-menu-trigger\"\n              />\n            </Tooltip>\n          </Dropdown>\n        </div>\n        {/* missing dataset */}\n        {isMissingDatasource && (\n          <div className=\"error-alert\">\n            <ErrorAlert\n              level=\"warning\"\n              title={t('Missing dataset')}\n              source=\"explore\"\n              subtitle={\n                <>\n                  <p>\n                    {t(\n                      'The dataset linked to this chart may have been deleted.',\n                    )}\n                  </p>\n                  <p>\n                    <Button\n                      buttonStyle=\"primary\"\n                      onClick={() =>\n                        this.handleMenuItemClick({ key: CHANGE_DATASET })\n                      }\n                    >\n                      {t('Change dataset')}\n                    </Button>\n                  </p>\n                </>\n              }\n            />\n          </div>\n        )}\n        {showEditDatasourceModal && (\n          <DatasourceModal\n            datasource={datasource}\n            show={showEditDatasourceModal}\n            onDatasourceSave={this.onDatasourceSave}\n            onHide={this.toggleEditDatasourceModal}\n          />\n        )}\n        {showChangeDatasourceModal && (\n          <ChangeDatasourceModal\n            onDatasourceSave={this.onDatasourceSave}\n            onHide={this.toggleChangeDatasourceModal}\n            show={showChangeDatasourceModal}\n            onChange={onChange}\n          />\n        )}\n      </Styles>\n    );\n  }\n}\n\nDatasourceControl.propTypes = propTypes;\nDatasourceControl.defaultProps = defaultProps;\n\nexport default DatasourceControl;\n"]},"metadata":{},"sourceType":"module"}