{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ModalTrigger/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  dialogClassName: PropTypes.string,\n  triggerNode: PropTypes.node.isRequired,\n  modalTitle: PropTypes.node,\n  modalBody: PropTypes.node, // not required because it can be generated by beforeOpen\n  modalFooter: PropTypes.node,\n  beforeOpen: PropTypes.func,\n  onExit: PropTypes.func,\n  isButton: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.string,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  responsive: PropTypes.bool,\n  resizable: PropTypes.bool,\n  resizableConfig: PropTypes.object,\n  draggable: PropTypes.bool,\n  draggableConfig: PropTypes.object };\n\n\nconst defaultProps = {\n  beforeOpen: () => {},\n  onExit: () => {},\n  isButton: false,\n  className: '',\n  modalTitle: '',\n  resizable: false,\n  draggable: false };\n\n\nexport default class ModalTrigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false };\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  close() {\n    this.setState(() => ({ showModal: false }));\n  }\n\n  open(e) {\n    e.preventDefault();\n    this.props.beforeOpen();\n    this.setState(() => ({ showModal: true }));\n  }\n\n  renderModal() {\n    return (\n      ___EmotionJSX(Modal, {\n        wrapClassName: this.props.dialogClassName,\n        className: this.props.className,\n        show: this.state.showModal,\n        onHide: this.close,\n        afterClose: this.props.onExit,\n        title: this.props.modalTitle,\n        footer: this.props.modalFooter,\n        hideFooter: !this.props.modalFooter,\n        width: this.props.width,\n        maxWidth: this.props.maxWidth,\n        responsive: this.props.responsive,\n        resizable: this.props.resizable,\n        resizableConfig: this.props.resizableConfig,\n        draggable: this.props.draggable,\n        draggableConfig: this.props.draggableConfig, __self: this, __source: { fileName: _jsxFileName, lineNumber: 76, columnNumber: 7 } },\n\n      this.props.modalBody));\n\n\n  }\n\n  render() {\n    if (this.props.isButton) {\n      return (\n        ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(Button, {\n          className: \"modal-trigger\",\n          \"data-test\": \"btn-modal-trigger\",\n          tooltip: this.props.tooltip,\n          onClick: this.open, __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 11 } },\n\n        this.props.triggerNode),\n\n        this.renderModal()));\n\n\n    }\n    /* eslint-disable jsx-a11y/interactive-supports-focus */\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"span\", { \"data-test\": \"span-modal-trigger\", onClick: this.open, role: \"button\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 117, columnNumber: 9 } },\n      this.props.triggerNode),\n\n      this.renderModal()));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nModalTrigger.propTypes = propTypes;\nModalTrigger.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ModalTrigger/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ModalTrigger/index.jsx\");reactHotLoader.register(ModalTrigger, \"ModalTrigger\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ModalTrigger/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ModalTrigger/index.jsx"],"names":["React","PropTypes","Modal","Button","propTypes","dialogClassName","string","triggerNode","node","isRequired","modalTitle","modalBody","modalFooter","beforeOpen","func","onExit","isButton","bool","className","tooltip","width","maxWidth","responsive","resizable","resizableConfig","object","draggable","draggableConfig","defaultProps","ModalTrigger","Component","constructor","props","state","showModal","open","bind","close","setState","e","preventDefault","renderModal","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\n\nconst propTypes = {\n  dialogClassName: PropTypes.string,\n  triggerNode: PropTypes.node.isRequired,\n  modalTitle: PropTypes.node,\n  modalBody: PropTypes.node, // not required because it can be generated by beforeOpen\n  modalFooter: PropTypes.node,\n  beforeOpen: PropTypes.func,\n  onExit: PropTypes.func,\n  isButton: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.string,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  responsive: PropTypes.bool,\n  resizable: PropTypes.bool,\n  resizableConfig: PropTypes.object,\n  draggable: PropTypes.bool,\n  draggableConfig: PropTypes.object,\n};\n\nconst defaultProps = {\n  beforeOpen: () => {},\n  onExit: () => {},\n  isButton: false,\n  className: '',\n  modalTitle: '',\n  resizable: false,\n  draggable: false,\n};\n\nexport default class ModalTrigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n    };\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  close() {\n    this.setState(() => ({ showModal: false }));\n  }\n\n  open(e) {\n    e.preventDefault();\n    this.props.beforeOpen();\n    this.setState(() => ({ showModal: true }));\n  }\n\n  renderModal() {\n    return (\n      <Modal\n        wrapClassName={this.props.dialogClassName}\n        className={this.props.className}\n        show={this.state.showModal}\n        onHide={this.close}\n        afterClose={this.props.onExit}\n        title={this.props.modalTitle}\n        footer={this.props.modalFooter}\n        hideFooter={!this.props.modalFooter}\n        width={this.props.width}\n        maxWidth={this.props.maxWidth}\n        responsive={this.props.responsive}\n        resizable={this.props.resizable}\n        resizableConfig={this.props.resizableConfig}\n        draggable={this.props.draggable}\n        draggableConfig={this.props.draggableConfig}\n      >\n        {this.props.modalBody}\n      </Modal>\n    );\n  }\n\n  render() {\n    if (this.props.isButton) {\n      return (\n        <>\n          <Button\n            className=\"modal-trigger\"\n            data-test=\"btn-modal-trigger\"\n            tooltip={this.props.tooltip}\n            onClick={this.open}\n          >\n            {this.props.triggerNode}\n          </Button>\n          {this.renderModal()}\n        </>\n      );\n    }\n    /* eslint-disable jsx-a11y/interactive-supports-focus */\n    return (\n      <>\n        <span data-test=\"span-modal-trigger\" onClick={this.open} role=\"button\">\n          {this.props.triggerNode}\n        </span>\n        {this.renderModal()}\n      </>\n    );\n  }\n}\n\nModalTrigger.propTypes = propTypes;\nModalTrigger.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}