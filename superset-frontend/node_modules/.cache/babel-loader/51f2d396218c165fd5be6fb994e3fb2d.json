{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { ClassNames } from '@emotion/react';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TIME_PICKER_HELPER = ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 24, columnNumber: 5 } },\n___EmotionJSX(\"h3\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 25, columnNumber: 7 } }, \"DATETIME\"),\n___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 26, columnNumber: 7 } }, t('Return to specific datetime.')),\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 27, columnNumber: 7 } }, t('Syntax')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 28, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 29, columnNumber: 9 } }, \"datetime([string])\")),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 31, columnNumber: 7 } }, t('Example')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 32, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 33, columnNumber: 9 } }, `datetime(\"2020-03-01 12:00:00\")\ndatetime(\"now\")\ndatetime(\"last year\")`))),\n\n\n___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 38, columnNumber: 5 } },\n___EmotionJSX(\"h3\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 39, columnNumber: 7 } }, \"DATEADD\"),\n___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 40, columnNumber: 7 } }, t('Moves the given set of dates by a specified interval.')),\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 41, columnNumber: 7 } }, t('Syntax')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 42, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 43, columnNumber: 9 } }, `dateadd([datetime], [integer], [dateunit])\ndateunit = (year | quarter | month | week | day | hour | minute | second)`)),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 46, columnNumber: 7 } }, t('Example')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 48, columnNumber: 9 } }, `dateadd(datetime(\"today\"), -13, day)\ndateadd(datetime(\"2020-03-01\"), 2, day)`))),\n\n\n___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 5 } },\n___EmotionJSX(\"h3\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 53, columnNumber: 7 } }, \"DATETRUNC\"),\n___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 54, columnNumber: 7 } },\nt('Truncates the specified date to the accuracy specified by the date unit.')),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 57, columnNumber: 7 } }, t('Syntax')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 58, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 59, columnNumber: 9 } }, `datetrunc([datetime], [dateunit])\ndateunit = (year | month | week)`)),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 62, columnNumber: 7 } }, t('Example')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 63, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 64, columnNumber: 9 } }, `datetrunc(datetime(\"2020-03-01\"), week)\ndatetrunc(datetime(\"2020-03-01\"), month)`))),\n\n\n___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 68, columnNumber: 5 } },\n___EmotionJSX(\"h3\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 69, columnNumber: 7 } }, \"LASTDAY\"),\n___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 7 } }, t('Get the last date by the date unit.')),\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 71, columnNumber: 7 } }, t('Syntax')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 72, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 73, columnNumber: 9 } }, `lastday([datetime], [dateunit])\ndateunit = (year | month | week)`)),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 76, columnNumber: 7 } }, t('Example')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 77, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 78, columnNumber: 9 } }, \"lastday(datetime(\\\"today\\\"), month)\"))),\n\n\n___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 81, columnNumber: 5 } },\n___EmotionJSX(\"h3\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 7 } }, \"HOLIDAY\"),\n___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 7 } }, t('Get the specify date for the holiday')),\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 7 } }, t('Syntax')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 85, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 86, columnNumber: 9 } }, `holiday([string])\nholiday([holiday string], [datetime])\nholiday([holiday string], [datetime], [country name])`)),\n\n___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 7 } }, t('Example')),\n___EmotionJSX(\"pre\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 91, columnNumber: 7 } },\n___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 92, columnNumber: 9 } }, `holiday(\"new year\")\nholiday(\"christmas\", datetime(\"2019\"))\nholiday(\"christmas\", dateadd(datetime(\"2019\"), 1, year))\nholiday(\"christmas\", datetime(\"2 years ago\"))\nholiday(\"Easter Monday\", datetime(\"2019\"), \"UK\")`))));\n\n\n\nconst StyledTooltip = (props) => {\n  const theme = useTheme();\n  return ___EmotionJSX(ClassNames, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 13 } },\n  ({ css }) => ___EmotionJSX(Tooltip, _extends({ overlayClassName: css`\n            .ant-tooltip-content {\n              min-width: ${theme.gridUnit * 125}px;\n              max-height: 410px;\n              overflow-y: scroll;\n\n              .ant-tooltip-inner {\n                max-width: ${theme.gridUnit * 125}px;\n                h3 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                h4 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                pre {\n                  border: none;\n                  text-align: left;\n                  word-break: break-word;\n                  font-size: ${theme.typography.sizes.s}px;\n                }\n              }\n            }\n          ` }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 103, columnNumber: 22 } })));\n\n};__signature__(StyledTooltip, \"useTheme{theme}\", () => [useTheme]);\nexport default function DateFunctionTooltip(props) {\n  return ___EmotionJSX(StyledTooltip, _extends({ title: TIME_PICKER_HELPER }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 131, columnNumber: 12 } }));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_PICKER_HELPER, \"TIME_PICKER_HELPER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx\");reactHotLoader.register(StyledTooltip, \"StyledTooltip\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx\");reactHotLoader.register(DateFunctionTooltip, \"DateFunctionTooltip\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DateFilterControl/components/DateFunctionTooltip.tsx"],"names":[],"mappings":"kgBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,QAAT,EAAmB,CAAnB,QAA4B,mBAA5B;AAEA,SAAS,OAAT,QAAwB,wBAAxB;AACA,SAAS,UAAT,QAA2B,gBAA3B,C;AAEA,MAAM,kBAAkB,GACtB;AACE;AACE,wHADF;AAEE,4GAAI,CAAC,CAAC,8BAAD,CAAL,CAFF;AAGE,6GAAK,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,oIADF,CAJF;;AAOE,6GAAK,CAAC,CAAC,SAAD,CAAN,CAPF;AAQE;AACE,+GAAO;;AAEO,sBAFd,CADF,CARF,CADF;;;AAeE;AACE,uHADF;AAEE,4GAAI,CAAC,CAAC,uDAAD,CAAL,CAFF;AAGE,6GAAK,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,+GAAO;AAC2D,0EADlE,CADF,CAJF;;AAQE,6GAAK,CAAC,CAAC,SAAD,CAAN,CARF;AASE;AACE,+GAAO;AACyB,wCADhC,CADF,CATF,CAfF;;;AA6BE;AACE,yHADF;AAEE;AACG,CAAC,CACA,0EADA,CADJ,CAFF;;AAOE,6GAAK,CAAC,CAAC,QAAD,CAAN,CAPF;AAQE;AACE,+GAAO;AACkB,iCADzB,CADF,CARF;;AAYE,6GAAK,CAAC,CAAC,SAAD,CAAN,CAZF;AAaE;AACE,+GAAO;AAC0B,yCADjC,CADF,CAbF,CA7BF;;;AA+CE;AACE,uHADF;AAEE,4GAAI,CAAC,CAAC,qCAAD,CAAL,CAFF;AAGE,6GAAK,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,+GAAO;AACkB,iCADzB,CADF,CAJF;;AAQE,6GAAK,CAAC,CAAC,SAAD,CAAN,CARF;AASE;AACE,qJADF,CATF,CA/CF;;;AA4DE;AACE,uHADF;AAEE,4GAAI,CAAC,CAAC,sCAAD,CAAL,CAFF;AAGE,6GAAK,CAAC,CAAC,QAAD,CAAN,CAHF;AAIE;AACE,+GAAO;;AAEuC,sDAF9C,CADF,CAJF;;AASE,6GAAK,CAAC,CAAC,SAAD,CAAN,CATF;AAUE;AACE,+GAAO;;;;AAIkC,iDAJzC,CADF,CAVF,CA5DF,CADF;;;;AAkFA,MAAM,aAAa,GAAG,CAAC,KAAD,KAAe;AACnC,QAAM,KAAK,GAAG,QAAQ,EAAtB;AACA,SACE,cAAC,UAAD;AACG,GAAC,EAAE,GAAF,EAAD,KACC,cAAC,OAAD,aACE,gBAAgB,EAAE,GAAG;;2BAEJ,KAAK,CAAC,QAAN,GAAiB,GAAG;;;;;6BAKlB,KAAK,CAAC,QAAN,GAAiB,GAAG;;+BAElB,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;iCACtB,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAAyB,IAAI;;;+BAG/B,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;iCACtB,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAAyB,IAAI;;;;;;+BAM/B,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;;;;AAI5C,WAzBH,IA0BM,KA1BN,6FAFJ,CADF;;AAkCD,CApCD,C,cAAM,a,4BACU,Q;AAqChB,eAAc,SAAU,mBAAV,CAA8B,KAA9B,EAAwC;AACpD,SAAO,cAAC,aAAD,aAAe,KAAK,EAAE,kBAAtB,IAA8C,KAA9C,6FAAP;AACD,C,iLA1HK,kB,0LAkFA,a,qLAsCkB,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme, t } from '@superset-ui/core';\n\nimport { Tooltip } from 'src/components/Tooltip';\nimport { ClassNames } from '@emotion/react';\n\nconst TIME_PICKER_HELPER = (\n  <>\n    <div>\n      <h3>DATETIME</h3>\n      <p>{t('Return to specific datetime.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>datetime([string])</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`datetime(\"2020-03-01 12:00:00\")\ndatetime(\"now\")\ndatetime(\"last year\")`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>DATEADD</h3>\n      <p>{t('Moves the given set of dates by a specified interval.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`dateadd([datetime], [integer], [dateunit])\ndateunit = (year | quarter | month | week | day | hour | minute | second)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`dateadd(datetime(\"today\"), -13, day)\ndateadd(datetime(\"2020-03-01\"), 2, day)`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>DATETRUNC</h3>\n      <p>\n        {t(\n          'Truncates the specified date to the accuracy specified by the date unit.',\n        )}\n      </p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`datetrunc([datetime], [dateunit])\ndateunit = (year | month | week)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`datetrunc(datetime(\"2020-03-01\"), week)\ndatetrunc(datetime(\"2020-03-01\"), month)`}</code>\n      </pre>\n    </div>\n    <div>\n      <h3>LASTDAY</h3>\n      <p>{t('Get the last date by the date unit.')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`lastday([datetime], [dateunit])\ndateunit = (year | month | week)`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>lastday(datetime(\"today\"), month)</code>\n      </pre>\n    </div>\n    <div>\n      <h3>HOLIDAY</h3>\n      <p>{t('Get the specify date for the holiday')}</p>\n      <h4>{t('Syntax')}</h4>\n      <pre>\n        <code>{`holiday([string])\nholiday([holiday string], [datetime])\nholiday([holiday string], [datetime], [country name])`}</code>\n      </pre>\n      <h4>{t('Example')}</h4>\n      <pre>\n        <code>{`holiday(\"new year\")\nholiday(\"christmas\", datetime(\"2019\"))\nholiday(\"christmas\", dateadd(datetime(\"2019\"), 1, year))\nholiday(\"christmas\", datetime(\"2 years ago\"))\nholiday(\"Easter Monday\", datetime(\"2019\"), \"UK\")`}</code>\n      </pre>\n    </div>\n  </>\n);\n\nconst StyledTooltip = (props: any) => {\n  const theme = useTheme();\n  return (\n    <ClassNames>\n      {({ css }) => (\n        <Tooltip\n          overlayClassName={css`\n            .ant-tooltip-content {\n              min-width: ${theme.gridUnit * 125}px;\n              max-height: 410px;\n              overflow-y: scroll;\n\n              .ant-tooltip-inner {\n                max-width: ${theme.gridUnit * 125}px;\n                h3 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                h4 {\n                  font-size: ${theme.typography.sizes.m}px;\n                  font-weight: ${theme.typography.weights.bold};\n                }\n                pre {\n                  border: none;\n                  text-align: left;\n                  word-break: break-word;\n                  font-size: ${theme.typography.sizes.s}px;\n                }\n              }\n            }\n          `}\n          {...props}\n        />\n      )}\n    </ClassNames>\n  );\n};\n\nexport default function DateFunctionTooltip(props: any) {\n  return <StyledTooltip title={TIME_PICKER_HELPER} {...props} />;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}