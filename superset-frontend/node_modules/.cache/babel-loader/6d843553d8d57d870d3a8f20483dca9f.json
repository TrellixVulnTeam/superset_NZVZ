{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/common/components';\nimport { TableCollection, Pagination } from 'src/components/dataViewCommon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_PAGE_SIZE = 10;\nexport var EmptyWrapperType;\n(function (EmptyWrapperType) {\n  EmptyWrapperType[\"Default\"] = \"Default\";\n  EmptyWrapperType[\"Small\"] = \"Small\";\n})(EmptyWrapperType || (EmptyWrapperType = {}));\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\nconst TableViewStyles = styled.div`\n  ${({ scrollTable, theme }) => scrollTable &&\n`\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) => small &&\n`\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) => `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\nconst PaginationStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) => isPaginationSticky &&\n`\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\nconst TableView = ({ columns, data, pageSize: initialPageSize, totalCount = data.length, initialPageIndex, initialSortBy = [], loading = false, withPagination = true, emptyWrapperType = EmptyWrapperType.Default, noDataText, showRowCount = true, serverPagination = false, onServerPagination = () => {}, ...props }) => {\n  const initialState = {\n    pageSize: initialPageSize != null ? initialPageSize : DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex != null ? initialPageIndex : 0,\n    sortBy: initialSortBy };\n\n  const { getTableProps, getTableBodyProps, headerGroups, page, rows, prepareRow, pageCount, gotoPage, state: { pageIndex, pageSize, sortBy } } = useTable({\n    columns,\n    data,\n    initialState,\n    manualPagination: serverPagination,\n    manualSortBy: serverPagination,\n    pageCount: Math.ceil(totalCount / initialState.pageSize) },\n  useFilters, useSortBy, usePagination);\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex });\n\n    }\n  }, [pageIndex]);\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy });\n\n    }\n  }, [sortBy]);\n  const content = withPagination ? page : rows;\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }) => ___EmotionJSX(React.Fragment, null, children);\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }) => ___EmotionJSX(EmptyWrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 117, columnNumber: 56 } }, children);}\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(TableViewStyles, _extends({}, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 122, columnNumber: 7 } }),\n  ___EmotionJSX(TableCollection, { getTableProps: getTableProps, getTableBodyProps: getTableBodyProps, prepareRow: prepareRow, headerGroups: headerGroups, rows: content, columns: columns, loading: loading, __self: this, __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 9 } }),\n  isEmpty && ___EmotionJSX(EmptyWrapperComponent, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 124, columnNumber: 22 } },\n  noDataText ? ___EmotionJSX(Empty, { image: Empty.PRESENTED_IMAGE_SIMPLE, description: noDataText, __self: this, __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 28 } }) : ___EmotionJSX(Empty, { image: Empty.PRESENTED_IMAGE_SIMPLE, __self: this, __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 103 } }))),\n\n\n  hasPagination && ___EmotionJSX(PaginationStyles, { className: \"pagination-container\", isPaginationSticky: props.isPaginationSticky, __self: this, __source: { fileName: _jsxFileName, lineNumber: 128, columnNumber: 26 } },\n  ___EmotionJSX(Pagination, { totalPages: pageCount || 0, currentPage: pageCount ? pageIndex + 1 : 0, onChange: (p) => gotoPage(p - 1), hideFirstAndLastPageLinks: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 129, columnNumber: 11 } }),\n  showRowCount && ___EmotionJSX(\"div\", { className: \"row-count-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 130, columnNumber: 29 } },\n  !loading &&\n  t('%s-%s of %s', pageSize * pageIndex + (page.length && 1), pageSize * pageIndex + page.length, totalCount))));\n\n\n\n};__signature__(TableView, \"useTable{{ getTableProps, getTableBodyProps, headerGroups, page, rows, prepareRow, pageCount, gotoPage, state: { pageIndex, pageSize, sortBy }, }}\\nuseEffect{}\\nuseEffect{}\", () => [useTable]);const _default = /*#__PURE__*/\nReact.memo(TableView);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_PAGE_SIZE, \"DEFAULT_PAGE_SIZE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(EmptyWrapperType, \"EmptyWrapperType\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(EmptyWrapper, \"EmptyWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(TableViewStyles, \"TableViewStyles\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(PaginationStyles, \"PaginationStyles\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(TableView, \"TableView\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TableView/TableView.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/common/components';\nimport { TableCollection, Pagination } from 'src/components/dataViewCommon';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  onServerPagination = () => {},\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n\n  return (\n    <>\n      <TableViewStyles {...props}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => gotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(TableView);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}