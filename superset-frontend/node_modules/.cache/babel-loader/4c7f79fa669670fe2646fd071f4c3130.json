{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import \"core-js/modules/es.string.replace.js\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport AntdIcon from '@ant-design/icons';\nimport { styled } from '@superset-ui/core';\nimport TransparentIcon from 'src/assets/images/icons/transparent.svg';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst AntdIconComponent = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconColor,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconSize, viewBox, ...rest }) => ___EmotionJSX(AntdIcon, _extends({ viewBox: viewBox || '0 0 24 24' }, rest, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 27, columnNumber: 35 } }));\nexport const StyledIcon = styled(AntdIconComponent)`\n  ${({ iconColor }) => iconColor && `color: ${iconColor};`};\n  font-size: ${({ iconSize, theme }) => iconSize ?\n`${theme.typography.sizes[iconSize] || theme.typography.sizes.m}px` :\n'24px'};\n`;\nexport const Icon = (props) => {\n  const { fileName, ...iconProps } = props;\n  const [, setLoaded] = useState(false);\n  const ImportedSVG = useRef();\n  const name = fileName.replace('_', '-');\n  useEffect(() => {\n    let cancelled = false;\n    async function importIcon() {\n      ImportedSVG.current = (await import(`!!@svgr/webpack?-svgo,+titleProp,+ref!src/assets/images/icons/${fileName}.svg`)).default;\n      if (!cancelled) {\n        setLoaded(true);\n      }\n    }\n    importIcon();\n    return () => {\n      cancelled = true;\n    };\n  }, [fileName, ImportedSVG]);\n  return ___EmotionJSX(StyledIcon, _extends({ component: ImportedSVG.current || TransparentIcon, \"aria-label\": name }, iconProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 13 } }));\n};__signature__(Icon, \"useState{[, setLoaded](false)}\\nuseRef{ImportedSVG}\\nuseEffect{}\");const _default =\nIcon;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AntdIconComponent, \"AntdIconComponent\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(StyledIcon, \"StyledIcon\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(Icon, \"Icon\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/Icons/Icon.tsx"],"names":[],"mappings":"yfAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,IAAgB,SAAhB,EAA2B,MAA3B,EAAmC,QAAnC,QAAmD,OAAnD;AACA,OAAO,QAAP,MAAqB,mBAArB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,eAAP,MAA4B,yCAA5B,C;AAGA,MAAM,iBAAiB,GAAG,CAAC;AACzB;AACA,EAAA,SAFyB;AAGzB;AACA,EAAA,QAJyB,EAKzB,OALyB,EAMzB,GAAG,IANsB,EAAD,KAQxB,cAAC,QAAD,aAAU,OAAO,EAAE,OAAO,IAAI,WAA9B,IAA+C,IAA/C,4FARF;AAWA,OAAO,MAAM,UAAU,GAAG,MAAM,CAAC,iBAAD,CAA6B;IACzD,CAAC,EAAE,SAAF,EAAD,KAAmB,SAAS,IAAI,UAAU,SAAS,GAAG;eAC3C,CAAC,EAAE,QAAF,EAAY,KAAZ,EAAD,KACX,QAAQ;AACJ,GAAG,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,QAAvB,KAAoC,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC,IAD3D;AAEJ,MAAM;AACb,CANM;AAYP,OAAO,MAAM,IAAI,GAAG,CAAC,KAAD,KAAqB;AACvC,QAAM,EAAE,QAAF,EAAY,GAAG,SAAf,KAA6B,KAAnC;AACA,QAAM,GAAG,SAAH,IAAgB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,WAAW,GAAG,MAAM,EAA1B;AACA,QAAM,IAAI,GAAG,QAAQ,CAAC,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAAb;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,SAAS,GAAG,KAAhB;AACA,mBAAe,UAAf,GAAyB;AACvB,MAAA,WAAW,CAAC,OAAZ,GAAsB,CACpB,MAAM,OACJ,iEAAiE,QAAQ,MADrE,CADc,EAIpB,OAJF;AAKA,UAAI,CAAC,SAAL,EAAgB;AACd,QAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF;AACD,IAAA,UAAU;AACV,WAAO,MAAK;AACV,MAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAAC,QAAD,EAAW,WAAX,CAhBM,CAAT;AAkBA,SACE,cAAC,UAAD,aACE,SAAS,EAAE,WAAW,CAAC,OAAZ,IAAuB,eADpC,EAEE,cAAY,IAFd,IAGM,SAHN,4FADF;AAOD,CA/BM,C,cAAM,I;AAiCE,I,CAAf,wB,iLAxDM,iB,kIAWO,U,2HAYA,I","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport AntdIcon from '@ant-design/icons';\nimport { styled } from '@superset-ui/core';\nimport TransparentIcon from 'src/assets/images/icons/transparent.svg';\nimport IconType from './IconType';\n\nconst AntdIconComponent = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconColor,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  iconSize,\n  viewBox,\n  ...rest\n}: Omit<IconType, 'ref' | 'css'>) => (\n  <AntdIcon viewBox={viewBox || '0 0 24 24'} {...rest} />\n);\n\nexport const StyledIcon = styled(AntdIconComponent)<IconType>`\n  ${({ iconColor }) => iconColor && `color: ${iconColor};`};\n  font-size: ${({ iconSize, theme }) =>\n    iconSize\n      ? `${theme.typography.sizes[iconSize] || theme.typography.sizes.m}px`\n      : '24px'};\n`;\n\ninterface IconProps extends IconType {\n  fileName: string;\n}\n\nexport const Icon = (props: IconProps) => {\n  const { fileName, ...iconProps } = props;\n  const [, setLoaded] = useState(false);\n  const ImportedSVG = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const name = fileName.replace('_', '-');\n\n  useEffect(() => {\n    let cancelled = false;\n    async function importIcon(): Promise<void> {\n      ImportedSVG.current = (\n        await import(\n          `!!@svgr/webpack?-svgo,+titleProp,+ref!src/assets/images/icons/${fileName}.svg`\n        )\n      ).default;\n      if (!cancelled) {\n        setLoaded(true);\n      }\n    }\n    importIcon();\n    return () => {\n      cancelled = true;\n    };\n  }, [fileName, ImportedSVG]);\n\n  return (\n    <StyledIcon\n      component={ImportedSVG.current || TransparentIcon}\n      aria-label={name}\n      {...iconProps}\n    />\n  );\n};\n\nexport default Icon;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}