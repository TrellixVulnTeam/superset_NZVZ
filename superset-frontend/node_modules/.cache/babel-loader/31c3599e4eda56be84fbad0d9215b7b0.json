{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import OverwritePolicy from './OverwritePolicy';\n/**\n * Create a registry state from the given config\n * @param config\n */\n\nexport default function createRegistryState({\n  globalId,\n  name,\n  version = '0.x.x',\n  defaultKey,\n  setFirstItemAsDefault = false,\n  overwritePolicy = OverwritePolicy.ALLOW })\n{\n  return {\n    globalId,\n    name,\n    version,\n    defaultKey,\n    initialDefaultKey: defaultKey,\n    setFirstItemAsDefault,\n    overwritePolicy,\n    items: {},\n    promises: {} };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createRegistryState, \"createRegistryState\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/registry/esm/models/createRegistryState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/registry/esm/models/createRegistryState.js"],"names":["OverwritePolicy","createRegistryState","globalId","name","version","defaultKey","setFirstItemAsDefault","overwritePolicy","ALLOW","initialDefaultKey","items","promises"],"mappings":"uSAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,QAD0C;AAE1CC,EAAAA,IAF0C;AAG1CC,EAAAA,OAAO,GAAG,OAHgC;AAI1CC,EAAAA,UAJ0C;AAK1CC,EAAAA,qBAAqB,GAAG,KALkB;AAM1CC,EAAAA,eAAe,GAAGP,eAAe,CAACQ,KANQ,EAA7B;AAOZ;AACD,SAAO;AACLN,IAAAA,QADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA,UAJK;AAKLI,IAAAA,iBAAiB,EAAEJ,UALd;AAMLC,IAAAA,qBANK;AAOLC,IAAAA,eAPK;AAQLG,IAAAA,KAAK,EAAE,EARF;AASLC,IAAAA,QAAQ,EAAE,EATL,EAAP;;AAWD,C,iLAnBuBV,mB","sourcesContent":["import OverwritePolicy from './OverwritePolicy';\n/**\n * Create a registry state from the given config\n * @param config\n */\n\nexport default function createRegistryState({\n  globalId,\n  name,\n  version = '0.x.x',\n  defaultKey,\n  setFirstItemAsDefault = false,\n  overwritePolicy = OverwritePolicy.ALLOW\n}) {\n  return {\n    globalId,\n    name,\n    version,\n    defaultKey,\n    initialDefaultKey: defaultKey,\n    setFirstItemAsDefault,\n    overwritePolicy,\n    items: {},\n    promises: {}\n  };\n}"]},"metadata":{},"sourceType":"module"}