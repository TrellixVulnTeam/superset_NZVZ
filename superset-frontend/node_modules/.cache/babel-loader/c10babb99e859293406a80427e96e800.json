{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/modules/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ResultSet from '../ResultSet';\nimport ModalTrigger from '../../../components/ModalTrigger';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  columns: PropTypes.array,\n  actions: PropTypes.object,\n  queries: PropTypes.array,\n  onUserClicked: PropTypes.func,\n  onDbClicked: PropTypes.func,\n  displayLimit: PropTypes.number.isRequired };\n\nconst defaultProps = {\n  columns: ['started', 'duration', 'rows'],\n  queries: [],\n  onUserClicked: () => {},\n  onDbClicked: () => {} };\n\n\nconst openQuery = (id) => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst QueryTable = (props) => {\n  const theme = useTheme();\n  const statusAttributes = {\n    success: {\n      config: {\n        icon: ___EmotionJSX(Icons.Check, { iconColor: theme.colors.success.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 62, columnNumber: 15 } }),\n        label: t('Success') } },\n\n\n    failed: {\n      config: {\n        icon: ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.error.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 68, columnNumber: 15 } }),\n        label: t('Failed') } },\n\n\n    stopped: {\n      config: {\n        icon: ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.error.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 74, columnNumber: 15 } }),\n        label: t('Failed') } },\n\n\n    running: {\n      config: {\n        icon: ___EmotionJSX(Icons.Running, { iconColor: theme.colors.primary.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 80, columnNumber: 15 } }),\n        label: t('Running') } },\n\n\n    fetching: {\n      config: {\n        icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.primary.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 86, columnNumber: 15 } }),\n        label: t('fetching') } },\n\n\n    timed_out: {\n      config: {\n        icon: ___EmotionJSX(Icons.Offline, { iconColor: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 92, columnNumber: 15 } }),\n        label: t('Offline') } },\n\n\n    scheduled: {\n      config: {\n        icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 98, columnNumber: 15 } }),\n        label: t('Scheduled') } },\n\n\n    pending: {\n      config: {\n        icon: ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 104, columnNumber: 15 } }),\n        label: t('Scheduled') } },\n\n\n    error: {\n      config: {\n        icon: ___EmotionJSX(Icons.Error, { iconColor: theme.colors.error.base, __self: this, __source: { fileName: _jsxFileName, lineNumber: 110, columnNumber: 15 } }),\n        label: t('Unknown Status') } } };\n\n\n\n\n  const setHeaders = (column) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columns = useMemo(\n  () =>\n  props.columns.map((column) => ({\n    accessor: column,\n    Header: () => setHeaders(column),\n    disableSortBy: true })),\n\n  [props.columns]);\n\n\n  const user = useSelector(({ sqlLab: { user } }) => user);\n\n  const data = useMemo(() => {\n    const restoreSql = (query) => {\n      props.actions.queryEditorSetSql({ id: query.sqlEditorId }, query.sql);\n    };\n\n    const openQueryInNewTab = (query) => {\n      props.actions.cloneQueryToNewTab(query, true);\n    };\n\n    const openAsyncResults = (query, displayLimit) => {\n      props.actions.fetchQueryResults(query, displayLimit);\n    };\n\n    const clearQueryResults = (query) => {\n      props.actions.clearQueryResults(query);\n    };\n\n    const removeQuery = (query) => {\n      props.actions.removeQuery(query);\n    };\n\n    return props.queries.\n    map((query) => {\n      const q = { ...query };\n      const status = statusAttributes[q.state] || statusAttributes.error;\n\n      if (q.endDttm) {\n        q.duration = fDuration(q.startDttm, q.endDttm);\n      }\n      const time = moment(q.startDttm).format().split('T');\n      q.time =\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 165, columnNumber: 11 } },\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 13 } },\n      time[0], \" \", ___EmotionJSX(\"br\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 167, columnNumber: 25 } }), \" \", time[1]));\n\n\n\n      q.user =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => props.onUserClicked(q.userId), __self: this, __source: { fileName: _jsxFileName, lineNumber: 172, columnNumber: 11 } },\n\n      q.user);\n\n\n      q.db =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => props.onDbClicked(q.dbId), __self: this, __source: { fileName: _jsxFileName, lineNumber: 181, columnNumber: 11 } },\n\n      q.db);\n\n\n      q.started = moment(q.startDttm).format('HH:mm:ss');\n      q.querylink =\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"link\",\n        onClick: () => openQuery(q.queryId), __self: this, __source: { fileName: _jsxFileName, lineNumber: 191, columnNumber: 11 } },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-external-link m-r-3\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 196, columnNumber: 13 } }),\n      t('Edit'));\n\n\n      q.sql =\n      ___EmotionJSX(Card, { css: [StaticPosition, process.env.NODE_ENV === \"production\" ? \"\" : \";label:q-sql;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"], __self: this, __source: { fileName: _jsxFileName, lineNumber: 201, columnNumber: 11 } },\n      ___EmotionJSX(HighlightedSql, {\n        sql: q.sql,\n        rawSql: q.executedSql,\n        shrink: true,\n        maxWidth: 60, __self: this, __source: { fileName: _jsxFileName, lineNumber: 202, columnNumber: 13 } }));\n\n\n\n      if (q.resultsKey) {\n        q.output =\n        ___EmotionJSX(ModalTrigger, {\n          className: \"ResultsModal\",\n          triggerNode:\n          ___EmotionJSX(Label, { type: \"info\", className: \"pointer\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 215, columnNumber: 17 } },\n          t('View results')),\n\n\n          modalTitle: t('Data preview'),\n          beforeOpen: () => openAsyncResults(query, props.displayLimit),\n          onExit: () => clearQueryResults(query),\n          modalBody:\n          ___EmotionJSX(ResultSet, {\n            showSql: true,\n            user: user,\n            query: query,\n            actions: props.actions,\n            height: 400,\n            displayLimit: props.displayLimit, __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 17 } }),\n\n\n          responsive: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 212, columnNumber: 13 } });\n\n\n      } else {\n        // if query was run using ctas and force_ctas_schema was set\n        // tempTable will have the schema\n        const schemaUsed =\n        q.ctas && q.tempTable && q.tempTable.includes('.') ? '' : q.schema;\n        q.output = [schemaUsed, q.tempTable].filter((v) => v).join('.');\n      }\n      q.progress =\n      q.state === 'success' ?\n      ___EmotionJSX(ProgressBar, {\n        percent: parseInt(q.progress.toFixed(0), 10),\n        striped: true,\n        showInfo: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 244, columnNumber: 13 } }) :\n\n\n      ___EmotionJSX(ProgressBar, {\n        percent: parseInt(q.progress.toFixed(0), 10),\n        striped: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 250, columnNumber: 13 } });\n\n\n      q.state =\n      ___EmotionJSX(Tooltip, { title: status.config.label, placement: \"bottom\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 256, columnNumber: 11 } },\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 257, columnNumber: 13 } }, status.config.icon));\n\n\n      q.actions =\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 261, columnNumber: 11 } },\n      ___EmotionJSX(StyledTooltip, {\n        onClick: () => restoreSql(query),\n        tooltip: t(\n        'Overwrite text in the editor with a query on this table'),\n\n        placement: \"top\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 262, columnNumber: 13 } },\n\n      ___EmotionJSX(Icons.Edit, { iconSize: \"small\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 269, columnNumber: 15 } })),\n\n      ___EmotionJSX(StyledTooltip, {\n        onClick: () => openQueryInNewTab(query),\n        tooltip: t('Run query in a new tab'),\n        placement: \"top\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 271, columnNumber: 13 } },\n\n      ___EmotionJSX(Icons.PlusCircleOutlined, {\n        iconSize: \"x-small\",\n        css: verticalAlign, __self: this, __source: { fileName: _jsxFileName, lineNumber: 276, columnNumber: 15 } })),\n\n\n      ___EmotionJSX(StyledTooltip, {\n        tooltip: t('Remove query from log'),\n        onClick: () => removeQuery(query), __self: this, __source: { fileName: _jsxFileName, lineNumber: 281, columnNumber: 13 } },\n\n      ___EmotionJSX(Icons.Trash, { iconSize: \"x-small\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 285, columnNumber: 15 } })));\n\n\n\n      return q;\n    }).\n    reverse();\n  }, [props]);\n\n  return (\n    ___EmotionJSX(\"div\", { className: \"QueryTable\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 295, columnNumber: 5 } },\n    ___EmotionJSX(TableView, {\n      columns: columns,\n      data: data,\n      className: \"table-condensed\",\n      pageSize: 50, __self: this, __source: { fileName: _jsxFileName, lineNumber: 296, columnNumber: 7 } })));\n\n\n\n};__signature__(QueryTable, \"useTheme{theme}\\nuseMemo{columns}\\nuseSelector{user}\\nuseMemo{data}\", () => [useTheme, useSelector]);\n\nQueryTable.propTypes = propTypes;\nQueryTable.defaultProps = defaultProps;const _default =\n\nQueryTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(openQuery, \"openQuery\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(QueryTable, \"QueryTable\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/QueryTable/index.jsx"],"names":["React","useMemo","PropTypes","moment","Card","ProgressBar","Label","t","useTheme","useSelector","TableView","Button","fDuration","Icons","Tooltip","ResultSet","ModalTrigger","HighlightedSql","StaticPosition","verticalAlign","StyledTooltip","propTypes","columns","array","actions","object","queries","onUserClicked","func","onDbClicked","displayLimit","number","isRequired","defaultProps","openQuery","id","url","window","open","QueryTable","props","theme","statusAttributes","success","config","icon","colors","base","label","failed","error","stopped","running","primary","fetching","timed_out","grayscale","light1","scheduled","pending","setHeaders","column","toUpperCase","charAt","concat","slice","map","accessor","Header","disableSortBy","user","sqlLab","data","restoreSql","query","queryEditorSetSql","sqlEditorId","sql","openQueryInNewTab","cloneQueryToNewTab","openAsyncResults","fetchQueryResults","clearQueryResults","removeQuery","q","status","state","endDttm","duration","startDttm","time","format","split","userId","db","dbId","started","querylink","queryId","executedSql","resultsKey","output","schemaUsed","ctas","tempTable","includes","schema","filter","v","join","progress","parseInt","toFixed","reverse"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/modules/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ResultSet from '../ResultSet';\nimport ModalTrigger from '../../../components/ModalTrigger';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';\n\nconst propTypes = {\n  columns: PropTypes.array,\n  actions: PropTypes.object,\n  queries: PropTypes.array,\n  onUserClicked: PropTypes.func,\n  onDbClicked: PropTypes.func,\n  displayLimit: PropTypes.number.isRequired,\n};\nconst defaultProps = {\n  columns: ['started', 'duration', 'rows'],\n  queries: [],\n  onUserClicked: () => {},\n  onDbClicked: () => {},\n};\n\nconst openQuery = id => {\n  const url = `/superset/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst QueryTable = props => {\n  const theme = useTheme();\n  const statusAttributes = {\n    success: {\n      config: {\n        icon: <Icons.Check iconColor={theme.colors.success.base} />,\n        label: t('Success'),\n      },\n    },\n    failed: {\n      config: {\n        icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n        label: t('Failed'),\n      },\n    },\n    stopped: {\n      config: {\n        icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n        label: t('Failed'),\n      },\n    },\n    running: {\n      config: {\n        icon: <Icons.Running iconColor={theme.colors.primary.base} />,\n        label: t('Running'),\n      },\n    },\n    fetching: {\n      config: {\n        icon: <Icons.Queued iconColor={theme.colors.primary.base} />,\n        label: t('fetching'),\n      },\n    },\n    timed_out: {\n      config: {\n        icon: <Icons.Offline iconColor={theme.colors.grayscale.light1} />,\n        label: t('Offline'),\n      },\n    },\n    scheduled: {\n      config: {\n        icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n        label: t('Scheduled'),\n      },\n    },\n    pending: {\n      config: {\n        icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n        label: t('Scheduled'),\n      },\n    },\n    error: {\n      config: {\n        icon: <Icons.Error iconColor={theme.colors.error.base} />,\n        label: t('Unknown Status'),\n      },\n    },\n  };\n\n  const setHeaders = column => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columns = useMemo(\n    () =>\n      props.columns.map(column => ({\n        accessor: column,\n        Header: () => setHeaders(column),\n        disableSortBy: true,\n      })),\n    [props.columns],\n  );\n\n  const user = useSelector(({ sqlLab: { user } }) => user);\n\n  const data = useMemo(() => {\n    const restoreSql = query => {\n      props.actions.queryEditorSetSql({ id: query.sqlEditorId }, query.sql);\n    };\n\n    const openQueryInNewTab = query => {\n      props.actions.cloneQueryToNewTab(query, true);\n    };\n\n    const openAsyncResults = (query, displayLimit) => {\n      props.actions.fetchQueryResults(query, displayLimit);\n    };\n\n    const clearQueryResults = query => {\n      props.actions.clearQueryResults(query);\n    };\n\n    const removeQuery = query => {\n      props.actions.removeQuery(query);\n    };\n\n    return props.queries\n      .map(query => {\n        const q = { ...query };\n        const status = statusAttributes[q.state] || statusAttributes.error;\n\n        if (q.endDttm) {\n          q.duration = fDuration(q.startDttm, q.endDttm);\n        }\n        const time = moment(q.startDttm).format().split('T');\n        q.time = (\n          <div>\n            <span>\n              {time[0]} <br /> {time[1]}\n            </span>\n          </div>\n        );\n        q.user = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => props.onUserClicked(q.userId)}\n          >\n            {q.user}\n          </Button>\n        );\n        q.db = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => props.onDbClicked(q.dbId)}\n          >\n            {q.db}\n          </Button>\n        );\n        q.started = moment(q.startDttm).format('HH:mm:ss');\n        q.querylink = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => openQuery(q.queryId)}\n          >\n            <i className=\"fa fa-external-link m-r-3\" />\n            {t('Edit')}\n          </Button>\n        );\n        q.sql = (\n          <Card css={[StaticPosition]}>\n            <HighlightedSql\n              sql={q.sql}\n              rawSql={q.executedSql}\n              shrink\n              maxWidth={60}\n            />\n          </Card>\n        );\n        if (q.resultsKey) {\n          q.output = (\n            <ModalTrigger\n              className=\"ResultsModal\"\n              triggerNode={\n                <Label type=\"info\" className=\"pointer\">\n                  {t('View results')}\n                </Label>\n              }\n              modalTitle={t('Data preview')}\n              beforeOpen={() => openAsyncResults(query, props.displayLimit)}\n              onExit={() => clearQueryResults(query)}\n              modalBody={\n                <ResultSet\n                  showSql\n                  user={user}\n                  query={query}\n                  actions={props.actions}\n                  height={400}\n                  displayLimit={props.displayLimit}\n                />\n              }\n              responsive\n            />\n          );\n        } else {\n          // if query was run using ctas and force_ctas_schema was set\n          // tempTable will have the schema\n          const schemaUsed =\n            q.ctas && q.tempTable && q.tempTable.includes('.') ? '' : q.schema;\n          q.output = [schemaUsed, q.tempTable].filter(v => v).join('.');\n        }\n        q.progress =\n          q.state === 'success' ? (\n            <ProgressBar\n              percent={parseInt(q.progress.toFixed(0), 10)}\n              striped\n              showInfo={false}\n            />\n          ) : (\n            <ProgressBar\n              percent={parseInt(q.progress.toFixed(0), 10)}\n              striped\n            />\n          );\n        q.state = (\n          <Tooltip title={status.config.label} placement=\"bottom\">\n            <span>{status.config.icon}</span>\n          </Tooltip>\n        );\n        q.actions = (\n          <div>\n            <StyledTooltip\n              onClick={() => restoreSql(query)}\n              tooltip={t(\n                'Overwrite text in the editor with a query on this table',\n              )}\n              placement=\"top\"\n            >\n              <Icons.Edit iconSize=\"small\" />\n            </StyledTooltip>\n            <StyledTooltip\n              onClick={() => openQueryInNewTab(query)}\n              tooltip={t('Run query in a new tab')}\n              placement=\"top\"\n            >\n              <Icons.PlusCircleOutlined\n                iconSize=\"x-small\"\n                css={verticalAlign}\n              />\n            </StyledTooltip>\n            <StyledTooltip\n              tooltip={t('Remove query from log')}\n              onClick={() => removeQuery(query)}\n            >\n              <Icons.Trash iconSize=\"x-small\" />\n            </StyledTooltip>\n          </div>\n        );\n        return q;\n      })\n      .reverse();\n  }, [props]);\n\n  return (\n    <div className=\"QueryTable\">\n      <TableView\n        columns={columns}\n        data={data}\n        className=\"table-condensed\"\n        pageSize={50}\n      />\n    </div>\n  );\n};\n\nQueryTable.propTypes = propTypes;\nQueryTable.defaultProps = defaultProps;\n\nexport default QueryTable;\n"]},"metadata":{},"sourceType":"module"}