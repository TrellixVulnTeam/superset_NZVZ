{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopover.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FormattingPopoverContent } from './FormattingPopoverContent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const FormattingPopover = ({ title, columns, onChange, config, children, ...props }) => {\n  const [visible, setVisible] = useState(false);\n  const handleSave = useCallback((newConfig) => {\n    setVisible(false);\n    onChange(newConfig);\n  }, [onChange]);\n  return ___EmotionJSX(Popover, _extends({ title: title, content: ___EmotionJSX(FormattingPopoverContent, { onChange: handleSave, config: config, columns: columns, __self: this, __source: { fileName: _jsxFileName, lineNumber: 28, columnNumber: 45 } }), visible: visible, onVisibleChange: setVisible, trigger: ['click'], overlayStyle: { width: '450px' } }, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 28, columnNumber: 13 } }),\n  children);\n\n};__signature__(FormattingPopover, \"useState{[visible, setVisible](false)}\\nuseCallback{handleSave}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FormattingPopover, \"FormattingPopover\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopover.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopover.tsx"],"names":[],"mappings":"ggBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,WAAhB,EAA6B,QAA7B,QAA6C,OAA7C;AACA,OAAO,OAAP,MAAoB,wBAApB;AACA,SAAS,wBAAT,QAAyC,4BAAzC,C;AAGA,OAAO,MAAM,iBAAiB,GAAG,CAAC,EAChC,KADgC,EAEhC,OAFgC,EAGhC,QAHgC,EAIhC,MAJgC,EAKhC,QALgC,EAMhC,GAAG,KAN6B,EAAD,KAOJ;AAC3B,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,UAAU,GAAG,WAAW,CAC5B,CAAC,SAAD,KAA2C;AACzC,IAAA,UAAU,CAAC,KAAD,CAAV;AACA,IAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAJ2B,EAK5B,CAAC,QAAD,CAL4B,CAA9B;AAQA,SACE,cAAC,OAAD,aACE,KAAK,EAAE,KADT,EAEE,OAAO,EACL,cAAC,wBAAD,IACE,QAAQ,EAAE,UADZ,EAEE,MAAM,EAAE,MAFV,EAGE,OAAO,EAAE,OAHX,yFAHJ,EASE,OAAO,EAAE,OATX,EAUE,eAAe,EAAE,UAVnB,EAWE,OAAO,EAAE,CAAC,OAAD,CAXX,EAYE,YAAY,EAAE,EAAE,KAAK,EAAE,OAAT,EAZhB,IAaM,KAbN;AAeG,EAAA,QAfH,CADF;;AAmBD,CArCM,C,cAAM,iB,sPAAA,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FormattingPopoverContent } from './FormattingPopoverContent';\nimport { ConditionalFormattingConfig, FormattingPopoverProps } from './types';\n\nexport const FormattingPopover = ({\n  title,\n  columns,\n  onChange,\n  config,\n  children,\n  ...props\n}: FormattingPopoverProps) => {\n  const [visible, setVisible] = useState(false);\n\n  const handleSave = useCallback(\n    (newConfig: ConditionalFormattingConfig) => {\n      setVisible(false);\n      onChange(newConfig);\n    },\n    [onChange],\n  );\n\n  return (\n    <Popover\n      title={title}\n      content={\n        <FormattingPopoverContent\n          onChange={handleSave}\n          config={config}\n          columns={columns}\n        />\n      }\n      visible={visible}\n      onVisibleChange={setVisible}\n      trigger={['click']}\n      overlayStyle={{ width: '450px' }}\n      {...props}\n    >\n      {children}\n    </Popover>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}