{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import { css as _css } from \"@emotion/react\";import _kebabCase from \"lodash/kebabCase\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Children } from 'react';\n\nimport { mix } from 'polished';\nimport cx from 'classnames';\nimport { Button as AntdButton } from 'antd';\nimport { useTheme } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function Button(props) {\n  const { tooltip, placement, disabled = false, buttonSize, buttonStyle, className, cta, children, href, showMarginRight = true, ...restProps } = props;\n  const theme = useTheme();\n  const { colors, transitionTiming, borderRadius, typography } = theme;\n  const { primary, grayscale, success, warning, error } = colors;\n  let height = 32;\n  let padding = 18;\n  if (buttonSize === 'xsmall') {\n    height = 22;\n    padding = 5;\n  } else\n  if (buttonSize === 'small') {\n    height = 30;\n    padding = 10;\n  }\n  let backgroundColor = primary.light4;\n  let backgroundColorHover = mix(0.1, primary.base, primary.light4);\n  let backgroundColorActive = mix(0.25, primary.base, primary.light4);\n  let backgroundColorDisabled = grayscale.light2;\n  let color = primary.dark1;\n  let colorHover = color;\n  let borderWidth = 0;\n  let borderStyle = 'none';\n  let borderColor = 'transparent';\n  let borderColorHover = 'transparent';\n  let borderColorDisabled = 'transparent';\n  if (buttonStyle === 'primary') {\n    backgroundColor = primary.dark1;\n    backgroundColorHover = mix(0.1, grayscale.light5, primary.dark1);\n    backgroundColorActive = mix(0.2, grayscale.dark2, primary.dark1);\n    color = grayscale.light5;\n    colorHover = color;\n  } else\n  if (buttonStyle === 'tertiary' || buttonStyle === 'dashed') {\n    backgroundColor = grayscale.light5;\n    backgroundColorHover = grayscale.light5;\n    backgroundColorActive = grayscale.light5;\n    backgroundColorDisabled = grayscale.light5;\n    borderWidth = 1;\n    borderStyle = buttonStyle === 'dashed' ? 'dashed' : 'solid';\n    borderColor = primary.dark1;\n    borderColorHover = primary.light1;\n    borderColorDisabled = grayscale.light2;\n  } else\n  if (buttonStyle === 'danger') {\n    backgroundColor = error.base;\n    backgroundColorHover = mix(0.1, grayscale.light5, error.base);\n    backgroundColorActive = mix(0.2, grayscale.dark2, error.base);\n    color = grayscale.light5;\n    colorHover = color;\n  } else\n  if (buttonStyle === 'warning') {\n    backgroundColor = warning.base;\n    backgroundColorHover = mix(0.1, grayscale.dark2, warning.base);\n    backgroundColorActive = mix(0.2, grayscale.dark2, warning.base);\n    color = grayscale.light5;\n    colorHover = color;\n  } else\n  if (buttonStyle === 'success') {\n    backgroundColor = success.base;\n    backgroundColorHover = mix(0.1, grayscale.light5, success.base);\n    backgroundColorActive = mix(0.2, grayscale.dark2, success.base);\n    color = grayscale.light5;\n    colorHover = color;\n  } else\n  if (buttonStyle === 'link') {\n    backgroundColor = 'transparent';\n    backgroundColorHover = 'transparent';\n    backgroundColorActive = 'transparent';\n    colorHover = primary.base;\n  }\n  const element = children;\n  let renderedChildren = [];\n  if (element && element.type === React.Fragment) {\n    renderedChildren = Children.toArray(element.props.children);\n  } else\n  {\n    renderedChildren = Children.toArray(children);\n  }\n  const firstChildMargin = showMarginRight && renderedChildren.length > 1 ? theme.gridUnit * 2 : 0;\n  const button = ___EmotionJSX(AntdButton, _extends({ href: disabled ? undefined : href, disabled: disabled, className: cx(className, 'superset-button', { cta: !!cta }), css: /*#__PURE__*/_css({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      lineHeight: 1.5715,\n      fontSize: typography.sizes.s,\n      fontWeight: typography.weights.bold,\n      height,\n      textTransform: 'uppercase',\n      padding: `0px ${padding}px`,\n      transition: `all ${transitionTiming}s`,\n      minWidth: cta ? theme.gridUnit * 36 : undefined,\n      minHeight: cta ? theme.gridUnit * 8 : undefined,\n      boxShadow: 'none',\n      borderWidth,\n      borderStyle,\n      borderColor,\n      borderRadius,\n      color,\n      backgroundColor,\n      '&:hover': {\n        color: colorHover,\n        backgroundColor: backgroundColorHover,\n        borderColor: borderColorHover },\n\n      '&:active': {\n        color,\n        backgroundColor: backgroundColorActive },\n\n      '&:focus': {\n        color,\n        backgroundColor,\n        borderColor },\n\n      '&[disabled], &[disabled]:hover': {\n        color: grayscale.base,\n        backgroundColor: backgroundColorDisabled,\n        borderColor: borderColorDisabled },\n\n      marginLeft: 0,\n      '& + .superset-button': {\n        marginLeft: theme.gridUnit * 2 },\n\n      '& :first-of-type': {\n        marginRight: firstChildMargin } }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:button;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n\n  restProps),\n  children);\n\n  if (tooltip) {\n    return ___EmotionJSX(Tooltip, { placement: placement, id: `${_kebabCase(tooltip)}-tooltip`, title: tooltip },\n\n\n    disabled ? ___EmotionJSX(\"span\", null, button) : button);\n\n  }\n  return button;\n}","map":null,"metadata":{},"sourceType":"module"}