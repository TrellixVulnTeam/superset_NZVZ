{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import createTimeRangeFormatter from '../createTimeRangeFormatter';\nimport { formatTime, getTimeFormatter } from '../../time';\nexport default function createNaiveTimeRangeFormatter({\n  format,\n  id,\n  label,\n  description })\n{\n  return createTimeRangeFormatter((range) => {\n    const [start, end] = range.map((value) => formatTime(format, value));\n    return start === end ? start : [start, end].join(' — ');\n  }, {\n    id: id != null ? id : format,\n    useLocalTime: getTimeFormatter(format).useLocalTime,\n    label,\n    description });\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createNaiveTimeRangeFormatter, \"createNaiveTimeRangeFormatter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/esm/timeRange/factories/createNaiveTimeRangeFormatter.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/esm/timeRange/factories/createNaiveTimeRangeFormatter.js"],"names":["createTimeRangeFormatter","formatTime","getTimeFormatter","createNaiveTimeRangeFormatter","format","id","label","description","range","start","end","map","value","join","useLocalTime"],"mappings":"uSAAA,OAAOA,wBAAP,MAAqC,6BAArC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,eAAe,SAASC,6BAAT,CAAuC;AACpDC,EAAAA,MADoD;AAEpDC,EAAAA,EAFoD;AAGpDC,EAAAA,KAHoD;AAIpDC,EAAAA,WAJoD,EAAvC;AAKZ;AACD,SAAOP,wBAAwB,CAAC,CAAAQ,KAAK,KAAI;AACvC,UAAM,CAACC,KAAD,EAAQC,GAAR,IAAeF,KAAK,CAACG,GAAN,CAAU,CAAAC,KAAK,KAAIX,UAAU,CAACG,MAAD,EAASQ,KAAT,CAA7B,CAArB;AACA,WAAOH,KAAK,KAAKC,GAAV,GAAgBD,KAAhB,GAAwB,CAACA,KAAD,EAAQC,GAAR,EAAaG,IAAb,CAAkB,KAAlB,CAA/B;AACD,GAH8B,EAG5B;AACDR,IAAAA,EAAE,EAAEA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBD,MADrB;AAEDU,IAAAA,YAAY,EAAEZ,gBAAgB,CAACE,MAAD,CAAhB,CAAyBU,YAFtC;AAGDR,IAAAA,KAHC;AAIDC,IAAAA,WAJC,EAH4B,CAA/B;;AASD,C,iLAfuBJ,6B","sourcesContent":["import createTimeRangeFormatter from '../createTimeRangeFormatter';\nimport { formatTime, getTimeFormatter } from '../../time';\nexport default function createNaiveTimeRangeFormatter({\n  format,\n  id,\n  label,\n  description\n}) {\n  return createTimeRangeFormatter(range => {\n    const [start, end] = range.map(value => formatTime(format, value));\n    return start === end ? start : [start, end].join(' — ');\n  }, {\n    id: id != null ? id : format,\n    useLocalTime: getTimeFormatter(format).useLocalTime,\n    label,\n    description\n  });\n}"]},"metadata":{},"sourceType":"module"}