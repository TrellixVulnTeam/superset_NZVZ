{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport handleHover from './handleHover';\nimport handleDrop from './handleDrop';\n\n// note: the 'type' hook is not useful for us as dropping is contigent on other properties\nconst TYPE = 'DRAG_DROPPABLE';\n\nexport const dragConfig = [\nTYPE,\n{\n  canDrag(props) {\n    return !props.disableDragDrop;\n  },\n\n  // this defines the dragging item object returned by monitor.getItem()\n  beginDrag(props /* , monitor, component */) {\n    const { component, index, parentComponent = {} } = props;\n    return {\n      type: component.type,\n      id: component.id,\n      meta: component.meta,\n      index,\n      parentId: parentComponent.id,\n      parentType: parentComponent.type };\n\n  } },\n\nfunction dragStateToProps(connect, monitor) {\n  return {\n    dragSourceRef: connect.dragSource(),\n    dragPreviewRef: connect.dragPreview(),\n    isDragging: monitor.isDragging() };\n\n}];\n\n\nexport const dropConfig = [\nTYPE,\n{\n  canDrop(props) {\n    return !props.disableDragDrop;\n  },\n  hover(props, monitor, component) {\n    if (component && component.mounted) {\n      handleHover(props, monitor, component);\n    }\n  },\n  // note:\n  //  the react-dnd api requires that the drop() method return a result or undefined\n  //  monitor.didDrop() cannot be used because it returns true only for the most-nested target\n  drop(props, monitor, component) {\n    const dropResult = monitor.getDropResult();\n    if ((!dropResult || !dropResult.destination) && component.mounted) {\n      return handleDrop(props, monitor, component);\n    }\n    return undefined;\n  } },\n\nfunction dropStateToProps(connect, monitor) {\n  return {\n    droppableRef: connect.dropTarget(),\n    isDraggingOver: monitor.isOver(),\n    isDraggingOverShallow: monitor.isOver({ shallow: true }) };\n\n}];;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TYPE, \"TYPE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dragConfig, \"dragConfig\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dropConfig, \"dropConfig\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(TYPE, \"TYPE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dragConfig, \"dragConfig\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");reactHotLoader.register(dropConfig, \"dropConfig\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/dnd/dragDroppableConfig.js"],"names":["TYPE","dragConfig","canDrag","props","beginDrag","parentComponent","type","component","id","meta","parentId","parentType","dragSourceRef","connect","dragPreviewRef","isDragging","monitor","dropConfig","canDrop","hover","handleHover","drop","dropResult","handleDrop","droppableRef","isDraggingOver","isDraggingOverShallow","shallow"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,UAAA,MAAA,cAAA;;AAEA;AACA,MAAMA,IAAI,GAAV,gBAAA;;AAEA,OAAO,MAAMC,UAAU,GAAG;AAAA,IAAA;AAExB;AACEC,EAAAA,OAAO,CAAA,KAAA,EAAQ;AACb,WAAO,CAACC,KAAK,CAAb,eAAA;AAFJ,GAAA;;AAKE;AACAC,EAAAA,SAAS,CAAA,KAAA,CAAA,0BAAA,EAAmC;AAC1C,UAAM,EAAA,SAAA,EAAA,KAAA,EAAoBC,eAAe,GAAnC,EAAA,KAAN,KAAA;AACA,WAAO;AACLC,MAAAA,IAAI,EAAEC,SAAS,CADV,IAAA;AAELC,MAAAA,EAAE,EAAED,SAAS,CAFR,EAAA;AAGLE,MAAAA,IAAI,EAAEF,SAAS,CAHV,IAAA;AAAA,MAAA,KAAA;AAKLG,MAAAA,QAAQ,EAAEL,eAAe,CALpB,EAAA;AAMLM,MAAAA,UAAU,EAAEN,eAAe,CAN7B,IAAO,EAAP;;AAVoB,GAExB,EAFwB;;AAoBxB,SAAA,gBAAA,CAAA,OAAA,EAAA,OAAA,EAA4C;AAC1C,SAAO;AACLO,IAAAA,aAAa,EAAEC,OAAO,CADjB,UACUA,EADV;AAELC,IAAAA,cAAc,EAAED,OAAO,CAFlB,WAEWA,EAFX;AAGLE,IAAAA,UAAU,EAAEC,OAAO,CAHrB,UAGcA,EAHP,EAAP;;AArBG,CAAmB,CAAnB;;;AA6BP,OAAO,MAAMC,UAAU,GAAG;AAAA,IAAA;AAExB;AACEC,EAAAA,OAAO,CAAA,KAAA,EAAQ;AACb,WAAO,CAACf,KAAK,CAAb,eAAA;AAFJ,GAAA;AAIEgB,EAAAA,KAAK,CAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAA4B;AAC/B,QAAIZ,SAAS,IAAIA,SAAS,CAA1B,OAAA,EAAoC;AAClCa,MAAAA,WAAW,CAAA,KAAA,EAAA,OAAA,EAAXA,SAAW,CAAXA;AACD;AAPL,GAAA;AASE;AACA;AACA;AACAC,EAAAA,IAAI,CAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAA4B;AAC9B,UAAMC,UAAU,GAAGN,OAAO,CAA1B,aAAmBA,EAAnB;AACA,QAAI,CAAC,CAAA,UAAA,IAAe,CAACM,UAAU,CAA3B,WAAA,KAA4Cf,SAAS,CAAzD,OAAA,EAAmE;AACjE,aAAOgB,UAAU,CAAA,KAAA,EAAA,OAAA,EAAjB,SAAiB,CAAjB;AACD;AACD,WAAA,SAAA;AAnBoB,GAExB,EAFwB;;AAsBxB,SAAA,gBAAA,CAAA,OAAA,EAAA,OAAA,EAA4C;AAC1C,SAAO;AACLC,IAAAA,YAAY,EAAEX,OAAO,CADhB,UACSA,EADT;AAELY,IAAAA,cAAc,EAAET,OAAO,CAFlB,MAEWA,EAFX;AAGLU,IAAAA,qBAAqB,EAAEV,OAAO,CAAPA,MAAAA,CAAe,EAAEW,OAAO,EAHjD,IAGwC,EAAfX,CAHlB,EAAP;;AAvBG,CAAmB,CAAnB,C,iLA/BDhB,I,2IAEOC,U,iJA6BAgB,U,onBA/BPjB,I,2IAEOC,U,iJA6BAgB,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport handleHover from './handleHover';\nimport handleDrop from './handleDrop';\n\n// note: the 'type' hook is not useful for us as dropping is contigent on other properties\nconst TYPE = 'DRAG_DROPPABLE';\n\nexport const dragConfig = [\n  TYPE,\n  {\n    canDrag(props) {\n      return !props.disableDragDrop;\n    },\n\n    // this defines the dragging item object returned by monitor.getItem()\n    beginDrag(props /* , monitor, component */) {\n      const { component, index, parentComponent = {} } = props;\n      return {\n        type: component.type,\n        id: component.id,\n        meta: component.meta,\n        index,\n        parentId: parentComponent.id,\n        parentType: parentComponent.type,\n      };\n    },\n  },\n  function dragStateToProps(connect, monitor) {\n    return {\n      dragSourceRef: connect.dragSource(),\n      dragPreviewRef: connect.dragPreview(),\n      isDragging: monitor.isDragging(),\n    };\n  },\n];\n\nexport const dropConfig = [\n  TYPE,\n  {\n    canDrop(props) {\n      return !props.disableDragDrop;\n    },\n    hover(props, monitor, component) {\n      if (component && component.mounted) {\n        handleHover(props, monitor, component);\n      }\n    },\n    // note:\n    //  the react-dnd api requires that the drop() method return a result or undefined\n    //  monitor.didDrop() cannot be used because it returns true only for the most-nested target\n    drop(props, monitor, component) {\n      const dropResult = monitor.getDropResult();\n      if ((!dropResult || !dropResult.destination) && component.mounted) {\n        return handleDrop(props, monitor, component);\n      }\n      return undefined;\n    },\n  },\n  function dropStateToProps(connect, monitor) {\n    return {\n      droppableRef: connect.dropTarget(),\n      isDraggingOver: monitor.isOver(),\n      isDraggingOverShallow: monitor.isOver({ shallow: true }),\n    };\n  },\n];\n"]},"metadata":{},"sourceType":"module"}