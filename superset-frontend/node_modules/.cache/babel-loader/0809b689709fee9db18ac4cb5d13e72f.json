{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/TextAreaControl.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextArea } from 'src/common/components';\nimport { t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport { TextAreaEditor } from 'src/components/AsyncAceEditor';\nimport ModalTrigger from 'src/components/ModalTrigger';\n\nimport ControlHeader from 'src/explore/components/ControlHeader';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  initialValue: PropTypes.string,\n  height: PropTypes.number,\n  minLines: PropTypes.number,\n  maxLines: PropTypes.number,\n  offerEditInModal: PropTypes.bool,\n  language: PropTypes.oneOf([\n  null,\n  'json',\n  'html',\n  'sql',\n  'markdown',\n  'javascript']),\n\n  aboveEditorSection: PropTypes.node,\n  readOnly: PropTypes.bool };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  initialValue: '',\n  height: 250,\n  minLines: 3,\n  maxLines: 10,\n  offerEditInModal: true,\n  readOnly: false };\n\n\nexport default class TextAreaControl extends React.Component {\n  onControlChange(event) {\n    const { value } = event.target;\n    this.props.onChange(value);\n  }\n\n  renderEditor(inModal = false) {\n    const minLines = inModal ? 40 : this.props.minLines || 12;\n    if (this.props.language) {\n      const style = { border: '1px solid #CCC' };\n      if (this.props.readOnly) {\n        style.backgroundColor = '#f2f2f2';\n      }\n      return (\n        ___EmotionJSX(TextAreaEditor, _extends({\n          mode: this.props.language,\n          style: style,\n          minLines: minLines,\n          maxLines: inModal ? 1000 : this.props.maxLines,\n          onChange: this.props.onChange,\n          width: \"100%\",\n          height: `${minLines}em`,\n          editorProps: { $blockScrolling: true },\n          defaultValue: this.props.initialValue,\n          readOnly: this.props.readOnly,\n          key: this.props.name },\n        this.props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 74, columnNumber: 9 } })));\n\n\n    }\n    return (\n      ___EmotionJSX(TextArea, {\n        placeholder: t('textarea'),\n        onChange: this.onControlChange.bind(this),\n        defaultValue: this.props.initialValue,\n        disabled: this.props.readOnly,\n        style: { height: this.props.height }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 91, columnNumber: 7 } }));\n\n\n  }\n\n  renderModalBody() {\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 103, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 104, columnNumber: 9 } }, this.props.aboveEditorSection),\n      this.renderEditor(true)));\n\n\n  }\n\n  render() {\n    const controlHeader = ___EmotionJSX(ControlHeader, _extends({}, this.props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 111, columnNumber: 27 } }));\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 7 } },\n      controlHeader,\n      this.renderEditor(),\n      this.props.offerEditInModal &&\n      ___EmotionJSX(ModalTrigger, {\n        modalTitle: controlHeader,\n        triggerNode:\n        ___EmotionJSX(Button, { buttonSize: \"small\", className: \"m-t-5\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 120, columnNumber: 15 } },\n        t('Edit'), \" \", ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 121, columnNumber: 29 } }, this.props.language), ' ',\n        t('in modal')),\n\n\n        modalBody: this.renderModalBody(true),\n        responsive: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 117, columnNumber: 11 } })));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTextAreaControl.propTypes = propTypes;\nTextAreaControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/TextAreaControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/TextAreaControl.jsx\");reactHotLoader.register(TextAreaControl, \"TextAreaControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/TextAreaControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/TextAreaControl.jsx"],"names":["React","PropTypes","TextArea","t","Button","TextAreaEditor","ModalTrigger","ControlHeader","propTypes","name","string","onChange","func","initialValue","height","number","minLines","maxLines","offerEditInModal","bool","language","oneOf","aboveEditorSection","node","readOnly","defaultProps","TextAreaControl","Component","onControlChange","event","value","target","props","renderEditor","inModal","style","border","backgroundColor","$blockScrolling","bind","renderModalBody","render","controlHeader"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextArea } from 'src/common/components';\nimport { t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport { TextAreaEditor } from 'src/components/AsyncAceEditor';\nimport ModalTrigger from 'src/components/ModalTrigger';\n\nimport ControlHeader from 'src/explore/components/ControlHeader';\n\nconst propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  initialValue: PropTypes.string,\n  height: PropTypes.number,\n  minLines: PropTypes.number,\n  maxLines: PropTypes.number,\n  offerEditInModal: PropTypes.bool,\n  language: PropTypes.oneOf([\n    null,\n    'json',\n    'html',\n    'sql',\n    'markdown',\n    'javascript',\n  ]),\n  aboveEditorSection: PropTypes.node,\n  readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  initialValue: '',\n  height: 250,\n  minLines: 3,\n  maxLines: 10,\n  offerEditInModal: true,\n  readOnly: false,\n};\n\nexport default class TextAreaControl extends React.Component {\n  onControlChange(event) {\n    const { value } = event.target;\n    this.props.onChange(value);\n  }\n\n  renderEditor(inModal = false) {\n    const minLines = inModal ? 40 : this.props.minLines || 12;\n    if (this.props.language) {\n      const style = { border: '1px solid #CCC' };\n      if (this.props.readOnly) {\n        style.backgroundColor = '#f2f2f2';\n      }\n      return (\n        <TextAreaEditor\n          mode={this.props.language}\n          style={style}\n          minLines={minLines}\n          maxLines={inModal ? 1000 : this.props.maxLines}\n          onChange={this.props.onChange}\n          width=\"100%\"\n          height={`${minLines}em`}\n          editorProps={{ $blockScrolling: true }}\n          defaultValue={this.props.initialValue}\n          readOnly={this.props.readOnly}\n          key={this.props.name}\n          {...this.props}\n        />\n      );\n    }\n    return (\n      <TextArea\n        placeholder={t('textarea')}\n        onChange={this.onControlChange.bind(this)}\n        defaultValue={this.props.initialValue}\n        disabled={this.props.readOnly}\n        style={{ height: this.props.height }}\n      />\n    );\n  }\n\n  renderModalBody() {\n    return (\n      <div>\n        <div>{this.props.aboveEditorSection}</div>\n        {this.renderEditor(true)}\n      </div>\n    );\n  }\n\n  render() {\n    const controlHeader = <ControlHeader {...this.props} />;\n    return (\n      <div>\n        {controlHeader}\n        {this.renderEditor()}\n        {this.props.offerEditInModal && (\n          <ModalTrigger\n            modalTitle={controlHeader}\n            triggerNode={\n              <Button buttonSize=\"small\" className=\"m-t-5\">\n                {t('Edit')} <strong>{this.props.language}</strong>{' '}\n                {t('in modal')}\n              </Button>\n            }\n            modalBody={this.renderModalBody(true)}\n            responsive\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nTextAreaControl.propTypes = propTypes;\nTextAreaControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}