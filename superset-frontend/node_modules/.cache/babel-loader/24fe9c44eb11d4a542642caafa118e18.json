{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { scaleDiverging } from 'd3-scale';\nimport ContinuousSchemeWrapper from './ContinuousSchemeWrapper';\nexport default class DivergingSchemeWrapper extends ContinuousSchemeWrapper {\n  getColors(numColors = 3, extent = [0, 1]) {\n    return super.getColors(numColors, extent);\n  }\n\n  createScaleLinear() {\n    return scaleDiverging(this.interpolator);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DivergingSchemeWrapper, \"DivergingSchemeWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/DivergingSchemeWrapper.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/DivergingSchemeWrapper.js"],"names":["scaleDiverging","ContinuousSchemeWrapper","DivergingSchemeWrapper","getColors","numColors","extent","createScaleLinear","interpolator"],"mappings":"uSAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,eAAe,MAAMC,sBAAN,SAAqCD,uBAArC,CAA6D;AAC1EE,EAAAA,SAAS,CAACC,SAAS,GAAG,CAAb,EAAgBC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC;AACxC,WAAO,MAAMF,SAAN,CAAgBC,SAAhB,EAA2BC,MAA3B,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,WAAON,cAAc,CAAC,KAAKO,YAAN,CAArB;AACD,GAPyE;AAAA;AAAA,6B,iLAAvDL,sB","sourcesContent":["import { scaleDiverging } from 'd3-scale';\nimport ContinuousSchemeWrapper from './ContinuousSchemeWrapper';\nexport default class DivergingSchemeWrapper extends ContinuousSchemeWrapper {\n  getColors(numColors = 3, extent = [0, 1]) {\n    return super.getColors(numColors, extent);\n  }\n\n  createScaleLinear() {\n    return scaleDiverging(this.interpolator);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}