{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/common/components';\nimport { t } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport Popover from 'src/components/Popover';\nimport PopoverSection from 'src/components/PopoverSection';\nimport Checkbox from 'src/components/Checkbox';\nimport ControlHeader from '../ControlHeader';\nimport SelectControl from './SelectControl';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst spatialTypes = {\n  latlong: 'latlong',\n  delimited: 'delimited',\n  geohash: 'geohash' };\n\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  animation: PropTypes.bool,\n  choices: PropTypes.array };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  animation: true,\n  choices: [] };\n\n\nexport default class SpatialControl extends React.Component {\n  constructor(props) {\n    super(props);\n    const v = props.value || {};\n    let defaultCol;\n    if (props.choices.length > 0) {\n      defaultCol = props.choices[0][0];\n    }\n    this.state = {\n      type: v.type || spatialTypes.latlong,\n      delimiter: v.delimiter || ',',\n      latCol: v.latCol || defaultCol,\n      lonCol: v.lonCol || defaultCol,\n      lonlatCol: v.lonlatCol || defaultCol,\n      reverseCheckbox: v.reverseCheckbox || false,\n      geohashCol: v.geohashCol || defaultCol,\n      value: null,\n      errors: [] };\n\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.renderReverseCheckbox = this.renderReverseCheckbox.bind(this);\n  }\n\n  componentDidMount() {\n    this.onChange();\n  }\n\n  onChange() {\n    const { type } = this.state;\n    const value = { type };\n    const errors = [];\n    const errMsg = t('Invalid lat/long configuration.');\n    if (type === spatialTypes.latlong) {\n      value.latCol = this.state.latCol;\n      value.lonCol = this.state.lonCol;\n      if (!value.lonCol || !value.latCol) {\n        errors.push(errMsg);\n      }\n    } else if (type === spatialTypes.delimited) {\n      value.lonlatCol = this.state.lonlatCol;\n      value.delimiter = this.state.delimiter;\n      value.reverseCheckbox = this.state.reverseCheckbox;\n      if (!value.lonlatCol || !value.delimiter) {\n        errors.push(errMsg);\n      }\n    } else if (type === spatialTypes.geohash) {\n      value.geohashCol = this.state.geohashCol;\n      value.reverseCheckbox = this.state.reverseCheckbox;\n      if (!value.geohashCol) {\n        errors.push(errMsg);\n      }\n    }\n    this.setState({ value, errors });\n    this.props.onChange(value, errors);\n  }\n\n  setType(type) {\n    this.setState({ type }, this.onChange);\n  }\n\n  toggleCheckbox() {\n    this.setState(\n    (prevState) => ({ reverseCheckbox: !prevState.reverseCheckbox }),\n    this.onChange);\n\n  }\n\n  renderLabelContent() {\n    if (this.state.errors.length > 0) {\n      return 'N/A';\n    }\n    if (this.state.type === spatialTypes.latlong) {\n      return `${this.state.lonCol} | ${this.state.latCol}`;\n    }\n    if (this.state.type === spatialTypes.delimited) {\n      return `${this.state.lonlatCol}`;\n    }\n    if (this.state.type === spatialTypes.geohash) {\n      return `${this.state.geohashCol}`;\n    }\n    return null;\n  }\n\n  renderSelect(name, type) {\n    return (\n      ___EmotionJSX(SelectControl, {\n        ariaLabel: name,\n        name: name,\n        choices: this.props.choices,\n        value: this.state[name],\n        clearable: false,\n        onFocus: () => {\n          this.setType(type);\n        },\n        onChange: (value) => {\n          this.setState({ [name]: value }, this.onChange);\n        }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 136, columnNumber: 7 } }));\n\n\n  }\n\n  renderReverseCheckbox() {\n    return (\n      ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 154, columnNumber: 7 } },\n      t('Reverse lat/long '),\n      ___EmotionJSX(Checkbox, {\n        checked: this.state.reverseCheckbox,\n        onChange: this.toggleCheckbox, __self: this, __source: { fileName: _jsxFileName, lineNumber: 156, columnNumber: 9 } })));\n\n\n\n  }\n\n  renderPopoverContent() {\n    return (\n      ___EmotionJSX(\"div\", { style: { width: '300px' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 7 } },\n      ___EmotionJSX(PopoverSection, {\n        title: t('Longitude & Latitude columns'),\n        isSelected: this.state.type === spatialTypes.latlong,\n        onSelect: this.setType.bind(this, spatialTypes.latlong), __self: this, __source: { fileName: _jsxFileName, lineNumber: 167, columnNumber: 9 } },\n\n      ___EmotionJSX(Row, { gutter: 16, __self: this, __source: { fileName: _jsxFileName, lineNumber: 172, columnNumber: 11 } },\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 13 } }, \"Longitude\",\n\n      this.renderSelect('lonCol', spatialTypes.latlong)),\n\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 177, columnNumber: 13 } }, \"Latitude\",\n\n      this.renderSelect('latCol', spatialTypes.latlong)))),\n\n\n\n      ___EmotionJSX(PopoverSection, {\n        title: t('Delimited long & lat single column'),\n        info: t(\n        'Multiple formats accepted, look the geopy.points ' +\n        'Python library for more details'),\n\n        isSelected: this.state.type === spatialTypes.delimited,\n        onSelect: this.setType.bind(this, spatialTypes.delimited), __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 9 } },\n\n      ___EmotionJSX(Row, { gutter: 16, __self: this, __source: { fileName: _jsxFileName, lineNumber: 192, columnNumber: 11 } },\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 193, columnNumber: 13 } },\n      t('Column'),\n      this.renderSelect('lonlatCol', spatialTypes.delimited)),\n\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 13 } },\n      this.renderReverseCheckbox()))),\n\n\n\n      ___EmotionJSX(PopoverSection, {\n        title: t('Geohash'),\n        isSelected: this.state.type === spatialTypes.geohash,\n        onSelect: this.setType.bind(this, spatialTypes.geohash), __self: this, __source: { fileName: _jsxFileName, lineNumber: 202, columnNumber: 9 } },\n\n      ___EmotionJSX(Row, { gutter: 16, __self: this, __source: { fileName: _jsxFileName, lineNumber: 207, columnNumber: 11 } },\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 208, columnNumber: 13 } }, \"Column\",\n\n      this.renderSelect('geohashCol', spatialTypes.geohash)),\n\n      ___EmotionJSX(Col, { xs: 24, md: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 212, columnNumber: 13 } },\n      this.renderReverseCheckbox())))));\n\n\n\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 7 } },\n      ___EmotionJSX(ControlHeader, _extends({}, this.props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 224, columnNumber: 9 } })),\n      ___EmotionJSX(Popover, {\n        content: this.renderPopoverContent(),\n        placement: \"topLeft\" // so that popover doesn't move when label changes\n        , trigger: \"click\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 225, columnNumber: 9 } },\n\n      ___EmotionJSX(Label, { className: \"pointer\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 230, columnNumber: 11 } }, this.renderLabelContent()))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSpatialControl.propTypes = propTypes;\nSpatialControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(spatialTypes, \"spatialTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx\");reactHotLoader.register(SpatialControl, \"SpatialControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/SpatialControl.jsx"],"names":["React","PropTypes","Row","Col","t","Label","Popover","PopoverSection","Checkbox","ControlHeader","SelectControl","spatialTypes","latlong","delimited","geohash","propTypes","onChange","func","value","object","animation","bool","choices","array","defaultProps","SpatialControl","Component","constructor","props","v","defaultCol","length","state","type","delimiter","latCol","lonCol","lonlatCol","reverseCheckbox","geohashCol","errors","toggleCheckbox","bind","renderReverseCheckbox","componentDidMount","errMsg","push","setState","setType","prevState","renderLabelContent","renderSelect","name","renderPopoverContent","width","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'src/common/components';\nimport { t } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport Popover from 'src/components/Popover';\nimport PopoverSection from 'src/components/PopoverSection';\nimport Checkbox from 'src/components/Checkbox';\nimport ControlHeader from '../ControlHeader';\nimport SelectControl from './SelectControl';\n\nconst spatialTypes = {\n  latlong: 'latlong',\n  delimited: 'delimited',\n  geohash: 'geohash',\n};\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  animation: PropTypes.bool,\n  choices: PropTypes.array,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  animation: true,\n  choices: [],\n};\n\nexport default class SpatialControl extends React.Component {\n  constructor(props) {\n    super(props);\n    const v = props.value || {};\n    let defaultCol;\n    if (props.choices.length > 0) {\n      defaultCol = props.choices[0][0];\n    }\n    this.state = {\n      type: v.type || spatialTypes.latlong,\n      delimiter: v.delimiter || ',',\n      latCol: v.latCol || defaultCol,\n      lonCol: v.lonCol || defaultCol,\n      lonlatCol: v.lonlatCol || defaultCol,\n      reverseCheckbox: v.reverseCheckbox || false,\n      geohashCol: v.geohashCol || defaultCol,\n      value: null,\n      errors: [],\n    };\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.renderReverseCheckbox = this.renderReverseCheckbox.bind(this);\n  }\n\n  componentDidMount() {\n    this.onChange();\n  }\n\n  onChange() {\n    const { type } = this.state;\n    const value = { type };\n    const errors = [];\n    const errMsg = t('Invalid lat/long configuration.');\n    if (type === spatialTypes.latlong) {\n      value.latCol = this.state.latCol;\n      value.lonCol = this.state.lonCol;\n      if (!value.lonCol || !value.latCol) {\n        errors.push(errMsg);\n      }\n    } else if (type === spatialTypes.delimited) {\n      value.lonlatCol = this.state.lonlatCol;\n      value.delimiter = this.state.delimiter;\n      value.reverseCheckbox = this.state.reverseCheckbox;\n      if (!value.lonlatCol || !value.delimiter) {\n        errors.push(errMsg);\n      }\n    } else if (type === spatialTypes.geohash) {\n      value.geohashCol = this.state.geohashCol;\n      value.reverseCheckbox = this.state.reverseCheckbox;\n      if (!value.geohashCol) {\n        errors.push(errMsg);\n      }\n    }\n    this.setState({ value, errors });\n    this.props.onChange(value, errors);\n  }\n\n  setType(type) {\n    this.setState({ type }, this.onChange);\n  }\n\n  toggleCheckbox() {\n    this.setState(\n      prevState => ({ reverseCheckbox: !prevState.reverseCheckbox }),\n      this.onChange,\n    );\n  }\n\n  renderLabelContent() {\n    if (this.state.errors.length > 0) {\n      return 'N/A';\n    }\n    if (this.state.type === spatialTypes.latlong) {\n      return `${this.state.lonCol} | ${this.state.latCol}`;\n    }\n    if (this.state.type === spatialTypes.delimited) {\n      return `${this.state.lonlatCol}`;\n    }\n    if (this.state.type === spatialTypes.geohash) {\n      return `${this.state.geohashCol}`;\n    }\n    return null;\n  }\n\n  renderSelect(name, type) {\n    return (\n      <SelectControl\n        ariaLabel={name}\n        name={name}\n        choices={this.props.choices}\n        value={this.state[name]}\n        clearable={false}\n        onFocus={() => {\n          this.setType(type);\n        }}\n        onChange={value => {\n          this.setState({ [name]: value }, this.onChange);\n        }}\n      />\n    );\n  }\n\n  renderReverseCheckbox() {\n    return (\n      <span>\n        {t('Reverse lat/long ')}\n        <Checkbox\n          checked={this.state.reverseCheckbox}\n          onChange={this.toggleCheckbox}\n        />\n      </span>\n    );\n  }\n\n  renderPopoverContent() {\n    return (\n      <div style={{ width: '300px' }}>\n        <PopoverSection\n          title={t('Longitude & Latitude columns')}\n          isSelected={this.state.type === spatialTypes.latlong}\n          onSelect={this.setType.bind(this, spatialTypes.latlong)}\n        >\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              Longitude\n              {this.renderSelect('lonCol', spatialTypes.latlong)}\n            </Col>\n            <Col xs={24} md={12}>\n              Latitude\n              {this.renderSelect('latCol', spatialTypes.latlong)}\n            </Col>\n          </Row>\n        </PopoverSection>\n        <PopoverSection\n          title={t('Delimited long & lat single column')}\n          info={t(\n            'Multiple formats accepted, look the geopy.points ' +\n              'Python library for more details',\n          )}\n          isSelected={this.state.type === spatialTypes.delimited}\n          onSelect={this.setType.bind(this, spatialTypes.delimited)}\n        >\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              {t('Column')}\n              {this.renderSelect('lonlatCol', spatialTypes.delimited)}\n            </Col>\n            <Col xs={24} md={12}>\n              {this.renderReverseCheckbox()}\n            </Col>\n          </Row>\n        </PopoverSection>\n        <PopoverSection\n          title={t('Geohash')}\n          isSelected={this.state.type === spatialTypes.geohash}\n          onSelect={this.setType.bind(this, spatialTypes.geohash)}\n        >\n          <Row gutter={16}>\n            <Col xs={24} md={12}>\n              Column\n              {this.renderSelect('geohashCol', spatialTypes.geohash)}\n            </Col>\n            <Col xs={24} md={12}>\n              {this.renderReverseCheckbox()}\n            </Col>\n          </Row>\n        </PopoverSection>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <ControlHeader {...this.props} />\n        <Popover\n          content={this.renderPopoverContent()}\n          placement=\"topLeft\" // so that popover doesn't move when label changes\n          trigger=\"click\"\n        >\n          <Label className=\"pointer\">{this.renderLabelContent()}</Label>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nSpatialControl.propTypes = propTypes;\nSpatialControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}