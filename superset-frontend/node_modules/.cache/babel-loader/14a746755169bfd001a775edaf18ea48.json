{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (form, filterId) => {var _formFilter$dataset;\n  const forceUpdate = useForceUpdate();\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null });\n\n    forceUpdate();\n  }, [\n  form,\n  formFilter == null ? void 0 : formFilter.filterType,\n  formFilter == null ? void 0 : formFilter.column,\n  formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value,\n  JSON.stringify(formFilter == null ? void 0 : formFilter.adhoc_filters),\n  formFilter == null ? void 0 : formFilter.time_range,\n  forceUpdate,\n  filterId]);\n\n};__signature__(useBackendFormUpdate, \"useForceUpdate{forceUpdate}\\nuseEffect{}\", () => [useForceUpdate]);\nexport const useDefaultValue = (formFilter, filterToEdit) => {var _formFilter$controlVa, _formFilter$controlVa2;\n  const enableEmptyFilter = !!(formFilter != null && (_formFilter$controlVa = formFilter.controlValues) != null && _formFilter$controlVa.enableEmptyFilter);\n  const defaultToFirstItem = !!(formFilter != null && (_formFilter$controlVa2 = formFilter.controlValues) != null && _formFilter$controlVa2.defaultToFirstItem);\n  const [hasDefaultValue, setHasPartialDefaultValue] = useState(false);\n  const [isRequired, setIsRequired] = useState(enableEmptyFilter);\n  const [defaultValueTooltip, setDefaultValueTooltip] = useState('');\n  const setHasDefaultValue = (value = false) => {\n    const required = enableEmptyFilter && !defaultToFirstItem;\n    setIsRequired(required);\n    setHasPartialDefaultValue(required ? true : value);\n  };\n  useEffect(() => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n    setHasDefaultValue(defaultToFirstItem ?\n    false :\n    !!(formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value));\n    // TODO: this logic should be unhardcoded\n  }, [defaultToFirstItem, enableEmptyFilter]);\n  useEffect(() => {var _filterToEdit$default, _filterToEdit$default2;\n    setHasDefaultValue(defaultToFirstItem ?\n    false :\n    !!(filterToEdit != null && (_filterToEdit$default = filterToEdit.defaultDataMask) != null && (_filterToEdit$default2 = _filterToEdit$default.filterState) != null && _filterToEdit$default2.value));\n  }, []);\n  useEffect(() => {\n    let tooltip = '';\n    if (defaultToFirstItem) {\n      tooltip = t('Default value set automatically when \"Default to first item\" is checked');\n    } else\n    if (isRequired) {\n      tooltip = t('Default value must be set when \"Required\" is checked');\n    } else\n    if (hasDefaultValue) {\n      tooltip = t('Default value must be set when \"Filter has default value\" is checked');\n    }\n    setDefaultValueTooltip(tooltip);\n  }, [hasDefaultValue, isRequired, defaultToFirstItem]);\n  return [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue];\n};__signature__(useDefaultValue, \"useState{[hasDefaultValue, setHasPartialDefaultValue](false)}\\nuseState{[isRequired, setIsRequired](enableEmptyFilter)}\\nuseState{[defaultValueTooltip, setDefaultValueTooltip]('')}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useBackendFormUpdate, \"useBackendFormUpdate\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts\");reactHotLoader.register(useDefaultValue, \"useDefaultValue\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { FormInstance } from 'antd/lib/form';\nimport { t } from '@superset-ui/core';\nimport { NativeFiltersForm, NativeFiltersFormItem } from '../types';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\nimport { Filter } from '../../types';\n\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (\n  form: FormInstance<NativeFiltersForm>,\n  filterId: string,\n) => {\n  const forceUpdate = useForceUpdate();\n  const formFilter = (form.getFieldValue('filters') || {})[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null,\n    });\n    forceUpdate();\n  }, [\n    form,\n    formFilter?.filterType,\n    formFilter?.column,\n    formFilter?.dataset?.value,\n    JSON.stringify(formFilter?.adhoc_filters),\n    formFilter?.time_range,\n    forceUpdate,\n    filterId,\n  ]);\n};\n\nexport const useDefaultValue = (\n  formFilter?: NativeFiltersFormItem,\n  filterToEdit?: Filter,\n): [boolean, boolean, string, Function] => {\n  const enableEmptyFilter = !!formFilter?.controlValues?.enableEmptyFilter;\n  const defaultToFirstItem = !!formFilter?.controlValues?.defaultToFirstItem;\n\n  const [hasDefaultValue, setHasPartialDefaultValue] = useState(false);\n  const [isRequired, setIsRequired] = useState(enableEmptyFilter);\n  const [defaultValueTooltip, setDefaultValueTooltip] = useState('');\n\n  const setHasDefaultValue = (value = false) => {\n    const required = enableEmptyFilter && !defaultToFirstItem;\n    setIsRequired(required);\n    setHasPartialDefaultValue(required ? true : value);\n  };\n\n  useEffect(() => {\n    setHasDefaultValue(\n      defaultToFirstItem\n        ? false\n        : !!formFilter?.defaultDataMask?.filterState?.value,\n    );\n    // TODO: this logic should be unhardcoded\n  }, [defaultToFirstItem, enableEmptyFilter]);\n\n  useEffect(() => {\n    setHasDefaultValue(\n      defaultToFirstItem\n        ? false\n        : !!filterToEdit?.defaultDataMask?.filterState?.value,\n    );\n  }, []);\n\n  useEffect(() => {\n    let tooltip = '';\n    if (defaultToFirstItem) {\n      tooltip = t(\n        'Default value set automatically when \"Default to first item\" is checked',\n      );\n    } else if (isRequired) {\n      tooltip = t('Default value must be set when \"Required\" is checked');\n    } else if (hasDefaultValue) {\n      tooltip = t(\n        'Default value must be set when \"Filter has default value\" is checked',\n      );\n    }\n    setDefaultValueTooltip(tooltip);\n  }, [hasDefaultValue, isRequired, defaultToFirstItem]);\n\n  return [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue];\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}