{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/EmbedCodeButton.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport Popover from 'src/components/Popover';\nimport { FormLabel } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getShortUrl } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getExploreLongUrl, getURIDirectory } from '../exploreUtils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  latestQueryFormData: PropTypes.object.isRequired };\n\n\nexport default class EmbedCodeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: '400',\n      width: '600',\n      shortUrlId: 0 };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getCopyUrl = this.getCopyUrl.bind(this);\n    this.onShortUrlSuccess = this.onShortUrlSuccess.bind(this);\n  }\n\n  onShortUrlSuccess(shortUrl) {\n    const shortUrlId = shortUrl.substring(shortUrl.indexOf('/r/') + 3);\n    this.setState(() => ({\n      shortUrlId }));\n\n  }\n\n  getCopyUrl() {\n    return getShortUrl(getExploreLongUrl(this.props.latestQueryFormData)).\n    then(this.onShortUrlSuccess).\n    catch(this.props.addDangerToast);\n  }\n\n  handleInputChange(e) {\n    const { value, name } = e.currentTarget;\n    const data = {};\n    data[name] = value;\n    this.setState(data);\n  }\n\n  generateEmbedHTML() {\n    const srcLink = `${window.location.origin + getURIDirectory()}?r=${\n    this.state.shortUrlId\n    }&${URL_PARAMS.standalone.name}=1&height=${this.state.height}`;\n    return (\n      '<iframe\\n' +\n      `  width=\"${this.state.width}\"\\n` +\n      `  height=\"${this.state.height}\"\\n` +\n      '  seamless\\n' +\n      '  frameBorder=\"0\"\\n' +\n      '  scrolling=\"no\"\\n' +\n      `  src=\"${srcLink}\"\\n` +\n      '>\\n' +\n      '</iframe>');\n\n  }\n\n  renderPopoverContent() {\n    const html = this.generateEmbedHTML();\n    return (\n      ___EmotionJSX(\"div\", { id: \"embed-code-popover\", \"data-test\": \"embed-code-popover\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 89, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { className: \"row\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 9 } },\n      ___EmotionJSX(\"div\", { className: \"col-sm-10\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 91, columnNumber: 11 } },\n      ___EmotionJSX(\"textarea\", {\n        \"data-test\": \"embed-code-textarea\",\n        name: \"embedCode\",\n        value: html,\n        rows: \"4\",\n        readOnly: true,\n        className: \"form-control input-sm\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 92, columnNumber: 13 } })),\n\n\n      ___EmotionJSX(\"div\", { className: \"col-sm-2\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 101, columnNumber: 11 } },\n      ___EmotionJSX(CopyToClipboard, {\n        shouldShowText: false,\n        text: html,\n        copyNode:\n        ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", title: t('Copy to clipboard'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 17 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 13 } }))),\n\n\n\n\n      ___EmotionJSX(\"br\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 111, columnNumber: 9 } }),\n      ___EmotionJSX(\"div\", { className: \"row\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 112, columnNumber: 9 } },\n      ___EmotionJSX(\"div\", { className: \"col-md-6 col-sm-12\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { className: \"form-group\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 114, columnNumber: 13 } },\n      ___EmotionJSX(\"small\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 115, columnNumber: 15 } },\n      ___EmotionJSX(FormLabel, { htmlFor: \"embed-height\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 116, columnNumber: 17 } }, t('Height'))),\n\n      ___EmotionJSX(\"input\", {\n        className: \"form-control input-sm\",\n        type: \"text\",\n        defaultValue: this.state.height,\n        name: \"height\",\n        onChange: this.handleInputChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 118, columnNumber: 15 } }))),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"col-md-6 col-sm-12\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 127, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { className: \"form-group\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 128, columnNumber: 13 } },\n      ___EmotionJSX(\"small\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 129, columnNumber: 15 } },\n      ___EmotionJSX(FormLabel, { htmlFor: \"embed-width\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 130, columnNumber: 17 } }, t('Width'))),\n\n      ___EmotionJSX(\"input\", {\n        className: \"form-control input-sm\",\n        type: \"text\",\n        defaultValue: this.state.width,\n        name: \"width\",\n        onChange: this.handleInputChange,\n        id: \"embed-width\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 132, columnNumber: 15 } }))))));\n\n\n\n\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(Popover, {\n        trigger: \"click\",\n        placement: \"left\",\n        onClick: this.getCopyUrl,\n        content: this.renderPopoverContent(), __self: this, __source: { fileName: _jsxFileName, lineNumber: 149, columnNumber: 7 } },\n\n      ___EmotionJSX(Tooltip, {\n        id: \"embed-code-tooltip\",\n        placement: \"top\",\n        title: \"Embed code\",\n        trigger: ['hover'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 155, columnNumber: 9 } },\n\n      ___EmotionJSX(\"div\", {\n        className: \"btn btn-default btn-sm\",\n        \"data-test\": \"embed-code-button\",\n        style: { display: 'flex', alignItems: 'center', height: 30 }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 161, columnNumber: 11 } },\n\n      ___EmotionJSX(Icons.Code, { iconSize: \"l\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 13 } })))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nEmbedCodeButton.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/EmbedCodeButton.jsx\");reactHotLoader.register(EmbedCodeButton, \"EmbedCodeButton\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/EmbedCodeButton.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/EmbedCodeButton.jsx"],"names":["React","PropTypes","t","Popover","FormLabel","Icons","Tooltip","CopyToClipboard","getShortUrl","URL_PARAMS","getExploreLongUrl","getURIDirectory","propTypes","latestQueryFormData","object","isRequired","EmbedCodeButton","Component","constructor","props","state","height","width","shortUrlId","handleInputChange","bind","getCopyUrl","onShortUrlSuccess","shortUrl","substring","indexOf","setState","then","catch","addDangerToast","e","value","name","currentTarget","data","generateEmbedHTML","srcLink","window","location","origin","standalone","renderPopoverContent","html","render","display","alignItems"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport Popover from 'src/components/Popover';\nimport { FormLabel } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getShortUrl } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getExploreLongUrl, getURIDirectory } from '../exploreUtils';\n\nconst propTypes = {\n  latestQueryFormData: PropTypes.object.isRequired,\n};\n\nexport default class EmbedCodeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: '400',\n      width: '600',\n      shortUrlId: 0,\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getCopyUrl = this.getCopyUrl.bind(this);\n    this.onShortUrlSuccess = this.onShortUrlSuccess.bind(this);\n  }\n\n  onShortUrlSuccess(shortUrl) {\n    const shortUrlId = shortUrl.substring(shortUrl.indexOf('/r/') + 3);\n    this.setState(() => ({\n      shortUrlId,\n    }));\n  }\n\n  getCopyUrl() {\n    return getShortUrl(getExploreLongUrl(this.props.latestQueryFormData))\n      .then(this.onShortUrlSuccess)\n      .catch(this.props.addDangerToast);\n  }\n\n  handleInputChange(e) {\n    const { value, name } = e.currentTarget;\n    const data = {};\n    data[name] = value;\n    this.setState(data);\n  }\n\n  generateEmbedHTML() {\n    const srcLink = `${window.location.origin + getURIDirectory()}?r=${\n      this.state.shortUrlId\n    }&${URL_PARAMS.standalone.name}=1&height=${this.state.height}`;\n    return (\n      '<iframe\\n' +\n      `  width=\"${this.state.width}\"\\n` +\n      `  height=\"${this.state.height}\"\\n` +\n      '  seamless\\n' +\n      '  frameBorder=\"0\"\\n' +\n      '  scrolling=\"no\"\\n' +\n      `  src=\"${srcLink}\"\\n` +\n      '>\\n' +\n      '</iframe>'\n    );\n  }\n\n  renderPopoverContent() {\n    const html = this.generateEmbedHTML();\n    return (\n      <div id=\"embed-code-popover\" data-test=\"embed-code-popover\">\n        <div className=\"row\">\n          <div className=\"col-sm-10\">\n            <textarea\n              data-test=\"embed-code-textarea\"\n              name=\"embedCode\"\n              value={html}\n              rows=\"4\"\n              readOnly\n              className=\"form-control input-sm\"\n            />\n          </div>\n          <div className=\"col-sm-2\">\n            <CopyToClipboard\n              shouldShowText={false}\n              text={html}\n              copyNode={\n                <i className=\"fa fa-clipboard\" title={t('Copy to clipboard')} />\n              }\n            />\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-12\">\n            <div className=\"form-group\">\n              <small>\n                <FormLabel htmlFor=\"embed-height\">{t('Height')}</FormLabel>\n              </small>\n              <input\n                className=\"form-control input-sm\"\n                type=\"text\"\n                defaultValue={this.state.height}\n                name=\"height\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 col-sm-12\">\n            <div className=\"form-group\">\n              <small>\n                <FormLabel htmlFor=\"embed-width\">{t('Width')}</FormLabel>\n              </small>\n              <input\n                className=\"form-control input-sm\"\n                type=\"text\"\n                defaultValue={this.state.width}\n                name=\"width\"\n                onChange={this.handleInputChange}\n                id=\"embed-width\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Popover\n        trigger=\"click\"\n        placement=\"left\"\n        onClick={this.getCopyUrl}\n        content={this.renderPopoverContent()}\n      >\n        <Tooltip\n          id=\"embed-code-tooltip\"\n          placement=\"top\"\n          title=\"Embed code\"\n          trigger={['hover']}\n        >\n          <div\n            className=\"btn btn-default btn-sm\"\n            data-test=\"embed-code-button\"\n            style={{ display: 'flex', alignItems: 'center', height: 30 }}\n          >\n            <Icons.Code iconSize=\"l\" />\n          </div>\n        </Tooltip>\n      </Popover>\n    );\n  }\n}\n\nEmbedCodeButton.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}