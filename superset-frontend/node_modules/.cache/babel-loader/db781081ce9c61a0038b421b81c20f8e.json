{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { makeSingleton } from '@encodable/registry';\nimport ColorSchemeRegistry from './ColorSchemeRegistry';\nimport { d3Schemes } from './presets/d3Schemes';\nexport const getColorSchemeRegistry = makeSingleton(() => new ColorSchemeRegistry({\n  globalId: '@encodable/color:ColorSchemeRegistry' }).\nregister(d3Schemes));\nexport function getColorScheme(schemeId) {\n  return getColorSchemeRegistry().get(schemeId);\n}\nexport function getCategoricalScheme(schemeId) {\n  return getColorSchemeRegistry().categorical.get(schemeId);\n}\nexport function getSequentialScheme(schemeId) {\n  return getColorSchemeRegistry().sequential.get(schemeId);\n}\nexport function getDivergingScheme(schemeId) {\n  return getColorSchemeRegistry().diverging.get(schemeId);\n}\nexport { ColorSchemeRegistry };\nexport { default as wrapColorScheme } from './wrappers/wrapColorScheme';\nexport * from './presets/d3Schemes';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getColorSchemeRegistry, \"getColorSchemeRegistry\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js\");reactHotLoader.register(getColorScheme, \"getColorScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js\");reactHotLoader.register(getCategoricalScheme, \"getCategoricalScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js\");reactHotLoader.register(getSequentialScheme, \"getSequentialScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js\");reactHotLoader.register(getDivergingScheme, \"getDivergingScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/index.js"],"names":["makeSingleton","ColorSchemeRegistry","d3Schemes","getColorSchemeRegistry","globalId","register","getColorScheme","schemeId","get","getCategoricalScheme","categorical","getSequentialScheme","sequential","getDivergingScheme","diverging","default","wrapColorScheme"],"mappings":"uSAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,MAAMC,sBAAsB,GAAGH,aAAa,CAAC,MAAM,IAAIC,mBAAJ,CAAwB;AAChFG,EAAAA,QAAQ,EAAE,sCADsE,EAAxB;AAEvDC,QAFuD,CAE9CH,SAF8C,CAAP,CAA5C;AAGP,OAAO,SAASI,cAAT,CAAwBC,QAAxB,EAAkC;AACvC,SAAOJ,sBAAsB,GAAGK,GAAzB,CAA6BD,QAA7B,CAAP;AACD;AACD,OAAO,SAASE,oBAAT,CAA8BF,QAA9B,EAAwC;AAC7C,SAAOJ,sBAAsB,GAAGO,WAAzB,CAAqCF,GAArC,CAAyCD,QAAzC,CAAP;AACD;AACD,OAAO,SAASI,mBAAT,CAA6BJ,QAA7B,EAAuC;AAC5C,SAAOJ,sBAAsB,GAAGS,UAAzB,CAAoCJ,GAApC,CAAwCD,QAAxC,CAAP;AACD;AACD,OAAO,SAASM,kBAAT,CAA4BN,QAA5B,EAAsC;AAC3C,SAAOJ,sBAAsB,GAAGW,SAAzB,CAAmCN,GAAnC,CAAuCD,QAAvC,CAAP;AACD;AACD,SAASN,mBAAT;AACA,SAASc,OAAO,IAAIC,eAApB,QAA2C,4BAA3C;AACA,cAAc,qBAAd,C,iLAjBab,sB,2JAGGG,c,mJAGAG,oB,yJAGAE,mB,wJAGAE,kB","sourcesContent":["import { makeSingleton } from '@encodable/registry';\nimport ColorSchemeRegistry from './ColorSchemeRegistry';\nimport { d3Schemes } from './presets/d3Schemes';\nexport const getColorSchemeRegistry = makeSingleton(() => new ColorSchemeRegistry({\n  globalId: '@encodable/color:ColorSchemeRegistry'\n}).register(d3Schemes));\nexport function getColorScheme(schemeId) {\n  return getColorSchemeRegistry().get(schemeId);\n}\nexport function getCategoricalScheme(schemeId) {\n  return getColorSchemeRegistry().categorical.get(schemeId);\n}\nexport function getSequentialScheme(schemeId) {\n  return getColorSchemeRegistry().sequential.get(schemeId);\n}\nexport function getDivergingScheme(schemeId) {\n  return getColorSchemeRegistry().diverging.get(schemeId);\n}\nexport { ColorSchemeRegistry };\nexport { default as wrapColorScheme } from './wrappers/wrapColorScheme';\nexport * from './presets/d3Schemes';"]},"metadata":{},"sourceType":"module"}