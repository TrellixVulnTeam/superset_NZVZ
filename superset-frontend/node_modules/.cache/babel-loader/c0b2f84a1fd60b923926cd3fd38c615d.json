{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\nimport './crud.less';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"asc\"] = 1] = \"asc\";\n  SortOrder[SortOrder[\"desc\"] = 2] = \"desc\";\n  SortOrder[SortOrder[\"unsort\"] = 0] = \"unsort\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid.generate() }));\n\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray };\n\n}\nconst CrudTableWrapper = styled.div`\n  ${({ stickyHeader }) => stickyHeader &&\n`\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  th span {\n    vertical-align: ${({ theme }) => theme.gridUnit * -2}px;\n  }\n`;\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\nexport default class CRUDCollection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0 };\n\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray });\n\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val } });\n\n\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item });\n\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id] } }));\n\n\n  }\n  sortColumn(col, sort = SortOrder.unsort) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && sortColumns.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort });\n\n          return;\n        }\n        // newly ordered collection\n        const sorted = [\n        ...this.state.collectionArray].\n        sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort }));\n\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return ___EmotionJSX(Icons.SortAsc, { onClick: this.sortColumn(col, 2), __self: this, __source: { fileName: _jsxFileName, lineNumber: 211, columnNumber: 20 } });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return ___EmotionJSX(Icons.SortDesc, { onClick: this.sortColumn(col, 0), __self: this, __source: { fileName: _jsxFileName, lineNumber: 214, columnNumber: 20 } });\n    }\n    return ___EmotionJSX(Icons.Sort, { onClick: this.sortColumn(col, 1), __self: this, __source: { fileName: _jsxFileName, lineNumber: 216, columnNumber: 16 } });\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return ___EmotionJSX(\"thead\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 221, columnNumber: 17 } },\n    ___EmotionJSX(\"tr\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 222, columnNumber: 9 } },\n    expandFieldset && ___EmotionJSX(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 30 } }),\n    cols.map((col) => ___EmotionJSX(\"th\", { key: col, __self: this, __source: { fileName: _jsxFileName, lineNumber: 224, columnNumber: 29 } },\n    this.getLabel(col),\n    (sortColumns == null ? void 0 : sortColumns.includes(col)) && this.renderSortIcon(col))),\n\n    extraButtons,\n    allowDeletes && ___EmotionJSX(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 229, columnNumber: 29 } })));\n\n\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(this.props.expandFieldset, Fieldset, propsGenerator);\n  }\n  renderCell(record, col) {\n    const renderer = this.props.itemRenderers && this.props.itemRenderers[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__expand\", className: \"expand\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 249, columnNumber: 22 } },\n      ___EmotionJSX(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id), __self: this, __source: { fileName: _jsxFileName, lineNumber: 250, columnNumber: 11 } })));\n\n    }\n    tds = tds.concat(tableColumns.map((col) => ___EmotionJSX(\"td\", { key: col, __self: this, __source: { fileName: _jsxFileName, lineNumber: 253, columnNumber: 51 } }, this.renderCell(record, col))));\n    if (allowAddItem) {\n      tds.push(___EmotionJSX(\"td\", { key: \"add\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 255, columnNumber: 22 } }));\n    }\n    if (allowDeletes) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__actions\", \"data-test\": \"crud-delete-option\", className: \"text-primary\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 258, columnNumber: 22 } },\n      ___EmotionJSX(Icons.Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", \"data-test\": \"crud-delete-icon\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id), __self: this, __source: { fileName: _jsxFileName, lineNumber: 259, columnNumber: 11 } })));\n\n    }\n    const trs = [\n    ___EmotionJSX(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id, __self: this, __source: { fileName: _jsxFileName, lineNumber: 263, columnNumber: 13 } },\n    tds)];\n\n\n    if (isExpanded) {\n      trs.push(___EmotionJSX(\"tr\", { className: \"exp\", key: `exp__${record.id}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 268, columnNumber: 22 } },\n      ___EmotionJSX(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 269, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 270, columnNumber: 13 } }, this.renderExpandableSection(record)))));\n\n\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return ___EmotionJSX(\"tr\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 277, columnNumber: 17 } },\n    ___EmotionJSX(\"td\", { className: \"empty-collection\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 278, columnNumber: 9 } }, this.props.emptyMessage));\n\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return ___EmotionJSX(\"tbody\", { \"data-test\": \"table-content-rows\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 286, columnNumber: 16 } }, content);\n  }\n  render() {\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(CrudButtonWrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 290, columnNumber: 9 } },\n    this.props.allowAddItem && ___EmotionJSX(\"span\", { className: \"m-t-10 m-r-10\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 291, columnNumber: 40 } },\n    ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem, \"data-test\": \"add-item-button\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 292, columnNumber: 15 } },\n    ___EmotionJSX(\"i\", { \"data-test\": \"crud-add-table-item\", className: \"fa fa-plus\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 293, columnNumber: 17 } }), ' ',\n    t('Add item')))),\n\n\n\n    ___EmotionJSX(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader, __self: this, __source: { fileName: _jsxFileName, lineNumber: 298, columnNumber: 9 } },\n    ___EmotionJSX(\"table\", { \"data-test\": \"crud-table\", className: \"table\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 299, columnNumber: 11 } },\n    this.renderHeaderRow(),\n    this.renderTableBody())));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortOrder, \"SortOrder\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");reactHotLoader.register(createCollectionArray, \"createCollectionArray\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");reactHotLoader.register(CrudTableWrapper, \"CrudTableWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");reactHotLoader.register(CrudButtonWrapper, \"CrudButtonWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/CollectionTable.tsx"],"names":[],"mappings":"4YAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAiC,OAAjC;AACA,OAAO,OAAP,MAAoB,SAApB;AACA,SAAS,CAAT,EAAY,MAAZ,QAA0B,mBAA1B;AACA,OAAO,MAAP,MAAmB,uBAAnB;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,OAAO,QAAP,MAAqB,YAArB;AACA,SAAS,iBAAT,QAAkC,SAAlC;AACA,OAAO,aAAP,C;AAyBA,IAAK,SAAL;AAAA,CAAA,UAAK,SAAL,EAAc;AACZ,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACD,CAJD,EAAK,SAAS,KAAT,SAAS,GAAA,EAAA,CAAd;AAcA,SAAS,qBAAT,CAA+B,UAA/B,EAAiD;AAC/C,SAAO,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,GAAxB,CAA4B,CAAA,CAAC,KAAI,UAAU,CAAC,CAAD,CAA3C,CAAP;AACD;AAED,SAAS,qBAAT,CAA+B,GAA/B,EAAiD;AAC/C,QAAM,eAAe,GAAG,GAAG,CAAC,GAAJ,CAAQ,CAAC,CAAD,MAAa;AAC3C,OAAG,CADwC;AAE3C,IAAA,EAAE,EAAE,CAAC,CAAC,EAAF,IAAQ,OAAO,CAAC,QAAR,EAF+B,EAAb,CAAR,CAAxB;;AAKA,QAAM,UAAU,GAAG,EAAnB;AACA,EAAA,eAAe,CAAC,OAAhB,CAAwB,CAAC,CAAD,KAAW;AACjC,IAAA,UAAU,CAAC,CAAC,CAAC,EAAH,CAAV,GAAmB,CAAnB;AACD,GAFD;AAIA,SAAO;AACL,IAAA,UADK;AAEL,IAAA,eAFK,EAAP;;AAID;AAED,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAA+B;IAC3D,CAAC,EAAE,YAAF,EAAD,KACA,YAAY;AACZ;;;;;;;;;;;;;;;AAeC,KAAA;;sBAEiB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC,CAAC;;AAEvD,CAtBD;AAwBA,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG;;IAEhC,CAAC,EAAE,KAAF,EAAD,KAAe,kBAAkB,KAAK,CAAC,QAAN,GAAiB,CAAC,IAAI;AAC1D,CAHD;AAKA,eAAc,MAAO,cAAP,SAA8B,KAAK,CAAC,aAApC,CAGb;AACC,EAAA,WAAA,CAAY,KAAZ,EAAsC;AACpC,UAAM,KAAN;AAEA,UAAM,EAAE,UAAF,EAAc,eAAd,KAAkC,qBAAqB,CAC3D,KAAK,CAAC,UADqD,CAA7D;AAGA,SAAK,KAAL,GAAa;AACX,MAAA,eAAe,EAAE,EADN;AAEX,MAAA,UAFW;AAGX,MAAA,eAHW;AAIX,MAAA,UAAU,EAAE,EAJD;AAKX,MAAA,IAAI,EAAE,CALK,EAAb;;AAOA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAK,uBAAL,GAA+B,KAAK,uBAAL,CAA6B,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK,gBAAL,GAAwB,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK,eAAL,GAAuB,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAK,gBAAL,GAAwB,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK,cAAL,GAAsB,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CAAtB;AACD;AAED,EAAA,gCAAgC,CAAC,SAAD,EAA+B;AAC7D,QAAI,SAAS,CAAC,UAAV,KAAyB,KAAK,KAAL,CAAW,UAAxC,EAAoD;AAClD,YAAM,EAAE,UAAF,EAAc,eAAd,KAAkC,qBAAqB,CAC3D,SAAS,CAAC,UADiD,CAA7D;AAGA,WAAK,QAAL,CAAc;AACZ,QAAA,UADY;AAEZ,QAAA,eAFY,EAAd;;AAID;AACF;AAED,EAAA,YAAY,CAAC,EAAD,EAAa,GAAb,EAA0B,GAA1B,EAAsC;AAChD,SAAK,gBAAL,CAAsB;AACpB,SAAG,KAAK,KAAL,CAAW,UADM;AAEpB,OAAC,EAAD,GAAM;AACJ,WAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,EAAtB,CADC;AAEJ,SAAC,GAAD,GAAO,GAFH,EAFc,EAAtB;;;AAOD;AAED,EAAA,SAAS,GAAA;AACP,QAAI,KAAK,KAAL,CAAW,aAAf,EAA8B;AAC5B,UAAI,OAAO,GAAG,KAAK,KAAL,CAAW,aAAX,EAAd;AACA,UAAI,CAAC,OAAO,CAAC,EAAb,EAAiB;AACf,QAAA,OAAO,GAAG,EAAE,GAAG,OAAL,EAAc,EAAE,EAAE,OAAO,CAAC,QAAR,EAAlB,EAAV;AACD;AACD,WAAK,gBAAL,CAAsB,KAAK,KAAL,CAAW,UAAjC,EAA6C,OAA7C;AACD;AACF;AAED,EAAA,gBAAgB,CAAC,IAAD,EAAU;AACxB,SAAK,gBAAL,CAAsB;AACpB,SAAG,KAAK,KAAL,CAAW,UADM;AAEpB,OAAC,IAAI,CAAC,EAAN,GAAW,IAFS,EAAtB;;AAID;AAED,EAAA,QAAQ,CAAC,GAAD,EAAS;AACf,UAAM,EAAE,YAAF,KAAmB,KAAK,KAA9B;AACA,QAAI,KAAK,GAAG,YAAY,IAAI,YAAY,CAAC,GAAD,CAA5B,GAAoC,YAAY,CAAC,GAAD,CAAhD,GAAwD,GAApE;AACA,QAAI,KAAK,CAAC,UAAN,CAAiB,IAAjB,CAAJ,EAA4B;AAC1B;AACA,MAAA,KAAK,GAAG,EAAR;AACD;AACD,WAAO,KAAP;AACD;AAED,EAAA,gBAAgB,CAAC,UAAD,EAAkB,OAAlB,EAAkC;AAChD,SAAK,QAAL,CAAc,EAAE,UAAF,EAAd;AACA,QAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AACvB,YAAM,eAAe,GAAG,KAAK,KAAL,CAAW,eAAX;AACrB,MAAA,GADqB,CACjB,CAAC,CAAD,KAAuB,UAAU,CAAC,CAAC,CAAC,EAAH,CADhB;AAEtB;AAFsB,OAGrB,MAHqB,CAGd,CAAA,CAAC,KAAI,CAAC,KAAK,SAHG,CAAxB;AAKA,UAAI,OAAJ,EAAa;AACX,QAAA,eAAe,CAAC,OAAhB,CAAwB,OAAxB;AACD;AACD,WAAK,KAAL,CAAW,QAAX,CAAoB,eAApB;AACD;AACF;AAED,EAAA,UAAU,CAAC,EAAD,EAAW;AACnB,UAAM,OAAO,GAAG,EAAE,GAAG,KAAK,KAAL,CAAW,UAAhB,EAAhB;AACA,WAAO,OAAO,CAAC,EAAD,CAAd;AACA,SAAK,gBAAL,CAAsB,OAAtB;AACD;AAED,EAAA,qBAAqB,GAAA;AACnB,UAAM,EAAE,YAAF,EAAgB,YAAhB,EAA8B,cAA9B,KAAiD,KAAK,KAA5D;AACA,UAAM,IAAI,GAAG,YAAY;AACrB,IAAA,YAAY,CAAC,MAAb,CAAoB,CAAC,WAAD,CAApB,CADqB;AAErB,IAAA,YAFJ;AAGA,WAAO,cAAc,GAAG,CAAC,UAAD,EAAa,MAAb,CAAoB,IAApB,CAAH,GAA+B,IAApD;AACD;AAED,EAAA,YAAY,CAAC,EAAD,EAAQ;AAClB,SAAK,YAAL,CAAkB,EAAlB,EAAsB,YAAtB,EAAoC,KAApC;AACA,SAAK,QAAL,CAAc,CAAA,SAAS,MAAK;AAC1B,MAAA,eAAe,EAAE;AACf,WAAG,SAAS,CAAC,eADE;AAEf,SAAC,EAAD,GAAM,CAAC,SAAS,CAAC,eAAV,CAA0B,EAA1B,CAFQ,EADS,EAAL,CAAvB;;;AAMD;AAED,EAAA,UAAU,CAAC,GAAD,EAAc,IAAI,GAAG,SAAS,CAAC,MAA/B,EAAqC;AAC7C,UAAM,EAAE,WAAF,KAAkB,KAAK,KAA7B;AACA;AACA,UAAM,WAAW,GAAG,CAAC,CAAD,EAAU,CAAV,KAAqB;AACvC,UAAI,OAAO,CAAP,KAAa,QAAjB,EAA2B;AACzB,eAAO,CAAC,CAAC,IAAI,GAAN,EAAW,aAAX,CAAyB,CAAzB,CAAP;AACD;AACD,aAAO,CAAC,GAAG,CAAX;AACD,KALD;AAMA,WAAO,MAAK;AACV,UAAI,WAAJ,YAAI,WAAW,CAAE,QAAb,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B;AACA,YAAI,IAAI,KAAK,SAAS,CAAC,MAAvB,EAA+B;AAC7B,gBAAM,EAAE,UAAF,KAAiB,qBAAqB,CAAC,KAAK,KAAL,CAAW,UAAZ,CAA5C;AACA,gBAAM,eAAe,GAAG,qBAAqB,CAAC,UAAD,CAA7C;AACA,eAAK,QAAL,CAAc;AACZ,YAAA,eADY;AAEZ,YAAA,UAAU,EAAE,EAFA;AAGZ,YAAA,IAHY,EAAd;;AAKA;AACD;AAED;AACA,cAAM,MAAM,GAAG;AACb,WAAG,KAAK,KAAL,CAAW,eADD;AAEb,QAAA,IAFa,CAER,CAAC,CAAD,EAAY,CAAZ,KAA0B,WAAW,CAAC,CAAC,CAAC,GAAD,CAAF,EAAS,CAAC,CAAC,GAAD,CAAV,CAF7B,CAAf;AAGA,cAAM,aAAa,GACjB,IAAI,KAAK,SAAS,CAAC,GAAnB,GAAyB,MAAzB,GAAkC,MAAM,CAAC,OAAP,EADpC;AAGA,aAAK,QAAL,CAAc,CAAA,SAAS,MAAK;AAC1B,aAAG,SADuB;AAE1B,UAAA,eAAe,EAAE,aAFS;AAG1B,UAAA,UAAU,EAAE,GAHc;AAI1B,UAAA,IAJ0B,EAAL,CAAvB;;AAMD;AACF,KA5BD;AA6BD;AAED,EAAA,cAAc,CAAC,GAAD,EAAY;AACxB,QAAI,KAAK,KAAL,CAAW,UAAX,KAA0B,GAA1B,IAAiC,KAAK,KAAL,CAAW,IAAX,KAAoB,SAAS,CAAC,GAAnE,EAAwE;AACtE,aAAO,cAAC,KAAD,CAAO,OAAP,IAAe,OAAO,EAAE,KAAK,UAAL,CAAgB,GAAhB,EAAqB,CAArB,CAAxB,0FAAP;AACD;AACD,QAAI,KAAK,KAAL,CAAW,UAAX,KAA0B,GAA1B,IAAiC,KAAK,KAAL,CAAW,IAAX,KAAoB,SAAS,CAAC,IAAnE,EAAyE;AACvE,aAAO,cAAC,KAAD,CAAO,QAAP,IAAgB,OAAO,EAAE,KAAK,UAAL,CAAgB,GAAhB,EAAqB,CAArB,CAAzB,0FAAP;AACD;AACD,WAAO,cAAC,KAAD,CAAO,IAAP,IAAY,OAAO,EAAE,KAAK,UAAL,CAAgB,GAAhB,EAAqB,CAArB,CAArB,0FAAP;AACD;AAED,EAAA,eAAe,GAAA;AACb,UAAM,IAAI,GAAG,KAAK,qBAAL,EAAb;AACA,UAAM,EACJ,YADI,EAEJ,cAFI,EAGJ,YAHI,EAIJ,WAJI,KAKF,KAAK,KALT;AAMA,WACE;AACE;AACG,IAAA,cAAc,IAAI,sBAAI,cAAW,QAAf,EAAwB,SAAS,EAAC,WAAlC,0FADrB;AAEG,IAAA,IAAI,CAAC,GAAL,CAAS,CAAA,GAAG,KACX,sBAAI,GAAG,EAAE,GAAT;AACG,SAAK,QAAL,CAAc,GAAd,CADH;AAEG,KAAA,WAAW,QAAX,YAAA,WAAW,CAAE,QAAb,CAAsB,GAAtB,MAA8B,KAAK,cAAL,CAAoB,GAApB,CAFjC,CADD,CAFH;;AAQG,IAAA,YARH;AASG,IAAA,YAAY,IACX,sBAAI,GAAG,EAAC,aAAR,EAAsB,cAAW,QAAjC,EAA0C,SAAS,EAAC,WAApD,0FAVJ,CADF,CADF;;;AAiBD;AAED,EAAA,uBAAuB,CAAC,IAAD,EAAU;AAC/B,UAAM,cAAc,GAAG,OAAO,EAAE,IAAF,EAAQ,QAAQ,EAAE,KAAK,gBAAvB,EAAP,CAAvB;AACA,WAAO,iBAAiB,CACtB,KAAK,KAAL,CAAW,cADW,EAEtB,QAFsB,EAGtB,cAHsB,CAAxB;AAKD;AAED,EAAA,UAAU,CAAC,MAAD,EAAc,GAAd,EAAsB;AAC9B,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,aAAX,IAA4B,KAAK,KAAL,CAAW,aAAX,CAAyB,GAAzB,CAA7C;AACA,UAAM,GAAG,GAAG,MAAM,CAAC,GAAD,CAAlB;AACA,UAAM,QAAQ,GAAG,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,EAA6B,MAAM,CAAC,EAApC,EAAwC,GAAxC,CAAjB;AACA,WAAO,QAAQ,GAAG,QAAQ,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAK,QAAL,CAAc,GAAd,CAAhB,EAAoC,MAApC,CAAX,GAAyD,GAAxE;AACD;AAED,EAAA,UAAU,CAAC,MAAD,EAAY;AACpB,UAAM,EACJ,YADI,EAEJ,YAFI,EAGJ,cAHI,EAIJ,YAJI,KAKF,KAAK,KALT;AAMA;AACA,UAAM,UAAU,GACd,CAAC,CAAC,KAAK,KAAL,CAAW,eAAX,CAA2B,MAAM,CAAC,EAAlC,CAAF,IAA2C,MAAM,CAAC,UADpD;AAEA,QAAI,GAAG,GAAG,EAAV;AACA,QAAI,cAAJ,EAAoB;AAClB,MAAA,GAAG,CAAC,IAAJ,CACE,sBAAI,GAAG,EAAC,UAAR,EAAmB,SAAS,EAAC,QAA7B;AACE,2BACE,IAAI,EAAC,QADP,EAEE,cAAW,eAFb,EAGE,QAAQ,EAAE,CAHZ,EAIE,SAAS,EAAE,eACT,UAAU,GAAG,MAAH,GAAY,OACxB,uBANF,EAOE,OAAO,EAAE,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,EAA6B,MAAM,CAAC,EAApC,CAPX,0FADF,CADF;;AAaD;AACD,IAAA,GAAG,GAAG,GAAG,CAAC,MAAJ,CACJ,YAAY,CAAC,GAAb,CAAiB,CAAA,GAAG,KAClB,sBAAI,GAAG,EAAE,GAAT,2FAAe,KAAK,UAAL,CAAgB,MAAhB,EAAwB,GAAxB,CAAf,CADF,CADI,CAAN;AAKA,QAAI,YAAJ,EAAkB;AAChB,MAAA,GAAG,CAAC,IAAJ,CAAS,sBAAI,GAAG,EAAC,KAAR,0FAAT;AACD;AACD,QAAI,YAAJ,EAAkB;AAChB,MAAA,GAAG,CAAC,IAAJ,CACE,sBACE,GAAG,EAAC,WADN,EAEE,aAAU,oBAFZ,EAGE,SAAS,EAAC,cAHZ;AAKE,oBAAC,KAAD,CAAO,KAAP,IACE,cAAW,aADb,EAEE,SAAS,EAAC,SAFZ,EAGE,aAAU,kBAHZ,EAIE,IAAI,EAAC,QAJP,EAKE,QAAQ,EAAE,CALZ,EAME,OAAO,EAAE,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,MAAM,CAAC,EAAlC,CANX,0FALF,CADF;;AAgBD;AACD,UAAM,GAAG,GAAG;AACV,0BAAU,aAAa,WAAvB,EAAsC,SAAS,EAAC,KAAhD,EAAsD,GAAG,EAAE,MAAM,CAAC,EAAlE;AACG,IAAA,GADH,CADU,CAAZ;;;AAKA,QAAI,UAAJ,EAAgB;AACd,MAAA,GAAG,CAAC,IAAJ,CACE,sBAAI,SAAS,EAAC,KAAd,EAAoB,GAAG,EAAE,QAAQ,MAAM,CAAC,EAAE,EAA1C;AACE,4BACE,OAAO,EAAE,KAAK,qBAAL,GAA6B,MADxC,EAEE,SAAS,EAAC,UAFZ;AAIE,sHAAM,KAAK,uBAAL,CAA6B,MAA7B,CAAN,CAJF,CADF,CADF;;;AAUD;AACD,WAAO,GAAP;AACD;AAED,EAAA,eAAe,GAAA;AACb,WACE;AACE,0BAAI,SAAS,EAAC,kBAAd,0FAAkC,KAAK,KAAL,CAAW,YAA7C,CADF,CADF;;AAKD;AAED,EAAA,eAAe,GAAA;AACb,UAAM,IAAI,GAAG,KAAK,KAAL,CAAW,eAAxB;AACA,UAAM,OAAO,GAAG,IAAI,CAAC,MAAL;AACZ,IAAA,IAAI,CAAC,GAAL,CAAS,CAAA,CAAC,KAAI,KAAK,UAAL,CAAgB,CAAhB,CAAd,CADY;AAEZ,SAAK,eAAL,EAFJ;AAGA,WAAO,yBAAO,aAAU,oBAAjB,2FAAuC,OAAvC,CAAP;AACD;AAED,EAAA,MAAM,GAAA;AACJ,WACE;AACE,kBAAC,iBAAD;AACG,SAAK,KAAL,CAAW,YAAX,IACC,wBAAM,SAAS,EAAC,eAAhB;AACE,kBAAC,MAAD,IACE,UAAU,EAAC,OADb,EAEE,WAAW,EAAC,UAFd,EAGE,OAAO,EAAE,KAAK,SAHhB,EAIE,aAAU,iBAJZ;AAME,yBAAG,aAAU,qBAAb,EAAmC,SAAS,EAAC,YAA7C,0FANF,EAM+D,GAN/D;AAOG,IAAA,CAAC,CAAC,UAAD,CAPJ,CADF,CAFJ,CADF;;;;AAgBE,kBAAC,gBAAD,IACE,SAAS,EAAC,MADZ,EAEE,YAAY,EAAE,KAAK,KAAL,CAAW,YAF3B;AAIE,6BAAO,aAAU,YAAjB,EAA8B,SAAS,EAAC,OAAxC;AACG,SAAK,eAAL,EADH;AAEG,SAAK,eAAL,EAFH,CAJF,CAhBF,CADF;;;;AA4BD,GAnUF;AAAA;AAAA,6B,iLAnEI,S,yHAcI,qB,qIAIA,qB,qIAiBH,gB,gIAwBA,iB,iIAKe,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\nimport './crud.less';\n\ninterface CRUDCollectionProps {\n  allowAddItem?: boolean;\n  allowDeletes?: boolean;\n  collection: Array<object>;\n  columnLabels?: object;\n  emptyMessage?: ReactNode;\n  expandFieldset?: ReactNode;\n  extraButtons?: ReactNode;\n  itemGenerator?: () => any;\n  itemRenderers?: ((\n    val: unknown,\n    onChange: () => void,\n    label: string,\n    record: any,\n  ) => ReactNode)[];\n  onChange?: (arg0: any) => void;\n  tableColumns: Array<any>;\n  sortColumns: Array<string>;\n  stickyHeader?: boolean;\n}\n\ntype Sort = number | string | boolean | any;\n\nenum SortOrder {\n  asc = 1,\n  desc = 2,\n  unsort = 0,\n}\n\ninterface CRUDCollectionState {\n  collection: object;\n  collectionArray: Array<object>;\n  expandedColumns: object;\n  sortColumn: string;\n  sort: SortOrder;\n}\n\nfunction createCollectionArray(collection: object) {\n  return Object.keys(collection).map(k => collection[k]);\n}\n\nfunction createKeyedCollection(arr: Array<object>) {\n  const collectionArray = arr.map((o: any) => ({\n    ...o,\n    id: o.id || shortid.generate(),\n  }));\n\n  const collection = {};\n  collectionArray.forEach((o: any) => {\n    collection[o.id] = o;\n  });\n\n  return {\n    collection,\n    collectionArray,\n  };\n}\n\nconst CrudTableWrapper = styled.div<{ stickyHeader?: boolean }>`\n  ${({ stickyHeader }) =>\n    stickyHeader &&\n    `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  th span {\n    vertical-align: ${({ theme }) => theme.gridUnit * -2}px;\n  }\n`;\n\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nexport default class CRUDCollection extends React.PureComponent<\n  CRUDCollectionProps,\n  CRUDCollectionState\n> {\n  constructor(props: CRUDCollectionProps) {\n    super(props);\n\n    const { collection, collectionArray } = createKeyedCollection(\n      props.collection,\n    );\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0,\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CRUDCollectionProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(\n        nextProps.collection,\n      );\n      this.setState({\n        collection,\n        collectionArray,\n      });\n    }\n  }\n\n  onCellChange(id: number, col: string, val: boolean) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val,\n      },\n    });\n  }\n\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n\n  onFieldsetChange(item: any) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item,\n    });\n  }\n\n  getLabel(col: any) {\n    const { columnLabels } = this.props;\n    let label = columnLabels && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n\n  changeCollection(collection: any, newItem?: object) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray\n        .map((c: { id: number }) => collection[c.id])\n        // filter out removed items\n        .filter(c => c !== undefined);\n\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n\n  deleteItem(id: number) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes\n      ? tableColumns.concat(['__actions'])\n      : tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n\n  toggleExpand(id: any) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState(prevState => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id],\n      },\n    }));\n  }\n\n  sortColumn(col: string, sort = SortOrder.unsort) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m: Sort, n: Sort) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns?.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort,\n          });\n          return;\n        }\n\n        // newly ordered collection\n        const sorted = [\n          ...this.state.collectionArray,\n        ].sort((a: object, b: object) => compareSort(a[col], b[col]));\n        const newCollection =\n          sort === SortOrder.asc ? sorted : sorted.reverse();\n\n        this.setState(prevState => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort,\n        }));\n      }\n    };\n  }\n\n  renderSortIcon(col: string) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return <Icons.SortAsc onClick={this.sortColumn(col, 2)} />;\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return <Icons.SortDesc onClick={this.sortColumn(col, 0)} />;\n    }\n    return <Icons.Sort onClick={this.sortColumn(col, 1)} />;\n  }\n\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const {\n      allowDeletes,\n      expandFieldset,\n      extraButtons,\n      sortColumns,\n    } = this.props;\n    return (\n      <thead>\n        <tr>\n          {expandFieldset && <th aria-label=\"Expand\" className=\"tiny-cell\" />}\n          {cols.map(col => (\n            <th key={col}>\n              {this.getLabel(col)}\n              {sortColumns?.includes(col) && this.renderSortIcon(col)}\n            </th>\n          ))}\n          {extraButtons}\n          {allowDeletes && (\n            <th key=\"delete-item\" aria-label=\"Delete\" className=\"tiny-cell\" />\n          )}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderExpandableSection(item: any) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(\n      this.props.expandFieldset,\n      Fieldset,\n      propsGenerator,\n    );\n  }\n\n  renderCell(record: any, col: any) {\n    const renderer = this.props.itemRenderers && this.props.itemRenderers[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n\n  renderItem(record: any) {\n    const {\n      allowAddItem,\n      allowDeletes,\n      expandFieldset,\n      tableColumns,\n    } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded =\n      !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(\n        <td key=\"__expand\" className=\"expand\">\n          <i\n            role=\"button\"\n            aria-label=\"Toggle expand\"\n            tabIndex={0}\n            className={`fa fa-caret-${\n              isExpanded ? 'down' : 'right'\n            } text-primary pointer`}\n            onClick={this.toggleExpand.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    tds = tds.concat(\n      tableColumns.map(col => (\n        <td key={col}>{this.renderCell(record, col)}</td>\n      )),\n    );\n    if (allowAddItem) {\n      tds.push(<td key=\"add\" />);\n    }\n    if (allowDeletes) {\n      tds.push(\n        <td\n          key=\"__actions\"\n          data-test=\"crud-delete-option\"\n          className=\"text-primary\"\n        >\n          <Icons.Trash\n            aria-label=\"Delete item\"\n            className=\"pointer\"\n            data-test=\"crud-delete-icon\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.deleteItem.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    const trs = [\n      <tr {...{ 'data-test': 'table-row' }} className=\"row\" key={record.id}>\n        {tds}\n      </tr>,\n    ];\n    if (isExpanded) {\n      trs.push(\n        <tr className=\"exp\" key={`exp__${record.id}`}>\n          <td\n            colSpan={this.effectiveTableColumns().length}\n            className=\"expanded\"\n          >\n            <div>{this.renderExpandableSection(record)}</div>\n          </td>\n        </tr>,\n      );\n    }\n    return trs;\n  }\n\n  renderEmptyCell() {\n    return (\n      <tr>\n        <td className=\"empty-collection\">{this.props.emptyMessage}</td>\n      </tr>\n    );\n  }\n\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length\n      ? data.map(d => this.renderItem(d))\n      : this.renderEmptyCell();\n    return <tbody data-test=\"table-content-rows\">{content}</tbody>;\n  }\n\n  render() {\n    return (\n      <>\n        <CrudButtonWrapper>\n          {this.props.allowAddItem && (\n            <span className=\"m-t-10 m-r-10\">\n              <Button\n                buttonSize=\"small\"\n                buttonStyle=\"tertiary\"\n                onClick={this.onAddItem}\n                data-test=\"add-item-button\"\n              >\n                <i data-test=\"crud-add-table-item\" className=\"fa fa-plus\" />{' '}\n                {t('Add item')}\n              </Button>\n            </span>\n          )}\n        </CrudButtonWrapper>\n        <CrudTableWrapper\n          className=\"CRUD\"\n          stickyHeader={this.props.stickyHeader}\n        >\n          <table data-test=\"crud-table\" className=\"table\">\n            {this.renderHeaderRow()}\n            {this.renderTableBody()}\n          </table>\n        </CrudTableWrapper>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}