{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/TimeGrain/TimeGrainFilterPlugin.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, tn } from '@superset-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function PluginFilterTimegrain(props) {\n  const { data, formData, height, width, setDataMask, setFocusedFilter, unsetFocusedFilter, filterState } = props;\n  const { defaultValue, inputRef } = formData;\n  const [value, setValue] = useState(defaultValue != null ? defaultValue : []);\n  const durationMap = useMemo(() => data.reduce((agg, { duration, name }) => ({\n    ...agg,\n    [duration]: name }),\n  {}), [JSON.stringify(data)]);\n  const handleChange = (values) => {\n    const resultValue = ensureIsArray(values);\n    const [timeGrain] = resultValue;\n    const label = timeGrain ? durationMap[timeGrain] : undefined;\n    const extraFormData = {};\n    if (timeGrain) {\n      extraFormData.time_grain_sqla = timeGrain;\n    }\n    setValue(resultValue);\n    setDataMask({\n      extraFormData,\n      filterState: {\n        label,\n        value: resultValue.length ? resultValue : null } });\n\n\n  };\n  useEffect(() => {\n    handleChange(defaultValue != null ? defaultValue : []);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n  useEffect(() => {var _filterState$value;\n    handleChange((_filterState$value = filterState.value) != null ? _filterState$value : []);\n  }, [JSON.stringify(filterState.value)]);\n  const placeholderText = (data || []).length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const formItemData = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = ___EmotionJSX(StatusMessage, { status: filterState.validateStatus, __self: this, __source: { fileName: _jsxFileName, lineNumber: 61, columnNumber: 31 } },\n    filterState.validateMessage);\n\n  }\n  const options = (data || []).map((row) => {\n    const { name, duration } = row;\n    return {\n      label: name,\n      value: duration };\n\n  });\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width, __self: this, __source: { fileName: _jsxFileName, lineNumber: 72, columnNumber: 13 } },\n  ___EmotionJSX(StyledFormItem, _extends({ validateStatus: filterState.validateStatus }, formItemData, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 73, columnNumber: 7 } }),\n  ___EmotionJSX(Select, { allowClear: true, value: value, placeholder: placeholderText\n    // @ts-ignore\n    , onChange: handleChange, onMouseEnter: setFocusedFilter, onMouseLeave: unsetFocusedFilter, ref: inputRef, options: options, __self: this, __source: { fileName: _jsxFileName, lineNumber: 74, columnNumber: 9 } })));\n\n\n}__signature__(PluginFilterTimegrain, \"useState{[value, setValue](defaultValue ?? [])}\\nuseMemo{durationMap}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PluginFilterTimegrain, \"PluginFilterTimegrain\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/TimeGrain/TimeGrainFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/TimeGrain/TimeGrainFilterPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  t,\n  TimeGranularity,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeGrainProps } from './types';\n\nexport default function PluginFilterTimegrain(\n  props: PluginFilterTimeGrainProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    filterState,\n  } = props;\n  const { defaultValue, inputRef } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n  const durationMap = useMemo(\n    () =>\n      data.reduce(\n        (agg, { duration, name }: { duration: string; name: string }) => ({\n          ...agg,\n          [duration]: name,\n        }),\n        {} as { [key in string]: string },\n      ),\n    [JSON.stringify(data)],\n  );\n\n  const handleChange = (values: string[] | string | undefined | null) => {\n    const resultValue: string[] = ensureIsArray<string>(values);\n    const [timeGrain] = resultValue;\n    const label = timeGrain ? durationMap[timeGrain] : undefined;\n\n    const extraFormData: ExtraFormData = {};\n    if (timeGrain) {\n      extraFormData.time_grain_sqla = timeGrain as TimeGranularity;\n    }\n    setValue(resultValue);\n    setDataMask({\n      extraFormData,\n      filterState: {\n        label,\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? []);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? []);\n  }, [JSON.stringify(filterState.value)]);\n\n  const placeholderText =\n    (data || []).length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = (data || []).map(\n    (row: { name: string; duration: string }) => {\n      const { name, duration } = row;\n      return {\n        label: name,\n        value: duration,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onMouseEnter={setFocusedFilter}\n          onMouseLeave={unsetFocusedFilter}\n          ref={inputRef}\n          options={options}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}