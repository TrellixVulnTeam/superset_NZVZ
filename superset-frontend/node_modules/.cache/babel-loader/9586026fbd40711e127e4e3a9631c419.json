{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useTheme } from '@superset-ui/core';\nimport { useSelector, connect } from 'react-redux';\n\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../../util/componentTypes';\n\nimport {\nGRID_BASE_UNIT,\nGRID_GUTTER_SIZE,\nGRID_MIN_COLUMN_COUNT,\nGRID_MIN_ROW_UNITS } from\n'../../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  getComponentById: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  focusedFilterScope: PropTypes.object,\n  fullSizeChartId: PropTypes.oneOf([PropTypes.number, null]),\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  setFullSizeChartId: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0 };\n\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column] };\n\n}\n\n/**\n * Renders any styles necessary to highlight the chart's relationship to the focused filter.\n *\n * If there is no focused filter scope (i.e. most of the time), this will be just a pass-through.\n *\n * If the chart is outside the scope of the focused filter, dims the chart.\n *\n * If the chart is in the scope of the focused filter,\n * renders a highlight around the chart.\n *\n * If ChartHolder were a function component, this could be implemented as a hook instead.\n */\nconst FilterFocusHighlight = /*#__PURE__*/React.forwardRef(__signature__(\n({ chartId, ...otherProps }, ref) => {\n  const theme = useTheme();\n\n  const nativeFilters = useSelector((state) => state.nativeFilters);\n  const dashboardState = useSelector((state) => state.dashboardState);\n  const dashboardFilters = useSelector((state) => state.dashboardFilters);\n  const focusedFilterScope = selectFocusedFilterScope(\n  dashboardState,\n  dashboardFilters);\n\n  const focusedNativeFilterId = nativeFilters.focusedFilterId;\n  if (!(focusedFilterScope || focusedNativeFilterId))\n  return ___EmotionJSX(\"div\", _extends({ ref: ref }, otherProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 119, columnNumber: 14 } }));\n\n  // we use local styles here instead of a conditionally-applied class,\n  // because adding any conditional class to this container\n  // causes performance issues in Chrome.\n\n  // default to the \"de-emphasized\" state\n  const unfocusedChartStyles = { opacity: 0.3, pointerEvents: 'none' };\n  const focusedChartStyles = {\n    borderColor: theme.colors.primary.light2,\n    opacity: 1,\n    boxShadow: `0px 0px ${theme.gridUnit * 2}px ${theme.colors.primary.base}`,\n    pointerEvents: 'auto' };\n\n\n  if (focusedNativeFilterId) {var _nativeFilters$filter, _nativeFilters$filter2;\n    if ((_nativeFilters$filter =\n    nativeFilters.filters[focusedNativeFilterId]) != null && (_nativeFilters$filter2 = _nativeFilters$filter.chartsInScope) != null && _nativeFilters$filter2.includes(\n    chartId))\n\n    {\n      return ___EmotionJSX(\"div\", _extends({ ref: ref, style: focusedChartStyles }, otherProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 140, columnNumber: 16 } }));\n    }\n  } else if (\n  chartId === focusedFilterScope.chartId ||\n  getChartIdsInFilterScope({\n    filterScope: focusedFilterScope.scope }).\n  includes(chartId))\n  {\n    return ___EmotionJSX(\"div\", _extends({ ref: ref, style: focusedChartStyles }, otherProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 148, columnNumber: 14 } }));\n  }\n\n  // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n  return ___EmotionJSX(\"div\", _extends({ ref: ref, style: unfocusedChartStyles }, otherProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 152, columnNumber: 12 } }));\n}, \"useTheme{theme}\\nuseSelector{nativeFilters}\\nuseSelector{dashboardState}\\nuseSelector{dashboardFilters}\", () => [useTheme, useSelector, useSelector, useSelector]));\n\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      ___EmotionJSX(\"style\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 159, columnNumber: 7 } },\n      `label[for=${columnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n           }`));\n\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId } =\n    getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n    directPathLastUpdated !== state.directPathLastUpdated &&\n    component.id === chartComponentId)\n    {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated };\n\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0 };\n\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateSliceName = this.handleUpdateSliceName.bind(this);\n    this.handleToggleFullSize = this.handleToggleFullSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null }));\n\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName } } });\n\n\n\n  }\n\n  handleToggleFullSize() {\n    const { component, fullSizeChartId, setFullSizeChartId } = this.props;\n    const { chartId } = component.meta;\n    const isFullSize = fullSizeChartId === chartId;\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }\n\n  render() {var _getComponentById, _getComponentById$met, _parentComponent$pare;\n    const { isFocused } = this.state;\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId,\n      fullSizeChartId,\n      getComponentById = () => undefined } =\n    this.props;\n\n    const { chartId } = component.meta;\n    const isFullSize = fullSizeChartId === chartId;\n\n    // inherit the size of parent columns\n    const columnParentWidth = (_getComponentById = getComponentById((_parentComponent$pare =\n    parentComponent.parents) == null ? void 0 : _parentComponent$pare.find((parent) => parent.startsWith(COLUMN_TYPE)))) == null ? void 0 : (_getComponentById$met = _getComponentById.\n    meta) == null ? void 0 : _getComponentById$met.width;\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n\n    let chartWidth = 0;\n    let chartHeight = 0;\n\n    if (isFullSize) {\n      chartWidth = window.innerWidth - CHART_MARGIN;\n      chartHeight = window.innerHeight - CHART_MARGIN;\n    } else {\n      chartWidth = Math.floor(\n      widthMultiple * columnWidth +\n      (widthMultiple - 1) * GRID_GUTTER_SIZE -\n      CHART_MARGIN);\n\n      chartHeight = Math.floor(\n      component.meta.height * GRID_BASE_UNIT - CHART_MARGIN);\n\n    }\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row',\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        disableDragDrop: isFocused,\n        editMode: editMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 307, columnNumber: 7 } },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(ResizableContainer, {\n        id: component.id,\n        adjustableWidth: parentComponent.type === ROW_TYPE,\n        adjustableHeight: true,\n        widthStep: columnWidth,\n        widthMultiple: widthMultiple,\n        heightStep: GRID_BASE_UNIT,\n        heightMultiple: component.meta.height,\n        minWidthMultiple: GRID_MIN_COLUMN_COUNT,\n        minHeightMultiple: GRID_MIN_ROW_UNITS,\n        maxWidthMultiple: availableColumnCount + widthMultiple,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        editMode: editMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 318, columnNumber: 11 } },\n\n      ___EmotionJSX(FilterFocusHighlight, {\n        chartId: chartId,\n        ref: dragSourceRef,\n        \"data-test\": \"dashboard-component-chart-holder\",\n        className: cx(\n        'dashboard-component',\n        'dashboard-component-chart-holder',\n        this.state.outlinedComponentId ? 'fade-in' : 'fade-out',\n        isFullSize && 'full-size'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 334, columnNumber: 13 } },\n\n\n      !editMode &&\n      ___EmotionJSX(AnchorLink, {\n        anchorLinkId: component.id,\n        inFocus: !!this.state.outlinedComponentId, __self: this, __source: { fileName: _jsxFileName, lineNumber: 346, columnNumber: 17 } }),\n\n\n      !!this.state.outlinedComponentId &&\n      ChartHolder.renderInFocusCSS(this.state.outlinedColumnName),\n      ___EmotionJSX(Chart, {\n        componentId: component.id,\n        id: component.meta.chartId,\n        dashboardId: dashboardId,\n        width: chartWidth,\n        height: chartHeight,\n        sliceName:\n        component.meta.sliceNameOverride ||\n        component.meta.sliceName ||\n        '',\n\n        updateSliceName: this.handleUpdateSliceName,\n        isComponentVisible: isComponentVisible,\n        handleToggleFullSize: this.handleToggleFullSize,\n        isFullSize: isFullSize, __self: this, __source: { fileName: _jsxFileName, lineNumber: 353, columnNumber: 15 } }),\n\n      editMode &&\n      ___EmotionJSX(HoverMenu, { position: \"top\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 370, columnNumber: 17 } },\n      ___EmotionJSX(\"div\", { \"data-test\": \"dashboard-delete-component-button\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 371, columnNumber: 19 } },\n      ___EmotionJSX(DeleteComponentButton, {\n        onDelete: this.handleDeleteComponent, __self: this, __source: { fileName: _jsxFileName, lineNumber: 372, columnNumber: 21 } })))),\n\n\n\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", _extends({}, dropIndicatorProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 380, columnNumber: 36 } })))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    directPathToChild: state.dashboardState.directPathToChild,\n    directPathLastUpdated: state.dashboardState.directPathLastUpdated };\n\n}const _default =\nconnect(mapStateToProps)(ChartHolder);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_MARGIN, \"CHART_MARGIN\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(selectFocusedFilterScope, \"selectFocusedFilterScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(FilterFocusHighlight, \"FilterFocusHighlight\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(ChartHolder, \"ChartHolder\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx"],"names":["React","PropTypes","cx","useTheme","useSelector","connect","getChartIdsInFilterScope","Chart","AnchorLink","DeleteComponentButton","DragDroppable","HoverMenu","ResizableContainer","getChartAndLabelComponentIdFromPath","componentShape","COLUMN_TYPE","ROW_TYPE","GRID_BASE_UNIT","GRID_GUTTER_SIZE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","CHART_MARGIN","propTypes","id","string","isRequired","parentId","dashboardId","number","component","parentComponent","getComponentById","func","index","depth","editMode","bool","directPathToChild","arrayOf","directPathLastUpdated","focusedFilterScope","object","fullSizeChartId","oneOf","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","deleteComponent","updateComponents","handleComponentDrop","setFullSizeChartId","defaultProps","selectFocusedFilterScope","dashboardState","dashboardFilters","focusedFilterField","chartId","column","scope","scopes","FilterFocusHighlight","forwardRef","otherProps","ref","theme","nativeFilters","state","focusedNativeFilterId","focusedFilterId","unfocusedChartStyles","opacity","pointerEvents","focusedChartStyles","borderColor","colors","primary","light2","boxShadow","gridUnit","base","filters","chartsInScope","includes","filterScope","ChartHolder","Component","renderInFocusCSS","columnName","getDerivedStateFromProps","props","label","chart","chartComponentId","outlinedComponentId","outlinedColumnName","constructor","isFocused","handleChangeFocus","bind","handleDeleteComponent","handleUpdateSliceName","handleToggleFullSize","componentDidMount","hideOutline","componentDidUpdate","prevProps","prevState","timerKey","prevTimerKey","setTimeout","setState","nextFocus","nextName","meta","sliceNameOverride","isFullSize","render","isComponentVisible","undefined","columnParentWidth","parents","find","parent","startsWith","width","widthMultiple","type","chartWidth","chartHeight","window","innerWidth","innerHeight","Math","floor","height","dropIndicatorProps","dragSourceRef","sliceName","mapStateToProps"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useTheme } from '@superset-ui/core';\nimport { useSelector, connect } from 'react-redux';\n\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../../util/componentTypes';\n\nimport {\n  GRID_BASE_UNIT,\n  GRID_GUTTER_SIZE,\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n} from '../../util/constants';\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  getComponentById: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  focusedFilterScope: PropTypes.object,\n  fullSizeChartId: PropTypes.oneOf([PropTypes.number, null]),\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  setFullSizeChartId: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n};\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column],\n  };\n}\n\n/**\n * Renders any styles necessary to highlight the chart's relationship to the focused filter.\n *\n * If there is no focused filter scope (i.e. most of the time), this will be just a pass-through.\n *\n * If the chart is outside the scope of the focused filter, dims the chart.\n *\n * If the chart is in the scope of the focused filter,\n * renders a highlight around the chart.\n *\n * If ChartHolder were a function component, this could be implemented as a hook instead.\n */\nconst FilterFocusHighlight = React.forwardRef(\n  ({ chartId, ...otherProps }, ref) => {\n    const theme = useTheme();\n\n    const nativeFilters = useSelector(state => state.nativeFilters);\n    const dashboardState = useSelector(state => state.dashboardState);\n    const dashboardFilters = useSelector(state => state.dashboardFilters);\n    const focusedFilterScope = selectFocusedFilterScope(\n      dashboardState,\n      dashboardFilters,\n    );\n    const focusedNativeFilterId = nativeFilters.focusedFilterId;\n    if (!(focusedFilterScope || focusedNativeFilterId))\n      return <div ref={ref} {...otherProps} />;\n\n    // we use local styles here instead of a conditionally-applied class,\n    // because adding any conditional class to this container\n    // causes performance issues in Chrome.\n\n    // default to the \"de-emphasized\" state\n    const unfocusedChartStyles = { opacity: 0.3, pointerEvents: 'none' };\n    const focusedChartStyles = {\n      borderColor: theme.colors.primary.light2,\n      opacity: 1,\n      boxShadow: `0px 0px ${theme.gridUnit * 2}px ${theme.colors.primary.base}`,\n      pointerEvents: 'auto',\n    };\n\n    if (focusedNativeFilterId) {\n      if (\n        nativeFilters.filters[focusedNativeFilterId]?.chartsInScope?.includes(\n          chartId,\n        )\n      ) {\n        return <div ref={ref} style={focusedChartStyles} {...otherProps} />;\n      }\n    } else if (\n      chartId === focusedFilterScope.chartId ||\n      getChartIdsInFilterScope({\n        filterScope: focusedFilterScope.scope,\n      }).includes(chartId)\n    ) {\n      return <div ref={ref} style={focusedChartStyles} {...otherProps} />;\n    }\n\n    // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n    return <div ref={ref} style={unfocusedChartStyles} {...otherProps} />;\n  },\n);\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      <style>\n        {`label[for=${columnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n           }`}\n      </style>\n    );\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId,\n    } = getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n      directPathLastUpdated !== state.directPathLastUpdated &&\n      component.id === chartComponentId\n    ) {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0,\n    };\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateSliceName = this.handleUpdateSliceName.bind(this);\n    this.handleToggleFullSize = this.handleToggleFullSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null,\n        }));\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName,\n        },\n      },\n    });\n  }\n\n  handleToggleFullSize() {\n    const { component, fullSizeChartId, setFullSizeChartId } = this.props;\n    const { chartId } = component.meta;\n    const isFullSize = fullSizeChartId === chartId;\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }\n\n  render() {\n    const { isFocused } = this.state;\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId,\n      fullSizeChartId,\n      getComponentById = () => undefined,\n    } = this.props;\n\n    const { chartId } = component.meta;\n    const isFullSize = fullSizeChartId === chartId;\n\n    // inherit the size of parent columns\n    const columnParentWidth = getComponentById(\n      parentComponent.parents?.find(parent => parent.startsWith(COLUMN_TYPE)),\n    )?.meta?.width;\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n\n    let chartWidth = 0;\n    let chartHeight = 0;\n\n    if (isFullSize) {\n      chartWidth = window.innerWidth - CHART_MARGIN;\n      chartHeight = window.innerHeight - CHART_MARGIN;\n    } else {\n      chartWidth = Math.floor(\n        widthMultiple * columnWidth +\n          (widthMultiple - 1) * GRID_GUTTER_SIZE -\n          CHART_MARGIN,\n      );\n      chartHeight = Math.floor(\n        component.meta.height * GRID_BASE_UNIT - CHART_MARGIN,\n      );\n    }\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        disableDragDrop={isFocused}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <ResizableContainer\n            id={component.id}\n            adjustableWidth={parentComponent.type === ROW_TYPE}\n            adjustableHeight\n            widthStep={columnWidth}\n            widthMultiple={widthMultiple}\n            heightStep={GRID_BASE_UNIT}\n            heightMultiple={component.meta.height}\n            minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n            minHeightMultiple={GRID_MIN_ROW_UNITS}\n            maxWidthMultiple={availableColumnCount + widthMultiple}\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            editMode={editMode}\n          >\n            <FilterFocusHighlight\n              chartId={chartId}\n              ref={dragSourceRef}\n              data-test=\"dashboard-component-chart-holder\"\n              className={cx(\n                'dashboard-component',\n                'dashboard-component-chart-holder',\n                this.state.outlinedComponentId ? 'fade-in' : 'fade-out',\n                isFullSize && 'full-size',\n              )}\n            >\n              {!editMode && (\n                <AnchorLink\n                  anchorLinkId={component.id}\n                  inFocus={!!this.state.outlinedComponentId}\n                />\n              )}\n              {!!this.state.outlinedComponentId &&\n                ChartHolder.renderInFocusCSS(this.state.outlinedColumnName)}\n              <Chart\n                componentId={component.id}\n                id={component.meta.chartId}\n                dashboardId={dashboardId}\n                width={chartWidth}\n                height={chartHeight}\n                sliceName={\n                  component.meta.sliceNameOverride ||\n                  component.meta.sliceName ||\n                  ''\n                }\n                updateSliceName={this.handleUpdateSliceName}\n                isComponentVisible={isComponentVisible}\n                handleToggleFullSize={this.handleToggleFullSize}\n                isFullSize={isFullSize}\n              />\n              {editMode && (\n                <HoverMenu position=\"top\">\n                  <div data-test=\"dashboard-delete-component-button\">\n                    <DeleteComponentButton\n                      onDelete={this.handleDeleteComponent}\n                    />\n                  </div>\n                </HoverMenu>\n              )}\n            </FilterFocusHighlight>\n\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </ResizableContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    directPathToChild: state.dashboardState.directPathToChild,\n    directPathLastUpdated: state.dashboardState.directPathLastUpdated,\n  };\n}\nexport default connect(mapStateToProps)(ChartHolder);\n"]},"metadata":{},"sourceType":"module"}