{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/filterscope/renderFilterScopeTreeNodes.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\n\nimport ChartIcon from 'src/components/ChartIcon';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nfunction traverse({ currentNode = {}, selectedChartId }) {\n  if (!currentNode) {\n    return null;\n  }\n\n  const { label, value, type, children } = currentNode;\n  if (children && children.length) {\n    const updatedChildren = children.map((child) =>\n    traverse({ currentNode: child, selectedChartId }));\n\n    return {\n      ...currentNode,\n      label:\n      ___EmotionJSX(\"span\", {\n        className: cx(`filter-scope-type ${type.toLowerCase()}`, {\n          'selected-filter': selectedChartId === value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 38, columnNumber: 9 } },\n\n\n      type === CHART_TYPE &&\n      ___EmotionJSX(\"span\", { className: \"type-indicator\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 44, columnNumber: 13 } },\n      ___EmotionJSX(ChartIcon, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 45, columnNumber: 15 } })),\n\n\n      label),\n\n\n      children: updatedChildren };\n\n  }\n  return {\n    ...currentNode,\n    label:\n    ___EmotionJSX(\"span\", {\n      className: cx(`filter-scope-type ${type.toLowerCase()}`, {\n        'selected-filter': selectedChartId === value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 57, columnNumber: 7 } },\n\n\n    label) };\n\n\n\n}\n\nexport default function renderFilterScopeTreeNodes({ nodes, selectedChartId }) {\n  if (!nodes) {\n    return [];\n  }\n\n  return nodes.map((node) => traverse({ currentNode: node, selectedChartId }));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(traverse, \"traverse\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/filterscope/renderFilterScopeTreeNodes.jsx\");reactHotLoader.register(renderFilterScopeTreeNodes, \"renderFilterScopeTreeNodes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/filterscope/renderFilterScopeTreeNodes.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/filterscope/renderFilterScopeTreeNodes.jsx"],"names":["React","cx","ChartIcon","CHART_TYPE","traverse","currentNode","selectedChartId","label","value","type","children","length","updatedChildren","map","child","toLowerCase","renderFilterScopeTreeNodes","nodes","node"],"mappings":"mbAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B,C;;AAEA,SAASC,QAAT,CAAkB,EAAEC,WAAW,GAAG,EAAhB,EAAoBC,eAApB,EAAlB,EAAyD;AACvD,MAAI,CAACD,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,QAAM,EAAEE,KAAF,EAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,KAAmCL,WAAzC;AACA,MAAIK,QAAQ,IAAIA,QAAQ,CAACC,MAAzB,EAAiC;AAC/B,UAAMC,eAAe,GAAGF,QAAQ,CAACG,GAAT,CAAa,CAAAC,KAAK;AACxCV,IAAAA,QAAQ,CAAC,EAAEC,WAAW,EAAES,KAAf,EAAsBR,eAAtB,EAAD,CADc,CAAxB;;AAGA,WAAO;AACL,SAAGD,WADE;AAELE,MAAAA,KAAK;AACH;AACE,QAAA,SAAS,EAAEN,EAAE,CAAE,qBAAoBQ,IAAI,CAACM,WAAL,EAAmB,EAAzC,EAA4C;AACvD,6BAAmBT,eAAe,KAAKE,KADgB,EAA5C,CADf;;;AAKGC,MAAAA,IAAI,KAAKN,UAAT;AACC,8BAAM,SAAS,EAAC,gBAAhB;AACE,oBAAC,SAAD,2FADF,CANJ;;;AAUGI,MAAAA,KAVH,CAHG;;;AAgBLG,MAAAA,QAAQ,EAAEE,eAhBL,EAAP;;AAkBD;AACD,SAAO;AACL,OAAGP,WADE;AAELE,IAAAA,KAAK;AACH;AACE,MAAA,SAAS,EAAEN,EAAE,CAAE,qBAAoBQ,IAAI,CAACM,WAAL,EAAmB,EAAzC,EAA4C;AACvD,2BAAmBT,eAAe,KAAKE,KADgB,EAA5C,CADf;;;AAKGD,IAAAA,KALH,CAHG,EAAP;;;;AAYD;;AAED,eAAe,SAASS,0BAAT,CAAoC,EAAEC,KAAF,EAASX,eAAT,EAApC,EAAgE;AAC7E,MAAI,CAACW,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,SAAOA,KAAK,CAACJ,GAAN,CAAU,CAAAK,IAAI,KAAId,QAAQ,CAAC,EAAEC,WAAW,EAAEa,IAAf,EAAqBZ,eAArB,EAAD,CAA1B,CAAP;AACD,C,iLAjDQF,Q,+JA2CeY,0B","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\n\nimport ChartIcon from 'src/components/ChartIcon';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\n\nfunction traverse({ currentNode = {}, selectedChartId }) {\n  if (!currentNode) {\n    return null;\n  }\n\n  const { label, value, type, children } = currentNode;\n  if (children && children.length) {\n    const updatedChildren = children.map(child =>\n      traverse({ currentNode: child, selectedChartId }),\n    );\n    return {\n      ...currentNode,\n      label: (\n        <span\n          className={cx(`filter-scope-type ${type.toLowerCase()}`, {\n            'selected-filter': selectedChartId === value,\n          })}\n        >\n          {type === CHART_TYPE && (\n            <span className=\"type-indicator\">\n              <ChartIcon />\n            </span>\n          )}\n          {label}\n        </span>\n      ),\n      children: updatedChildren,\n    };\n  }\n  return {\n    ...currentNode,\n    label: (\n      <span\n        className={cx(`filter-scope-type ${type.toLowerCase()}`, {\n          'selected-filter': selectedChartId === value,\n        })}\n      >\n        {label}\n      </span>\n    ),\n  };\n}\n\nexport default function renderFilterScopeTreeNodes({ nodes, selectedChartId }) {\n  if (!nodes) {\n    return [];\n  }\n\n  return nodes.map(node => traverse({ currentNode: node, selectedChartId }));\n}\n"]},"metadata":{},"sourceType":"module"}