{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _debounce from \"lodash/debounce\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import \"core-js/modules/es.string.replace.js\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { matchSorter, rankings } from 'match-sorter';\nimport { css, styled, t } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\nimport { Input } from 'src/common/components';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light4};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 4}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-weight: ${theme.typography.weights.light};\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\nconst LabelWrapper = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  & > span {\n    white-space: nowrap;\n  }\n\n  .option-label {\n    display: inline;\n  }\n\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\nconst LabelContainer = (props) => {\n  const labelRef = useRef(null);\n  const [showTooltip, setShowTooltip] = useState(true);\n  const isLabelTruncated = () => !!(labelRef &&\n  labelRef.current &&\n  labelRef.current.scrollWidth > labelRef.current.clientWidth);\n  const handleShowTooltip = () => {\n    const shouldShowTooltip = isLabelTruncated();\n    if (shouldShowTooltip !== showTooltip) {\n      setShowTooltip(shouldShowTooltip);\n    }\n  };\n  const handleResetTooltip = () => {\n    setShowTooltip(true);\n  };\n  const extendedProps = {\n    labelRef,\n    showTooltip };\n\n  return ___EmotionJSX(LabelWrapper, { onMouseEnter: handleShowTooltip, onMouseLeave: handleResetTooltip, className: props.className, __self: this, __source: { fileName: _jsxFileName, lineNumber: 117, columnNumber: 13 } }, /*#__PURE__*/\n  React.cloneElement(props.children, extendedProps));\n\n};__signature__(LabelContainer, \"useRef{labelRef}\\nuseState{[showTooltip, setShowTooltip](true)}\");\nconst enableExploreDnd = isFeatureEnabled(FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP);\nexport default function DataSourcePanel({ datasource, controls: { datasource: datasourceControl }, actions }) {\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(() => [..._columns].sort((col1, col2) => {\n    if (col1.is_dttm && !col2.is_dttm) {\n      return -1;\n    }\n    if (col2.is_dttm && !col1.is_dttm) {\n      return 1;\n    }\n    return 0;\n  }), [_columns]);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics });\n\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n  const search = useMemo(() => _debounce((value) => {\n    if (value === '') {\n      setList({ columns, metrics });\n      return;\n    }\n    setList({\n      columns: matchSorter(columns, value, {\n        keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: 'column_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: (item) => [item.description, item.expression].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || ''),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS }],\n\n\n        keepDiacritics: true }),\n\n      metrics: matchSorter(metrics, value, {\n        keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: 'metric_name',\n          threshold: rankings.CONTAINS },\n\n        {\n          key: (item) => [item.description, item.expression].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || ''),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS }],\n\n\n        keepDiacritics: true,\n        baseSort: (a, b) => Number(b.item.is_certified) - Number(a.item.is_certified) ||\n        String(a.rankedValue).localeCompare(b.rankedValue) }) });\n\n\n  }, FAST_DEBOUNCE), [columns, metrics]);\n  useEffect(() => {\n    setList({\n      columns,\n      metrics });\n\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n  const sortCertifiedFirst = (slice) => slice.sort((a, b) => b.is_certified - a.is_certified);\n  const metricSlice = useMemo(() => showAllMetrics ?\n  lists.metrics :\n  lists.metrics.slice(0, DEFAULT_MAX_METRICS_LENGTH), [lists.metrics, showAllMetrics]);\n  const columnSlice = useMemo(() => showAllColumns ?\n  sortCertifiedFirst(lists.columns) :\n  sortCertifiedFirst(lists.columns.slice(0, DEFAULT_MAX_COLUMNS_LENGTH)), [lists.columns, showAllColumns]);\n  const mainBody = useMemo(() => ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Input, { allowClear: true, onChange: (evt) => {\n      setInputValue(evt.target.value);\n      search(evt.target.value);\n    }, value: inputValue, className: \"form-control input-md\", placeholder: t('Search Metrics & Columns'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 204, columnNumber: 9 } }),\n  ___EmotionJSX(\"div\", { className: \"field-selections\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 208, columnNumber: 9 } },\n  ___EmotionJSX(Collapse, { bordered: true, defaultActiveKey: ['metrics', 'column'], expandIconPosition: \"right\", ghost: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 209, columnNumber: 11 } },\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"span\", { className: \"header\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 210, columnNumber: 37 } }, t('Metrics')), key: \"metrics\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 210, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"field-length\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 211, columnNumber: 15 } },\n  t(`Showing %s of %s`, metricSlice.length, lists.metrics.length)),\n\n  metricSlice.map((m) => ___EmotionJSX(LabelContainer, { key: m.metric_name, className: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 214, columnNumber: 38 } },\n  enableExploreDnd ? ___EmotionJSX(DatasourcePanelDragOption, { value: m, type: DndItemType.Metric, __self: this, __source: { fileName: _jsxFileName, lineNumber: 215, columnNumber: 40 } }) : ___EmotionJSX(StyledMetricOption, { metric: m, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 215, columnNumber: 109 } }))),\n\n  lists.metrics.length > DEFAULT_MAX_METRICS_LENGTH ? ___EmotionJSX(ButtonContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 217, columnNumber: 69 } },\n  ___EmotionJSX(Button, { onClick: () => setShowAllMetrics(!showAllMetrics), __self: this, __source: { fileName: _jsxFileName, lineNumber: 218, columnNumber: 19 } },\n  showAllMetrics ? t('Show less...') : t('Show all...'))) :\n\n  ___EmotionJSX(React.Fragment, null)),\n\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"span\", { className: \"header\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 37 } }, t('Columns')), key: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"field-length\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 224, columnNumber: 15 } },\n  t(`Showing %s of %s`, columnSlice.length, lists.columns.length)),\n\n  columnSlice.map((col) => ___EmotionJSX(LabelContainer, { key: col.column_name, className: \"column\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 227, columnNumber: 40 } },\n  enableExploreDnd ? ___EmotionJSX(DatasourcePanelDragOption, { value: col, type: DndItemType.Column, __self: this, __source: { fileName: _jsxFileName, lineNumber: 228, columnNumber: 40 } }) : ___EmotionJSX(StyledColumnOption, { column: col, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 228, columnNumber: 111 } }))),\n\n  lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? ___EmotionJSX(ButtonContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 230, columnNumber: 69 } },\n  ___EmotionJSX(Button, { onClick: () => setShowAllColumns(!showAllColumns), __self: this, __source: { fileName: _jsxFileName, lineNumber: 231, columnNumber: 19 } },\n  showAllColumns ? t('Show Less...') : t('Show all...'))) :\n\n  ___EmotionJSX(React.Fragment, null))))),\n\n\n\n  [\n  columnSlice,\n  inputValue,\n  lists.columns.length,\n  lists.metrics.length,\n  metricSlice,\n  search,\n  showAllColumns,\n  showAllMetrics]);\n\n  return ___EmotionJSX(DatasourceContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 248, columnNumber: 13 } },\n  ___EmotionJSX(Control, _extends({}, datasourceControl, { name: \"datasource\", actions: actions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 249, columnNumber: 7 } })),\n  datasource.id != null && mainBody);\n\n}__signature__(DataSourcePanel, \"useMemo{columns}\\nuseState{[inputValue, setInputValue]('')}\\nuseState{[lists, setList]({\\n        columns,\\n        metrics,\\n    })}\\nuseState{[showAllMetrics, setShowAllMetrics](false)}\\nuseState{[showAllColumns, setShowAllColumns](false)}\\nuseMemo{search}\\nuseEffect{}\\nuseMemo{metricSlice}\\nuseMemo{columnSlice}\\nuseMemo{mainBody}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Button, \"Button\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(ButtonContainer, \"ButtonContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(LabelWrapper, \"LabelWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(LabelContainer, \"LabelContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(enableExploreDnd, \"enableExploreDnd\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DataSourcePanel, \"DataSourcePanel\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx"],"names":[],"mappings":"ojBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,SAAhB,EAA2B,OAA3B,EAAoC,MAApC,EAA4C,QAA5C,QAA4D,OAA5D;;AAOA,SAAS,WAAT,EAAsB,QAAtB,QAAsC,cAAtC;AACA,SAAS,GAAT,EAAc,MAAd,EAAsB,CAAtB,QAA+B,mBAA/B;AACA,OAAO,QAAP,MAAqB,yBAArB;AACA,SAAS,KAAT,QAAsB,uBAAtB;AACA,SAAS,aAAT,QAA8B,eAA9B;AACA,SAAS,WAAT,EAAsB,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,OAAP,MAAoB,gCAApB;AACA,OAAO,yBAAP,MAAsC,6BAAtC;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,kBAAT,EAA6B,kBAA7B,QAAuD,oBAAvD,C;AAcA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;;;;WAIjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,KAAK;AACnD,CALD;AAOA,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG;;;AAGjC,CAHD;AAKA,MAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG;IAClC,CAAC,EAAE,KAAF,EAAD,KAAe,GAAG;wBACE,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;;;;;;;;;qBAUhC,IAAI,KAAK,CAAC,QAAQ;;;;uBAIhB,KAAK,CAAC,QAAN,GAAiB,CAAC;mBACtB,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;eAC5B,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;;2BAGjB,KAAK,CAAC,QAAN,GAAiB,CAAC;gBAC7B,KAAK,CAAC,QAAN,GAAiB,CAAC;gBAClB,KAAK,CAAC,QAAN,GAAiB,CAAC;;;qBAGb,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAAyB,KAAK;mBAChC,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;eAC5B,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,IAAI;;;;;AAKvC,GAAA;AACF,CAlCD;AAoCA,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG;;;;;;;;;;;;;;mBAcZ,CAAC,EAAE,KAAF,EAAD,KAAe,GAAG,KAAK,CAAC,QAAN,GAAiB,CAAC,IAAI;;;;;;;AAO1D,CArBD;AAuBA,MAAM,cAAc,GAAG,CAAC,KAAD,KAGlB;AACH,QAAM,QAAQ,GAAG,MAAM,CAAiB,IAAjB,CAAvB;AACA,QAAM,CAAC,WAAD,EAAc,cAAd,IAAgC,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,gBAAgB,GAAG,MACvB,CAAC,EACC,QAAQ;AACR,EAAA,QAAQ,CAAC,OADT;AAEA,EAAA,QAAQ,CAAC,OAAT,CAAiB,WAAjB,GAA+B,QAAQ,CAAC,OAAT,CAAiB,WAHjD,CADH;AAMA,QAAM,iBAAiB,GAAG,MAAK;AAC7B,UAAM,iBAAiB,GAAG,gBAAgB,EAA1C;AACA,QAAI,iBAAiB,KAAK,WAA1B,EAAuC;AACrC,MAAA,cAAc,CAAC,iBAAD,CAAd;AACD;AACF,GALD;AAMA,QAAM,kBAAkB,GAAG,MAAK;AAC9B,IAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;AAGA,QAAM,aAAa,GAAG;AACpB,IAAA,QADoB;AAEpB,IAAA,WAFoB,EAAtB;;AAIA,SACE,cAAC,YAAD,IACE,YAAY,EAAE,iBADhB,EAEE,YAAY,EAAE,kBAFhB,EAGE,SAAS,EAAE,KAAK,CAAC,SAHnB;AAKG,EAAA,KAAK,CAAC,YAAN,CAAmB,KAAK,CAAC,QAAzB,EAAmC,aAAnC,CALH,CADF;;AASD,CAlCD,C,cAAM,c;AAoCN,MAAM,gBAAgB,GAAG,gBAAgB,CACvC,WAAW,CAAC,4BAD2B,CAAzC;AAIA,eAAc,SAAU,eAAV,CAA0B,EACtC,UADsC,EAEtC,QAAQ,EAAE,EAAE,UAAU,EAAE,iBAAd,EAF4B,EAGtC,OAHsC,EAA1B,EAIN;AACN,QAAM,EAAE,OAAO,EAAE,QAAX,EAAqB,OAArB,KAAiC,UAAvC;AAEA;AACA,QAAM,OAAO,GAAG,OAAO,CACrB,MACE,CAAC,GAAG,QAAJ,EAAc,IAAd,CAAmB,CAAC,IAAD,EAAO,IAAP,KAAe;AAChC,QAAI,IAAI,CAAC,OAAL,IAAgB,CAAC,IAAI,CAAC,OAA1B,EAAmC;AACjC,aAAO,CAAC,CAAR;AACD;AACD,QAAI,IAAI,CAAC,OAAL,IAAgB,CAAC,IAAI,CAAC,OAA1B,EAAmC;AACjC,aAAO,CAAP;AACD;AACD,WAAO,CAAP;AACD,GARD,CAFmB,EAWrB,CAAC,QAAD,CAXqB,CAAvB;AAcA,QAAM,CAAC,UAAD,EAAa,aAAb,IAA8B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC,KAAD,EAAQ,OAAR,IAAmB,QAAQ,CAAC;AAChC,IAAA,OADgC;AAEhC,IAAA,OAFgC,EAAD,CAAjC;;AAIA,QAAM,CAAC,cAAD,EAAiB,iBAAjB,IAAsC,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC,cAAD,EAAiB,iBAAjB,IAAsC,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,0BAA0B,GAAG,EAAnC;AACA,QAAM,0BAA0B,GAAG,EAAnC;AAEA,QAAM,MAAM,GAAG,OAAO,CACpB,MACE,UAAS,CAAC,KAAD,KAAkB;AACzB,QAAI,KAAK,KAAK,EAAd,EAAkB;AAChB,MAAA,OAAO,CAAC,EAAE,OAAF,EAAW,OAAX,EAAD,CAAP;AACA;AACD;AACD,IAAA,OAAO,CAAC;AACN,MAAA,OAAO,EAAE,WAAW,CAAC,OAAD,EAAU,KAAV,EAAiB;AACnC,QAAA,IAAI,EAAE;AACJ;AACE,UAAA,GAAG,EAAE,cADP;AAEE,UAAA,SAAS,EAAE,QAAQ,CAAC,QAFtB,EADI;;AAKJ;AACE,UAAA,GAAG,EAAE,aADP;AAEE,UAAA,SAAS,EAAE,QAAQ,CAAC,QAFtB,EALI;;AASJ;AACE,UAAA,GAAG,EAAE,CAAA,IAAI,KACP,CAAC,IAAI,CAAC,WAAN,EAAmB,IAAI,CAAC,UAAxB,EAAoC,GAApC,CACE,CAAA,CAAC,KAAI,CAAA,CAAC,QAAD,YAAA,CAAC,CAAE,OAAH,CAAW,WAAX,EAAwB,GAAxB,MAAgC,EADvC,CAFJ;AAKE,UAAA,SAAS,EAAE,QAAQ,CAAC,QALtB;AAME,UAAA,UAAU,EAAE,QAAQ,CAAC,QANvB,EATI,CAD6B;;;AAmBnC,QAAA,cAAc,EAAE,IAnBmB,EAAjB,CADd;;AAsBN,MAAA,OAAO,EAAE,WAAW,CAAC,OAAD,EAAU,KAAV,EAAiB;AACnC,QAAA,IAAI,EAAE;AACJ;AACE,UAAA,GAAG,EAAE,cADP;AAEE,UAAA,SAAS,EAAE,QAAQ,CAAC,QAFtB,EADI;;AAKJ;AACE,UAAA,GAAG,EAAE,aADP;AAEE,UAAA,SAAS,EAAE,QAAQ,CAAC,QAFtB,EALI;;AASJ;AACE,UAAA,GAAG,EAAE,CAAA,IAAI,KACP,CAAC,IAAI,CAAC,WAAN,EAAmB,IAAI,CAAC,UAAxB,EAAoC,GAApC,CACE,CAAA,CAAC,KAAI,CAAA,CAAC,QAAD,YAAA,CAAC,CAAE,OAAH,CAAW,WAAX,EAAwB,GAAxB,MAAgC,EADvC,CAFJ;AAKE,UAAA,SAAS,EAAE,QAAQ,CAAC,QALtB;AAME,UAAA,UAAU,EAAE,QAAQ,CAAC,QANvB,EATI,CAD6B;;;AAmBnC,QAAA,cAAc,EAAE,IAnBmB;AAoBnC,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,KACR,MAAM,CAAC,CAAC,CAAC,IAAF,CAAO,YAAR,CAAN,GAA8B,MAAM,CAAC,CAAC,CAAC,IAAF,CAAO,YAAR,CAApC;AACA,QAAA,MAAM,CAAC,CAAC,CAAC,WAAH,CAAN,CAAsB,aAAtB,CAAoC,CAAC,CAAC,WAAtC,CAtBiC,EAAjB,CAtBd,EAAD,CAAP;;;AA+CD,GApDD,EAoDG,aApDH,CAFkB,EAuDpB,CAAC,OAAD,EAAU,OAAV,CAvDoB,CAAtB;AA0DA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,OAAO,CAAC;AACN,MAAA,OADM;AAEN,MAAA,OAFM,EAAD,CAAP;;AAIA,IAAA,aAAa,CAAC,EAAD,CAAb;AACD,GANQ,EAMN,CAAC,OAAD,EAAU,UAAV,EAAsB,OAAtB,CANM,CAAT;AAQA,QAAM,kBAAkB,GAAG,CAAC,KAAD,KACzB,KAAK,CAAC,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,YAAxC,CADF;AAGA,QAAM,WAAW,GAAG,OAAO,CACzB,MACE,cAAc;AACV,EAAA,KAAK,CAAC,OADI;AAEV,EAAA,KAAK,CAAC,OAAN,CAAc,KAAd,CAAoB,CAApB,EAAuB,0BAAvB,CAJmB,EAKzB,CAAC,KAAK,CAAC,OAAP,EAAgB,cAAhB,CALyB,CAA3B;AAOA,QAAM,WAAW,GAAG,OAAO,CACzB,MACE,cAAc;AACV,EAAA,kBAAkB,CAAC,KAAK,CAAC,OAAP,CADR;AAEV,EAAA,kBAAkB,CAChB,KAAK,CAAC,OAAN,CAAc,KAAd,CAAoB,CAApB,EAAuB,0BAAvB,CADgB,CAJC,EAOzB,CAAC,KAAK,CAAC,OAAP,EAAgB,cAAhB,CAPyB,CAA3B;AAUA,QAAM,QAAQ,GAAG,OAAO,CACtB,MACE;AACE,gBAAC,KAAD,IACE,UAAU,MADZ,EAEE,QAAQ,EAAE,CAAA,GAAG,KAAG;AACd,MAAA,aAAa,CAAC,GAAG,CAAC,MAAJ,CAAW,KAAZ,CAAb;AACA,MAAA,MAAM,CAAC,GAAG,CAAC,MAAJ,CAAW,KAAZ,CAAN;AACD,KALH,EAME,KAAK,EAAE,UANT,EAOE,SAAS,EAAC,uBAPZ,EAQE,WAAW,EAAE,CAAC,CAAC,0BAAD,CARhB,yFADF;AAWE,yBAAK,SAAS,EAAC,kBAAf;AACE,gBAAC,QAAD,IACE,QAAQ,MADV,EAEE,gBAAgB,EAAE,CAAC,SAAD,EAAY,QAAZ,CAFpB,EAGE,kBAAkB,EAAC,OAHrB,EAIE,KAAK,MAJP;AAME,gBAAC,QAAD,CAAU,KAAV,IACE,MAAM,EAAE,wBAAM,SAAS,EAAC,QAAhB,2FAA0B,CAAC,CAAC,SAAD,CAA3B,CADV,EAEE,GAAG,EAAC,SAFN;AAIE,yBAAK,SAAS,EAAC,cAAf;AACG,EAAA,CAAC,CACA,kBADA,EAEA,WAAW,CAAC,MAFZ,EAGA,KAAK,CAAC,OAAN,CAAc,MAHd,CADJ,CAJF;;AAWG,EAAA,WAAW,CAAC,GAAZ,CAAgB,CAAA,CAAC,KAChB,cAAC,cAAD,IAAgB,GAAG,EAAE,CAAC,CAAC,WAAvB,EAAoC,SAAS,EAAC,QAA9C;AACG,EAAA,gBAAgB,GACf,cAAC,yBAAD,IACE,KAAK,EAAE,CADT,EAEE,IAAI,EAAE,WAAW,CAAC,MAFpB,0FADe,GAMf,cAAC,kBAAD,IAAoB,MAAM,EAAE,CAA5B,EAA+B,QAAQ,MAAvC,2FAPJ,CADD,CAXH;;AAuBG,EAAA,KAAK,CAAC,OAAN,CAAc,MAAd,GAAuB,0BAAvB,GACC,cAAC,eAAD;AACE,gBAAC,MAAD,IAAQ,OAAO,EAAE,MAAM,iBAAiB,CAAC,CAAC,cAAF,CAAxC;AACG,EAAA,cAAc,GAAG,CAAC,CAAC,cAAD,CAAJ,GAAuB,CAAC,CAAC,aAAD,CADzC,CADF,CADD;;AAOC,qCA9BJ,CANF;;AAuCE,gBAAC,QAAD,CAAU,KAAV,IACE,MAAM,EAAE,wBAAM,SAAS,EAAC,QAAhB,2FAA0B,CAAC,CAAC,SAAD,CAA3B,CADV,EAEE,GAAG,EAAC,QAFN;AAIE,yBAAK,SAAS,EAAC,cAAf;AACG,EAAA,CAAC,CACA,kBADA,EAEA,WAAW,CAAC,MAFZ,EAGA,KAAK,CAAC,OAAN,CAAc,MAHd,CADJ,CAJF;;AAWG,EAAA,WAAW,CAAC,GAAZ,CAAgB,CAAA,GAAG,KAClB,cAAC,cAAD,IAAgB,GAAG,EAAE,GAAG,CAAC,WAAzB,EAAsC,SAAS,EAAC,QAAhD;AACG,EAAA,gBAAgB,GACf,cAAC,yBAAD,IACE,KAAK,EAAE,GADT,EAEE,IAAI,EAAE,WAAW,CAAC,MAFpB,0FADe,GAMf,cAAC,kBAAD,IAAoB,MAAM,EAAE,GAA5B,EAAiC,QAAQ,MAAzC,2FAPJ,CADD,CAXH;;AAuBG,EAAA,KAAK,CAAC,OAAN,CAAc,MAAd,GAAuB,0BAAvB,GACC,cAAC,eAAD;AACE,gBAAC,MAAD,IAAQ,OAAO,EAAE,MAAM,iBAAiB,CAAC,CAAC,cAAF,CAAxC;AACG,EAAA,cAAc,GAAG,CAAC,CAAC,cAAD,CAAJ,GAAuB,CAAC,CAAC,aAAD,CADzC,CADF,CADD;;AAOC,qCA9BJ,CAvCF,CADF,CAXF,CAFoB;;;;AA0FtB;AACE,EAAA,WADF;AAEE,EAAA,UAFF;AAGE,EAAA,KAAK,CAAC,OAAN,CAAc,MAHhB;AAIE,EAAA,KAAK,CAAC,OAAN,CAAc,MAJhB;AAKE,EAAA,WALF;AAME,EAAA,MANF;AAOE,EAAA,cAPF;AAQE,EAAA,cARF,CA1FsB,CAAxB;;AAsGA,SACE,cAAC,mBAAD;AACE,gBAAC,OAAD,eAAa,iBAAb,IAAgC,IAAI,EAAC,YAArC,EAAkD,OAAO,EAAE,OAA3D,0FADF;AAEG,EAAA,UAAU,CAAC,EAAX,IAAiB,IAAjB,IAAyB,QAF5B,CADF;;AAMD,C,cAnOuB,e,qgBA/GlB,M,0IAOA,e,mJAKA,mB,uJAoCA,Y,gJAuBA,c,kJAoCA,gB,oJAIkB,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  ControlConfig,\n  DatasourceMeta,\n  ColumnMeta,\n} from '@superset-ui/chart-controls';\nimport { debounce } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport { css, styled, t } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\nimport { Input } from 'src/common/components';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: DatasourceMeta;\n}\n\nexport interface Props {\n  datasource: DatasourceMeta;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n}\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light4};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 4}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-weight: ${theme.typography.weights.light};\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst LabelWrapper = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  & > span {\n    white-space: nowrap;\n  }\n\n  .option-label {\n    display: inline;\n  }\n\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nconst LabelContainer = (props: {\n  children: React.ReactElement;\n  className: string;\n}) => {\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [showTooltip, setShowTooltip] = useState(true);\n  const isLabelTruncated = () =>\n    !!(\n      labelRef &&\n      labelRef.current &&\n      labelRef.current.scrollWidth > labelRef.current.clientWidth\n    );\n  const handleShowTooltip = () => {\n    const shouldShowTooltip = isLabelTruncated();\n    if (shouldShowTooltip !== showTooltip) {\n      setShowTooltip(shouldShowTooltip);\n    }\n  };\n  const handleResetTooltip = () => {\n    setShowTooltip(true);\n  };\n  const extendedProps = {\n    labelRef,\n    showTooltip,\n  };\n  return (\n    <LabelWrapper\n      onMouseEnter={handleShowTooltip}\n      onMouseLeave={handleResetTooltip}\n      className={props.className}\n    >\n      {React.cloneElement(props.children, extendedProps)}\n    </LabelWrapper>\n  );\n};\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nexport default function DataSourcePanel({\n  datasource,\n  controls: { datasource: datasourceControl },\n  actions,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [..._columns].sort((col1, col2) => {\n        if (col1.is_dttm && !col2.is_dttm) {\n          return -1;\n        }\n        if (col2.is_dttm && !col1.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = useMemo(\n    () =>\n      debounce((value: string) => {\n        if (value === '') {\n          setList({ columns, metrics });\n          return;\n        }\n        setList({\n          columns: matchSorter(columns, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'column_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item.description, item.expression].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n          }),\n          metrics: matchSorter(metrics, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'metric_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item.description, item.expression].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n            baseSort: (a, b) =>\n              Number(b.item.is_certified) - Number(a.item.is_certified) ||\n              String(a.rankedValue).localeCompare(b.rankedValue),\n          }),\n        });\n      }, FAST_DEBOUNCE),\n    [columns, metrics],\n  );\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const sortCertifiedFirst = (slice: ColumnMeta[]) =>\n    slice.sort((a, b) => b.is_certified - a.is_certified);\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? lists.metrics\n        : lists.metrics.slice(0, DEFAULT_MAX_METRICS_LENGTH),\n    [lists.metrics, showAllMetrics],\n  );\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(lists.columns)\n        : sortCertifiedFirst(\n            lists.columns.slice(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [lists.columns, showAllColumns],\n  );\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n            search(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\">\n          <Collapse\n            bordered\n            defaultActiveKey={['metrics', 'column']}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            <Collapse.Panel\n              header={<span className=\"header\">{t('Metrics')}</span>}\n              key=\"metrics\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  metricSlice.length,\n                  lists.metrics.length,\n                )}\n              </div>\n              {metricSlice.map(m => (\n                <LabelContainer key={m.metric_name} className=\"column\">\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={m}\n                      type={DndItemType.Metric}\n                    />\n                  ) : (\n                    <StyledMetricOption metric={m} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.metrics.length > DEFAULT_MAX_METRICS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                    {showAllMetrics ? t('Show less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n            <Collapse.Panel\n              header={<span className=\"header\">{t('Columns')}</span>}\n              key=\"column\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  columnSlice.length,\n                  lists.columns.length,\n                )}\n              </div>\n              {columnSlice.map(col => (\n                <LabelContainer key={col.column_name} className=\"column\">\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={col}\n                      type={DndItemType.Column}\n                    />\n                  ) : (\n                    <StyledColumnOption column={col} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                    {showAllColumns ? t('Show Less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n          </Collapse>\n        </div>\n      </>\n    ),\n    [\n      columnSlice,\n      inputValue,\n      lists.columns.length,\n      lists.metrics.length,\n      metricSlice,\n      search,\n      showAllColumns,\n      showAllMetrics,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}