{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Checkbox } from 'src/common/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n\n  .checkbox {\n    margin-bottom: ${({ theme, checked }) => checked ? theme.gridUnit : 0}px;\n  }\n\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\nconst CollapsibleControl = (props) => {\n  const { checked, disabled, title, tooltip, children, onChange = () => {}, initialValue = false } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n  return ___EmotionJSX(StyledContainer, { checked: isChecked, __self: this, __source: { fileName: _jsxFileName, lineNumber: 49, columnNumber: 13 } },\n  ___EmotionJSX(Checkbox, { className: \"checkbox\", checked: isChecked, disabled: disabled, onChange: (e) => {\n      const value = e.target.checked;\n      // external `checked` value has more priority then local state\n      if (checked === undefined) {\n        // uncontrolled mode\n        setIsChecked(value);\n      }\n      onChange(value);\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 50, columnNumber: 7 } },\n  ___EmotionJSX(React.Fragment, null,\n  title, \"\\xA0\",\n  tooltip && ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: tooltip, __self: this, __source: { fileName: _jsxFileName, lineNumber: 61, columnNumber: 24 } }))),\n\n\n  isChecked && children);\n\n};__signature__(CollapsibleControl, \"useState{[isChecked, setIsChecked](initialValue)}\\nuseEffect{}\");\nexport { CollapsibleControl };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");reactHotLoader.register(CollapsibleControl, \"CollapsibleControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx"],"names":[],"mappings":"kdAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAA2B,SAA3B,EAAsC,QAAtC,QAAsD,OAAtD;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,QAAT,QAAyB,uBAAzB;AACA,SAAS,sBAAT,QAAuC,6BAAvC,C;AAYA,MAAM,eAAe,GAAG,MAAM,CAAC,GAAyB;;;;;gBAKxC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,EAAE;iBACjC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAjB,GAAqB,CAAC;;;qBAGjC,CAAC,EAAE,KAAF,EAAS,OAAT,EAAD,KAAyB,OAAO,GAAG,KAAK,CAAC,QAAT,GAAoB,CAAE;;;;qBAItD,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;AAErD,CAfD;AAiBA,MAAM,kBAAkB,GAAG,CAAC,KAAD,KAAmC;AAC5D,QAAM,EACJ,OADI,EAEJ,QAFI,EAGJ,KAHI,EAIJ,OAJI,EAKJ,QALI,EAMJ,QAAQ,GAAG,MAAK,CAAG,CANf,EAOJ,YAAY,GAAG,KAPX,KAQF,KARJ;AASA,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,YAAD,CAA1C;AAEA,EAAA,SAAS,CAAC,MAAK;AACb;AACA;AACA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,YAAY,CAAC,OAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAAC,OAAD,CANM,CAAT;AAQA,SACE,cAAC,eAAD,IAAiB,OAAO,EAAE,SAA1B;AACE,gBAAC,QAAD,IACE,SAAS,EAAC,UADZ,EAEE,OAAO,EAAE,SAFX,EAGE,QAAQ,EAAE,QAHZ,EAIE,QAAQ,EAAE,CAAA,CAAC,KAAG;AACZ,YAAM,KAAK,GAAG,CAAC,CAAC,MAAF,CAAS,OAAvB;AACA;AACA,UAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB;AACA,QAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACD,MAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAZH;AAcE;AACG,EAAA,KADH;AAEG,EAAA,OAAO,IACN,cAAC,sBAAD,IAAwB,SAAS,EAAC,KAAlC,EAAwC,OAAO,EAAE,OAAjD,yFAHJ,CAdF,CADF;;;AAsBG,EAAA,SAAS,IAAI,QAtBhB,CADF;;AA0BD,CA9CD,C,cAAM,kB;AAgDN,SAAS,kBAAT,G,iLAjEM,e,qMAiBA,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Checkbox } from 'src/common/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\ninterface CollapsibleControlProps {\n  initialValue?: boolean;\n  disabled?: boolean;\n  checked?: boolean;\n  title: string;\n  tooltip?: string;\n  children: ReactNode;\n  onChange?: (checked: boolean) => void;\n}\n\nconst StyledContainer = styled.div<{ checked: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n\n  .checkbox {\n    margin-bottom: ${({ theme, checked }) => (checked ? theme.gridUnit : 0)}px;\n  }\n\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\nconst CollapsibleControl = (props: CollapsibleControlProps) => {\n  const {\n    checked,\n    disabled,\n    title,\n    tooltip,\n    children,\n    onChange = () => {},\n    initialValue = false,\n  } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n\n  return (\n    <StyledContainer checked={isChecked}>\n      <Checkbox\n        className=\"checkbox\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={e => {\n          const value = e.target.checked;\n          // external `checked` value has more priority then local state\n          if (checked === undefined) {\n            // uncontrolled mode\n            setIsChecked(value);\n          }\n          onChange(value);\n        }}\n      >\n        <>\n          {title}&nbsp;\n          {tooltip && (\n            <InfoTooltipWithTrigger placement=\"top\" tooltip={tooltip} />\n          )}\n        </>\n      </Checkbox>\n      {isChecked && children}\n    </StyledContainer>\n  );\n};\n\nexport { CollapsibleControl, CollapsibleControlProps };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}