{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, schemeTableau10, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolateOranges, schemeOranges, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateTurbo, interpolateViridis, interpolateInferno, interpolateMagma, interpolatePlasma, interpolateCividis, interpolateWarm, interpolateCool, interpolateCubehelixDefault, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic';\nconst d3CategoricalSchemes = [{\n  type: 'categorical',\n  id: 'd3.category10',\n  colors: schemeCategory10,\n  label: `D3: Category10`,\n  description: 'Classic Ten categorical colors' },\n{\n  type: 'categorical',\n  id: 'd3.accent',\n  colors: schemeAccent,\n  label: `D3: Accent` },\n{\n  type: 'categorical',\n  id: 'd3.dark2',\n  colors: schemeDark2,\n  label: `D3: Dark2` },\n{\n  type: 'categorical',\n  id: 'd3.paired',\n  colors: schemePaired,\n  label: `D3: Paired` },\n{\n  type: 'categorical',\n  id: 'd3.pastel1',\n  colors: schemePastel1,\n  label: `D3: Pastel1` },\n{\n  type: 'categorical',\n  id: 'd3.pastel2',\n  colors: schemePastel2,\n  label: `D3: Pastel2` },\n{\n  type: 'categorical',\n  id: 'd3.set1',\n  colors: schemeSet1,\n  label: `D3: Set1` },\n{\n  type: 'categorical',\n  id: 'd3.set2',\n  colors: schemeSet2,\n  label: `D3: Set2` },\n{\n  type: 'categorical',\n  id: 'd3.set3',\n  colors: schemeSet3,\n  label: `D3: Set3` },\n{\n  type: 'categorical',\n  id: 'd3.tableau10',\n  colors: schemeTableau10,\n  label: `D3: Tableau10`,\n  description: 'Ten categorical colors authored by Tableau as part of Tableau 10' }];\n\nconst d3DivergingSchemes = [{\n  type: 'diverging',\n  id: 'd3.RdBu',\n  interpolator: interpolateRdBu,\n  colors: schemeRdBu,\n  label: 'D3: Red/Blue' },\n{\n  type: 'diverging',\n  id: 'd3.BrBG',\n  interpolator: interpolateBrBG,\n  colors: schemeBrBG,\n  label: 'D3: Brown/BlueGreen' },\n{\n  type: 'diverging',\n  id: 'd3.PRGn',\n  interpolator: interpolatePRGn,\n  colors: schemePRGn,\n  label: 'D3: PurpleRed/Green' },\n{\n  type: 'diverging',\n  id: 'd3.PiYG',\n  interpolator: interpolatePiYG,\n  colors: schemePiYG,\n  label: 'D3: Pink/YellowGreen' },\n{\n  type: 'diverging',\n  id: 'd3.PuOr',\n  interpolator: interpolatePuOr,\n  colors: schemePuOr,\n  label: 'D3: Purple/Orange' },\n{\n  type: 'diverging',\n  id: 'd3.RdGy',\n  interpolator: interpolateRdGy,\n  colors: schemeRdGy,\n  label: 'D3: Red/Grey' },\n{\n  type: 'diverging',\n  id: 'd3.RdYlBu',\n  interpolator: interpolateRdYlBu,\n  colors: schemeRdYlBu,\n  label: 'D3: Red/Yellow/Blue' },\n{\n  type: 'diverging',\n  id: 'd3.RdYlGn',\n  interpolator: interpolateRdYlGn,\n  colors: schemeRdYlGn,\n  label: 'D3: Red/Yellow/Green' },\n{\n  type: 'diverging',\n  id: 'd3.spectral',\n  interpolator: interpolateSpectral,\n  colors: schemeSpectral,\n  label: 'D3: Spectral' }];\n\nconst d3SingleHueSchemes = [{\n  type: 'sequential',\n  id: 'd3.blues',\n  interpolator: interpolateBlues,\n  colors: schemeBlues,\n  label: 'D3: Blues' },\n{\n  type: 'sequential',\n  id: 'd3.greens',\n  interpolator: interpolateGreens,\n  colors: schemeGreens,\n  label: 'D3: Greens' },\n{\n  type: 'sequential',\n  id: 'd3.greys',\n  interpolator: interpolateGreys,\n  colors: schemeGreys,\n  label: 'D3: Greys' },\n{\n  type: 'sequential',\n  id: 'd3.oranges',\n  interpolator: interpolateOranges,\n  colors: schemeOranges,\n  label: 'D3: Oranges' },\n{\n  type: 'sequential',\n  id: 'd3.purples',\n  interpolator: interpolatePurples,\n  colors: schemePurples,\n  label: 'D3: Purples' },\n{\n  type: 'sequential',\n  id: 'd3.reds',\n  interpolator: interpolateReds,\n  colors: schemeReds,\n  label: 'D3: Reds' }];\n\nconst d3MultiHueSchemes = [{\n  type: 'sequential',\n  id: 'd3.turbo',\n  interpolator: interpolateTurbo,\n  label: 'D3: Turbo' },\n{\n  type: 'sequential',\n  id: 'd3.viridis',\n  interpolator: interpolateViridis,\n  label: 'D3: Viridis' },\n{\n  type: 'sequential',\n  id: 'd3.inferno',\n  interpolator: interpolateInferno,\n  label: 'D3: Inferno' },\n{\n  type: 'sequential',\n  id: 'd3.magma',\n  interpolator: interpolateMagma,\n  label: 'D3: Magma' },\n{\n  type: 'sequential',\n  id: 'd3.plasma',\n  interpolator: interpolatePlasma,\n  label: 'D3: Plasma' },\n{\n  type: 'sequential',\n  id: 'd3.cividis',\n  interpolator: interpolateCividis,\n  label: 'D3: Cividis' },\n{\n  type: 'sequential',\n  id: 'd3.warm',\n  interpolator: interpolateWarm,\n  label: 'D3: Warm' },\n{\n  type: 'sequential',\n  id: 'd3.cool',\n  interpolator: interpolateCool,\n  label: 'D3: Cool' },\n{\n  type: 'sequential',\n  id: 'd3.cubehelixDefault',\n  interpolator: interpolateCubehelixDefault,\n  label: 'D3: Cube Helix' },\n{\n  type: 'sequential',\n  id: 'd3.BuGn',\n  interpolator: interpolateBuGn,\n  colors: schemeBuGn,\n  label: 'D3: Blue/Green' },\n{\n  type: 'sequential',\n  id: 'd3.BuPu',\n  interpolator: interpolateBuPu,\n  colors: schemeBuPu,\n  label: 'D3: Blue/Purple' },\n{\n  type: 'sequential',\n  id: 'd3.GnBu',\n  interpolator: interpolateGnBu,\n  colors: schemeGnBu,\n  label: 'D3: Green/Blue' },\n{\n  type: 'sequential',\n  id: 'd3.OrRd',\n  interpolator: interpolateOrRd,\n  colors: schemeOrRd,\n  label: 'D3: Orange/Red' },\n{\n  type: 'sequential',\n  id: 'd3.PuBuGn',\n  interpolator: interpolatePuBuGn,\n  colors: schemePuBuGn,\n  label: 'D3: Purple/Blue/Green' },\n{\n  type: 'sequential',\n  id: 'd3.PuBu',\n  interpolator: interpolatePuBu,\n  colors: schemePuBu,\n  label: 'D3: Purple/Blue' },\n{\n  type: 'sequential',\n  id: 'd3.PuRd',\n  interpolator: interpolatePuRd,\n  colors: schemePuRd,\n  label: 'D3: Purple/Red' },\n{\n  type: 'sequential',\n  id: 'd3.RdPu',\n  interpolator: interpolateRdPu,\n  colors: schemeRdPu,\n  label: 'D3: Red/Purple' },\n{\n  type: 'sequential',\n  id: 'd3.YlGnBu',\n  interpolator: interpolateYlGnBu,\n  colors: schemeYlGnBu,\n  label: 'D3: Yellow/Green/Blue' },\n{\n  type: 'sequential',\n  id: 'd3.YlGn',\n  interpolator: interpolateYlGn,\n  colors: schemeYlGn,\n  label: 'D3: Yellow/Green' },\n{\n  type: 'sequential',\n  id: 'd3.YlOrBr',\n  interpolator: interpolateYlOrBr,\n  colors: schemeYlOrBr,\n  label: 'D3: Yellow/Orange/Brown' },\n{\n  type: 'sequential',\n  id: 'd3.YlOrRd',\n  interpolator: interpolateYlOrRd,\n  colors: schemeYlOrRd,\n  label: 'D3: Yellow/Orange/Red' }];\n\nconst d3CyclicalSchemes = [{\n  type: 'sequential',\n  id: 'd3.rainbow',\n  interpolator: interpolateRainbow,\n  label: 'D3: Rainbow' },\n{\n  type: 'sequential',\n  id: 'd3.sinebow',\n  interpolator: interpolateSinebow,\n  label: 'D3: Sinebow' }];\n\nconst d3SequentialSchemes = d3SingleHueSchemes.concat(d3MultiHueSchemes).concat(d3CyclicalSchemes);\nconst d3Schemes = d3CategoricalSchemes.concat(d3DivergingSchemes).concat(d3SequentialSchemes);\nexport { d3Schemes, d3CategoricalSchemes, d3DivergingSchemes, d3SequentialSchemes, d3SingleHueSchemes, d3MultiHueSchemes, d3CyclicalSchemes };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(d3CategoricalSchemes, \"d3CategoricalSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3DivergingSchemes, \"d3DivergingSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3SingleHueSchemes, \"d3SingleHueSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3MultiHueSchemes, \"d3MultiHueSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3CyclicalSchemes, \"d3CyclicalSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3SequentialSchemes, \"d3SequentialSchemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");reactHotLoader.register(d3Schemes, \"d3Schemes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/presets/d3Schemes.js"],"names":["schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","schemeTableau10","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolateOranges","schemeOranges","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateTurbo","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateCividis","interpolateWarm","interpolateCool","interpolateCubehelixDefault","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateRainbow","interpolateSinebow","d3CategoricalSchemes","type","id","colors","label","description","d3DivergingSchemes","interpolator","d3SingleHueSchemes","d3MultiHueSchemes","d3CyclicalSchemes","d3SequentialSchemes","concat","d3Schemes"],"mappings":"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","sourcesContent":["import { schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, schemeTableau10, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolateOranges, schemeOranges, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateTurbo, interpolateViridis, interpolateInferno, interpolateMagma, interpolatePlasma, interpolateCividis, interpolateWarm, interpolateCool, interpolateCubehelixDefault, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic';\nconst d3CategoricalSchemes = [{\n  type: 'categorical',\n  id: 'd3.category10',\n  colors: schemeCategory10,\n  label: `D3: Category10`,\n  description: 'Classic Ten categorical colors'\n}, {\n  type: 'categorical',\n  id: 'd3.accent',\n  colors: schemeAccent,\n  label: `D3: Accent`\n}, {\n  type: 'categorical',\n  id: 'd3.dark2',\n  colors: schemeDark2,\n  label: `D3: Dark2`\n}, {\n  type: 'categorical',\n  id: 'd3.paired',\n  colors: schemePaired,\n  label: `D3: Paired`\n}, {\n  type: 'categorical',\n  id: 'd3.pastel1',\n  colors: schemePastel1,\n  label: `D3: Pastel1`\n}, {\n  type: 'categorical',\n  id: 'd3.pastel2',\n  colors: schemePastel2,\n  label: `D3: Pastel2`\n}, {\n  type: 'categorical',\n  id: 'd3.set1',\n  colors: schemeSet1,\n  label: `D3: Set1`\n}, {\n  type: 'categorical',\n  id: 'd3.set2',\n  colors: schemeSet2,\n  label: `D3: Set2`\n}, {\n  type: 'categorical',\n  id: 'd3.set3',\n  colors: schemeSet3,\n  label: `D3: Set3`\n}, {\n  type: 'categorical',\n  id: 'd3.tableau10',\n  colors: schemeTableau10,\n  label: `D3: Tableau10`,\n  description: 'Ten categorical colors authored by Tableau as part of Tableau 10'\n}];\nconst d3DivergingSchemes = [{\n  type: 'diverging',\n  id: 'd3.RdBu',\n  interpolator: interpolateRdBu,\n  colors: schemeRdBu,\n  label: 'D3: Red/Blue'\n}, {\n  type: 'diverging',\n  id: 'd3.BrBG',\n  interpolator: interpolateBrBG,\n  colors: schemeBrBG,\n  label: 'D3: Brown/BlueGreen'\n}, {\n  type: 'diverging',\n  id: 'd3.PRGn',\n  interpolator: interpolatePRGn,\n  colors: schemePRGn,\n  label: 'D3: PurpleRed/Green'\n}, {\n  type: 'diverging',\n  id: 'd3.PiYG',\n  interpolator: interpolatePiYG,\n  colors: schemePiYG,\n  label: 'D3: Pink/YellowGreen'\n}, {\n  type: 'diverging',\n  id: 'd3.PuOr',\n  interpolator: interpolatePuOr,\n  colors: schemePuOr,\n  label: 'D3: Purple/Orange'\n}, {\n  type: 'diverging',\n  id: 'd3.RdGy',\n  interpolator: interpolateRdGy,\n  colors: schemeRdGy,\n  label: 'D3: Red/Grey'\n}, {\n  type: 'diverging',\n  id: 'd3.RdYlBu',\n  interpolator: interpolateRdYlBu,\n  colors: schemeRdYlBu,\n  label: 'D3: Red/Yellow/Blue'\n}, {\n  type: 'diverging',\n  id: 'd3.RdYlGn',\n  interpolator: interpolateRdYlGn,\n  colors: schemeRdYlGn,\n  label: 'D3: Red/Yellow/Green'\n}, {\n  type: 'diverging',\n  id: 'd3.spectral',\n  interpolator: interpolateSpectral,\n  colors: schemeSpectral,\n  label: 'D3: Spectral'\n}];\nconst d3SingleHueSchemes = [{\n  type: 'sequential',\n  id: 'd3.blues',\n  interpolator: interpolateBlues,\n  colors: schemeBlues,\n  label: 'D3: Blues'\n}, {\n  type: 'sequential',\n  id: 'd3.greens',\n  interpolator: interpolateGreens,\n  colors: schemeGreens,\n  label: 'D3: Greens'\n}, {\n  type: 'sequential',\n  id: 'd3.greys',\n  interpolator: interpolateGreys,\n  colors: schemeGreys,\n  label: 'D3: Greys'\n}, {\n  type: 'sequential',\n  id: 'd3.oranges',\n  interpolator: interpolateOranges,\n  colors: schemeOranges,\n  label: 'D3: Oranges'\n}, {\n  type: 'sequential',\n  id: 'd3.purples',\n  interpolator: interpolatePurples,\n  colors: schemePurples,\n  label: 'D3: Purples'\n}, {\n  type: 'sequential',\n  id: 'd3.reds',\n  interpolator: interpolateReds,\n  colors: schemeReds,\n  label: 'D3: Reds'\n}];\nconst d3MultiHueSchemes = [{\n  type: 'sequential',\n  id: 'd3.turbo',\n  interpolator: interpolateTurbo,\n  label: 'D3: Turbo'\n}, {\n  type: 'sequential',\n  id: 'd3.viridis',\n  interpolator: interpolateViridis,\n  label: 'D3: Viridis'\n}, {\n  type: 'sequential',\n  id: 'd3.inferno',\n  interpolator: interpolateInferno,\n  label: 'D3: Inferno'\n}, {\n  type: 'sequential',\n  id: 'd3.magma',\n  interpolator: interpolateMagma,\n  label: 'D3: Magma'\n}, {\n  type: 'sequential',\n  id: 'd3.plasma',\n  interpolator: interpolatePlasma,\n  label: 'D3: Plasma'\n}, {\n  type: 'sequential',\n  id: 'd3.cividis',\n  interpolator: interpolateCividis,\n  label: 'D3: Cividis'\n}, {\n  type: 'sequential',\n  id: 'd3.warm',\n  interpolator: interpolateWarm,\n  label: 'D3: Warm'\n}, {\n  type: 'sequential',\n  id: 'd3.cool',\n  interpolator: interpolateCool,\n  label: 'D3: Cool'\n}, {\n  type: 'sequential',\n  id: 'd3.cubehelixDefault',\n  interpolator: interpolateCubehelixDefault,\n  label: 'D3: Cube Helix'\n}, {\n  type: 'sequential',\n  id: 'd3.BuGn',\n  interpolator: interpolateBuGn,\n  colors: schemeBuGn,\n  label: 'D3: Blue/Green'\n}, {\n  type: 'sequential',\n  id: 'd3.BuPu',\n  interpolator: interpolateBuPu,\n  colors: schemeBuPu,\n  label: 'D3: Blue/Purple'\n}, {\n  type: 'sequential',\n  id: 'd3.GnBu',\n  interpolator: interpolateGnBu,\n  colors: schemeGnBu,\n  label: 'D3: Green/Blue'\n}, {\n  type: 'sequential',\n  id: 'd3.OrRd',\n  interpolator: interpolateOrRd,\n  colors: schemeOrRd,\n  label: 'D3: Orange/Red'\n}, {\n  type: 'sequential',\n  id: 'd3.PuBuGn',\n  interpolator: interpolatePuBuGn,\n  colors: schemePuBuGn,\n  label: 'D3: Purple/Blue/Green'\n}, {\n  type: 'sequential',\n  id: 'd3.PuBu',\n  interpolator: interpolatePuBu,\n  colors: schemePuBu,\n  label: 'D3: Purple/Blue'\n}, {\n  type: 'sequential',\n  id: 'd3.PuRd',\n  interpolator: interpolatePuRd,\n  colors: schemePuRd,\n  label: 'D3: Purple/Red'\n}, {\n  type: 'sequential',\n  id: 'd3.RdPu',\n  interpolator: interpolateRdPu,\n  colors: schemeRdPu,\n  label: 'D3: Red/Purple'\n}, {\n  type: 'sequential',\n  id: 'd3.YlGnBu',\n  interpolator: interpolateYlGnBu,\n  colors: schemeYlGnBu,\n  label: 'D3: Yellow/Green/Blue'\n}, {\n  type: 'sequential',\n  id: 'd3.YlGn',\n  interpolator: interpolateYlGn,\n  colors: schemeYlGn,\n  label: 'D3: Yellow/Green'\n}, {\n  type: 'sequential',\n  id: 'd3.YlOrBr',\n  interpolator: interpolateYlOrBr,\n  colors: schemeYlOrBr,\n  label: 'D3: Yellow/Orange/Brown'\n}, {\n  type: 'sequential',\n  id: 'd3.YlOrRd',\n  interpolator: interpolateYlOrRd,\n  colors: schemeYlOrRd,\n  label: 'D3: Yellow/Orange/Red'\n}];\nconst d3CyclicalSchemes = [{\n  type: 'sequential',\n  id: 'd3.rainbow',\n  interpolator: interpolateRainbow,\n  label: 'D3: Rainbow'\n}, {\n  type: 'sequential',\n  id: 'd3.sinebow',\n  interpolator: interpolateSinebow,\n  label: 'D3: Sinebow'\n}];\nconst d3SequentialSchemes = d3SingleHueSchemes.concat(d3MultiHueSchemes).concat(d3CyclicalSchemes);\nconst d3Schemes = d3CategoricalSchemes.concat(d3DivergingSchemes).concat(d3SequentialSchemes);\nexport { d3Schemes, d3CategoricalSchemes, d3DivergingSchemes, d3SequentialSchemes, d3SingleHueSchemes, d3MultiHueSchemes, d3CyclicalSchemes };"]},"metadata":{},"sourceType":"module"}