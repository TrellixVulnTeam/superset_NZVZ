{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import \"core-js/modules/es.string.replace.js\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const _default = function (x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ?\n  x.toLocaleString(\"en\").replace(/,/g, \"\") :\n  x.toString(10);\n};export default _default;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i,coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n  coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n  +x.slice(i + 1)];\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(formatDecimalParts, \"formatDecimalParts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-format/src/formatDecimal.js\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-format/src/formatDecimal.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-format/src/formatDecimal.js"],"names":["x","Math","abs","round","toLocaleString","replace","toString","formatDecimalParts","p","i","toExponential","indexOf","coefficient","slice","length"],"mappings":"sWAAe,UAASA,CAAT,EAAY;AACzB,SAAOC,IAAI,CAACC,GAAL,CAASF,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAb,KAA+B,IAA/B;AACDA,EAAAA,CAAC,CAACI,cAAF,CAAiB,IAAjB,EAAuBC,OAAvB,CAA+B,IAA/B,EAAqC,EAArC,CADC;AAEDL,EAAAA,CAAC,CAACM,QAAF,CAAW,EAAX,CAFN;AAGD,C,CAJD;;AAMA;AACA;AACA;AACA,OAAO,SAASC,kBAAT,CAA4BP,CAA5B,EAA+BQ,CAA/B,EAAkC;AACvC,MAAI,CAACC,CAAC,GAAG,CAACT,CAAC,GAAGQ,CAAC,GAAGR,CAAC,CAACU,aAAF,CAAgBF,CAAC,GAAG,CAApB,CAAH,GAA4BR,CAAC,CAACU,aAAF,EAAlC,EAAqDC,OAArD,CAA6D,GAA7D,CAAL,IAA0E,CAA9E,EAAiF,OAAO,IAAP,CAD1C,CACuD;AAC9F,MAAIF,CAAJ,CAAOG,WAAW,GAAGZ,CAAC,CAACa,KAAF,CAAQ,CAAR,EAAWJ,CAAX,CAArB;;AAEA;AACA;AACA,SAAO;AACLG,EAAAA,WAAW,CAACE,MAAZ,GAAqB,CAArB,GAAyBF,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAACC,KAAZ,CAAkB,CAAlB,CAA1C,GAAiED,WAD5D;AAEL,GAACZ,CAAC,CAACa,KAAF,CAAQJ,CAAC,GAAG,CAAZ,CAFI,CAAP;;AAID,C,iLAVeF,kB","sourcesContent":["export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}