{"ast":null,"code":"import { css as _css } from \"@emotion/react\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan' // timezones are deduped by the first alphabetical value\n};\nconst MIN_SELECT_WIDTH = '400px';\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n  'Mountain Standard Time - Phoenix',\n  'Mountain Standard Time - Phoenix'],\n\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'] };\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\nconst getOffsetKey = (name) => JANUARY.tz(name).utcOffset().toString() +\nJULY.tz(name).utcOffset().toString();\nconst getTimezoneName = (name) => {var _offsetsToName$offset, _offsetsToName$offset2;\n  const offsets = getOffsetKey(name);\n  return (currentDate.tz(name).isDST() ? (_offsetsToName$offset =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset[1] : (_offsetsToName$offset2 =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset2[0]) || name;\n};\nconst ALL_ZONES = moment.tz.\ncountries().\nmap((country) => moment.tz.zonesForCountry(country, true)).\nflat();\nconst TIMEZONES = [];\nALL_ZONES.forEach((zone) => {\n  if (!TIMEZONES.find((option) => getOffsetKey(option.name) === getOffsetKey(zone.name))) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\nconst TIMEZONE_OPTIONS = TIMEZONES.sort(\n// sort by offset\n(a, b) => moment.tz(currentDate, a.name).utcOffset() -\nmoment.tz(currentDate, b.name).utcOffset()).map((zone) => ({\n  label: `GMT ${moment.\n  tz(currentDate, zone.name).\n  format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name) }));\n\nconst TimezoneSelector = ({ onTimezoneChange, timezone }) => {\n  const prevTimezone = useRef(timezone);\n  const matchTimezoneToOptions = (timezone) => {var _TIMEZONE_OPTIONS$fin;return ((_TIMEZONE_OPTIONS$fin = TIMEZONE_OPTIONS.find((option) => option.offsets === getOffsetKey(timezone))) == null ? void 0 : _TIMEZONE_OPTIONS$fin.\n    value) || DEFAULT_TIMEZONE.value;};\n  const updateTimezone = useCallback((tz) => {\n    // update the ref to track changes\n    prevTimezone.current = tz;\n    // the parent component contains the state for the value\n    onTimezoneChange(tz);\n  }, [onTimezoneChange]);\n  useEffect(() => {\n    const updatedTz = matchTimezoneToOptions(timezone || moment.tz.guess());\n    if (prevTimezone.current !== updatedTz) {\n      updateTimezone(updatedTz);\n    }\n  }, [timezone, updateTimezone]);\n  return ___EmotionJSX(Select, { ariaLabel: t('Timezone selector'), css: /*#__PURE__*/_css({ minWidth: MIN_SELECT_WIDTH }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:TimezoneSelector;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9teV9wbHVnaW4vc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvVGltZXpvbmVTZWxlY3Rvci9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUZ1RCIsImZpbGUiOiIvaG9tZS91YnVudHUvbXlfcGx1Z2luL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3NyYy9jb21wb25lbnRzL1RpbWV6b25lU2VsZWN0b3IvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50LXRpbWV6b25lJztcbmltcG9ydCB7IHQgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tICdzcmMvY29tcG9uZW50cyc7XG5jb25zdCBERUZBVUxUX1RJTUVaT05FID0ge1xuICAgIG5hbWU6ICdHTVQgU3RhbmRhcmQgVGltZScsXG4gICAgdmFsdWU6ICdBZnJpY2EvQWJpZGphbicsIC8vIHRpbWV6b25lcyBhcmUgZGVkdXBlZCBieSB0aGUgZmlyc3QgYWxwaGFiZXRpY2FsIHZhbHVlXG59O1xuY29uc3QgTUlOX1NFTEVDVF9XSURUSCA9ICc0MDBweCc7XG5jb25zdCBvZmZzZXRzVG9OYW1lID0ge1xuICAgICctMzAwLTI0MCc6IFsnRWFzdGVybiBTdGFuZGFyZCBUaW1lJywgJ0Vhc3Rlcm4gRGF5bGlnaHQgVGltZSddLFxuICAgICctMzYwLTMwMCc6IFsnQ2VudHJhbCBTdGFuZGFyZCBUaW1lJywgJ0NlbnRyYWwgRGF5bGlnaHQgVGltZSddLFxuICAgICctNDIwLTM2MCc6IFsnTW91bnRhaW4gU3RhbmRhcmQgVGltZScsICdNb3VudGFpbiBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy00MjAtNDIwJzogW1xuICAgICAgICAnTW91bnRhaW4gU3RhbmRhcmQgVGltZSAtIFBob2VuaXgnLFxuICAgICAgICAnTW91bnRhaW4gU3RhbmRhcmQgVGltZSAtIFBob2VuaXgnLFxuICAgIF0sXG4gICAgJy00ODAtNDIwJzogWydQYWNpZmljIFN0YW5kYXJkIFRpbWUnLCAnUGFjaWZpYyBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy01NDAtNDgwJzogWydBbGFza2EgU3RhbmRhcmQgVGltZScsICdBbGFza2EgRGF5bGlnaHQgVGltZSddLFxuICAgICctNjAwLTYwMCc6IFsnSGF3YWlpIFN0YW5kYXJkIFRpbWUnLCAnSGF3YWlpIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnNjAxMjAnOiBbJ0NlbnRyYWwgRXVyb3BlYW4gVGltZScsICdDZW50cmFsIEV1cm9wZWFuIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnMDAnOiBbREVGQVVMVF9USU1FWk9ORS5uYW1lLCBERUZBVUxUX1RJTUVaT05FLm5hbWVdLFxuICAgICcwNjAnOiBbJ0dNVCBTdGFuZGFyZCBUaW1lIC0gTG9uZG9uJywgJ0JyaXRpc2ggU3VtbWVyIFRpbWUnXSxcbn07XG5jb25zdCBjdXJyZW50RGF0ZSA9IG1vbWVudCgpO1xuY29uc3QgSkFOVUFSWSA9IG1vbWVudChbMjAyMSwgMV0pO1xuY29uc3QgSlVMWSA9IG1vbWVudChbMjAyMSwgN10pO1xuY29uc3QgZ2V0T2Zmc2V0S2V5ID0gKG5hbWUpID0+IEpBTlVBUlkudHoobmFtZSkudXRjT2Zmc2V0KCkudG9TdHJpbmcoKSArXG4gICAgSlVMWS50eihuYW1lKS51dGNPZmZzZXQoKS50b1N0cmluZygpO1xuY29uc3QgZ2V0VGltZXpvbmVOYW1lID0gKG5hbWUpID0+IHtcbiAgICBjb25zdCBvZmZzZXRzID0gZ2V0T2Zmc2V0S2V5KG5hbWUpO1xuICAgIHJldHVybiAoKGN1cnJlbnREYXRlLnR6KG5hbWUpLmlzRFNUKClcbiAgICAgICAgPyBvZmZzZXRzVG9OYW1lW29mZnNldHNdPy5bMV1cbiAgICAgICAgOiBvZmZzZXRzVG9OYW1lW29mZnNldHNdPy5bMF0pIHx8IG5hbWUpO1xufTtcbmNvbnN0IEFMTF9aT05FUyA9IG1vbWVudC50elxuICAgIC5jb3VudHJpZXMoKVxuICAgIC5tYXAoY291bnRyeSA9PiBtb21lbnQudHouem9uZXNGb3JDb3VudHJ5KGNvdW50cnksIHRydWUpKVxuICAgIC5mbGF0KCk7XG5jb25zdCBUSU1FWk9ORVMgPSBbXTtcbkFMTF9aT05FUy5mb3JFYWNoKHpvbmUgPT4ge1xuICAgIGlmICghVElNRVpPTkVTLmZpbmQob3B0aW9uID0+IGdldE9mZnNldEtleShvcHRpb24ubmFtZSkgPT09IGdldE9mZnNldEtleSh6b25lLm5hbWUpKSkge1xuICAgICAgICBUSU1FWk9ORVMucHVzaCh6b25lKTsgLy8gZGVkdXBlIHpvbmVzIGJ5IG9mZnNldHNcbiAgICB9XG59KTtcbmNvbnN0IFRJTUVaT05FX09QVElPTlMgPSBUSU1FWk9ORVMuc29ydChcbi8vIHNvcnQgYnkgb2Zmc2V0XG4oYSwgYikgPT4gbW9tZW50LnR6KGN1cnJlbnREYXRlLCBhLm5hbWUpLnV0Y09mZnNldCgpIC1cbiAgICBtb21lbnQudHooY3VycmVudERhdGUsIGIubmFtZSkudXRjT2Zmc2V0KCkpLm1hcCh6b25lID0+ICh7XG4gICAgbGFiZWw6IGBHTVQgJHttb21lbnRcbiAgICAgICAgLnR6KGN1cnJlbnREYXRlLCB6b25lLm5hbWUpXG4gICAgICAgIC5mb3JtYXQoJ1onKX0gKCR7Z2V0VGltZXpvbmVOYW1lKHpvbmUubmFtZSl9KWAsXG4gICAgdmFsdWU6IHpvbmUubmFtZSxcbiAgICBvZmZzZXRzOiBnZXRPZmZzZXRLZXkoem9uZS5uYW1lKSxcbn0pKTtcbmNvbnN0IFRpbWV6b25lU2VsZWN0b3IgPSAoeyBvblRpbWV6b25lQ2hhbmdlLCB0aW1lem9uZSB9KSA9PiB7XG4gICAgY29uc3QgcHJldlRpbWV6b25lID0gdXNlUmVmKHRpbWV6b25lKTtcbiAgICBjb25zdCBtYXRjaFRpbWV6b25lVG9PcHRpb25zID0gKHRpbWV6b25lKSA9PiBUSU1FWk9ORV9PUFRJT05TLmZpbmQob3B0aW9uID0+IG9wdGlvbi5vZmZzZXRzID09PSBnZXRPZmZzZXRLZXkodGltZXpvbmUpKVxuICAgICAgICA/LnZhbHVlIHx8IERFRkFVTFRfVElNRVpPTkUudmFsdWU7XG4gICAgY29uc3QgdXBkYXRlVGltZXpvbmUgPSB1c2VDYWxsYmFjaygodHopID0+IHtcbiAgICAgICAgLy8gdXBkYXRlIHRoZSByZWYgdG8gdHJhY2sgY2hhbmdlc1xuICAgICAgICBwcmV2VGltZXpvbmUuY3VycmVudCA9IHR6O1xuICAgICAgICAvLyB0aGUgcGFyZW50IGNvbXBvbmVudCBjb250YWlucyB0aGUgc3RhdGUgZm9yIHRoZSB2YWx1ZVxuICAgICAgICBvblRpbWV6b25lQ2hhbmdlKHR6KTtcbiAgICB9LCBbb25UaW1lem9uZUNoYW5nZV0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRUeiA9IG1hdGNoVGltZXpvbmVUb09wdGlvbnModGltZXpvbmUgfHwgbW9tZW50LnR6Lmd1ZXNzKCkpO1xuICAgICAgICBpZiAocHJldlRpbWV6b25lLmN1cnJlbnQgIT09IHVwZGF0ZWRUeikge1xuICAgICAgICAgICAgdXBkYXRlVGltZXpvbmUodXBkYXRlZFR6KTtcbiAgICAgICAgfVxuICAgIH0sIFt0aW1lem9uZSwgdXBkYXRlVGltZXpvbmVdKTtcbiAgICByZXR1cm4gKDxTZWxlY3QgYXJpYUxhYmVsPXt0KCdUaW1lem9uZSBzZWxlY3RvcicpfSBjc3M9e3sgbWluV2lkdGg6IE1JTl9TRUxFQ1RfV0lEVEggfX0gLy8gc21hbGxlc3Qgc2l6ZSBmb3IgY3VycmVudCB2YWx1ZXNcbiAgICAgb25DaGFuZ2U9e29uVGltZXpvbmVDaGFuZ2V9IHZhbHVlPXt0aW1lem9uZSB8fCBERUZBVUxUX1RJTUVaT05FLnZhbHVlfSBvcHRpb25zPXtUSU1FWk9ORV9PUFRJT05TfS8+KTtcbn07XG5leHBvcnQgZGVmYXVsdCBUaW1lem9uZVNlbGVjdG9yO1xuIl19 */\") // smallest size for current values\n    , onChange: onTimezoneChange, value: timezone || DEFAULT_TIMEZONE.value, options: TIMEZONE_OPTIONS, __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 13 } });\n};__signature__(TimezoneSelector, \"useRef{prevTimezone}\\nuseCallback{updateTimezone}\\nuseEffect{}\");const _default =\nTimezoneSelector;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_TIMEZONE, \"DEFAULT_TIMEZONE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(MIN_SELECT_WIDTH, \"MIN_SELECT_WIDTH\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(offsetsToName, \"offsetsToName\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(currentDate, \"currentDate\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JANUARY, \"JANUARY\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JULY, \"JULY\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getOffsetKey, \"getOffsetKey\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getTimezoneName, \"getTimezoneName\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(ALL_ZONES, \"ALL_ZONES\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONES, \"TIMEZONES\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONE_OPTIONS, \"TIMEZONE_OPTIONS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TimezoneSelector, \"TimezoneSelector\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/TimezoneSelector/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nexport interface TimezoneProps {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n}\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.sort(\n  // sort by offset\n  (a, b) =>\n    moment.tz(currentDate, a.name).utcOffset() -\n    moment.tz(currentDate, b.name).utcOffset(),\n).map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n}));\n\nconst TimezoneSelector = ({ onTimezoneChange, timezone }: TimezoneProps) => {\n  const prevTimezone = useRef(timezone);\n  const matchTimezoneToOptions = (timezone: string) =>\n    TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n      ?.value || DEFAULT_TIMEZONE.value;\n\n  const updateTimezone = useCallback(\n    (tz: string) => {\n      // update the ref to track changes\n      prevTimezone.current = tz;\n      // the parent component contains the state for the value\n      onTimezoneChange(tz);\n    },\n    [onTimezoneChange],\n  );\n\n  useEffect(() => {\n    const updatedTz = matchTimezoneToOptions(timezone || moment.tz.guess());\n    if (prevTimezone.current !== updatedTz) {\n      updateTimezone(updatedTz);\n    }\n  }, [timezone, updateTimezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth: MIN_SELECT_WIDTH }} // smallest size for current values\n      onChange={onTimezoneChange}\n      value={timezone || DEFAULT_TIMEZONE.value}\n      options={TIMEZONE_OPTIONS}\n    />\n  );\n};\n\nexport default TimezoneSelector;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}