{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { TAB_TYPE } from '../../util/componentTypes';\nconst defaultFilterConfiguration = [];\nexport function useFilterConfiguration() {\n  return useSelector((state) => {var _state$dashboardInfo, _state$dashboardInfo$;return ((_state$dashboardInfo = state.dashboardInfo) == null ? void 0 : (_state$dashboardInfo$ = _state$dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.native_filter_configuration) ||\n    defaultFilterConfiguration;});\n}\n/**\n * returns the dashboard's filter configuration,\n * converted into a map of id -> filter\n */__signature__(useFilterConfiguration, \"useSelector{}\", () => [useSelector]);\nexport function useFilterConfigMap() {\n  const filterConfig = useFilterConfiguration();\n  return useMemo(() => filterConfig.reduce((acc, filter) => {\n    acc[filter.id] = filter;\n    return acc;\n  }, {}), [filterConfig]);\n}__signature__(useFilterConfigMap, \"useFilterConfiguration{filterConfig}\\nuseMemo{}\", () => [useFilterConfiguration]);\nexport function useDashboardLayout() {\n  return useSelector((state) => {var _state$dashboardLayou;return (_state$dashboardLayou = state.dashboardLayout) == null ? void 0 : _state$dashboardLayou.present;});\n}__signature__(useDashboardLayout, \"useSelector{}\", () => [useSelector]);\nexport function useDashboardHasTabs() {\n  const dashboardLayout = useDashboardLayout();\n  return useMemo(() => Object.values(dashboardLayout).some((element) => element.type === TAB_TYPE), [dashboardLayout]);\n}__signature__(useDashboardHasTabs, \"useDashboardLayout{dashboardLayout}\\nuseMemo{}\", () => [useDashboardLayout]);\nfunction useActiveDashboardTabs() {\n  return useSelector((state) => {var _state$dashboardState;return (_state$dashboardState = state.dashboardState) == null ? void 0 : _state$dashboardState.activeTabs;});\n}__signature__(useActiveDashboardTabs, \"useSelector{}\", () => [useSelector]);\nfunction useSelectChartTabParents() {\n  const dashboardLayout = useDashboardLayout();\n  return (chartId) => {\n    const chartLayoutItem = Object.values(dashboardLayout).find((layoutItem) => {var _layoutItem$meta;return ((_layoutItem$meta = layoutItem.meta) == null ? void 0 : _layoutItem$meta.chartId) === chartId;});\n    return chartLayoutItem == null ? void 0 : chartLayoutItem.parents.filter((parent) => dashboardLayout[parent].type === TAB_TYPE);\n  };\n}__signature__(useSelectChartTabParents, \"useDashboardLayout{dashboardLayout}\", () => [useDashboardLayout]);\nfunction useIsFilterInScope() {\n  const activeTabs = useActiveDashboardTabs();\n  const selectChartTabParents = useSelectChartTabParents();\n  // Filter is in scope if any of it's charts is visible.\n  // Chart is visible if it's placed in an active tab tree or if it's not attached to any tab.\n  // Chart is in an active tab tree if all of it's ancestors of type TAB are active\n  return (filter) => {var _filter$chartsInScope;return (_filter$chartsInScope = filter.chartsInScope) == null ? void 0 : _filter$chartsInScope.some((chartId) => {\n      const tabParents = selectChartTabParents(chartId);\n      return (tabParents == null ? void 0 : tabParents.length) === 0 || (\n      tabParents == null ? void 0 : tabParents.every((tab) => activeTabs.includes(tab)));\n    });};\n}__signature__(useIsFilterInScope, \"useActiveDashboardTabs{activeTabs}\\nuseSelectChartTabParents{selectChartTabParents}\", () => [useActiveDashboardTabs, useSelectChartTabParents]);\nexport function useSelectFiltersInScope(cascadeFilters) {\n  const dashboardHasTabs = useDashboardHasTabs();\n  const isFilterInScope = useIsFilterInScope();\n  return useMemo(() => {\n    let filtersInScope = [];\n    const filtersOutOfScope = [];\n    // we check native filters scopes only on dashboards with tabs\n    if (!dashboardHasTabs) {\n      filtersInScope = cascadeFilters;\n    } else\n    {\n      cascadeFilters.forEach((filter) => {\n        const filterInScope = isFilterInScope(filter);\n        if (filterInScope) {\n          filtersInScope.push(filter);\n        } else\n        {\n          filtersOutOfScope.push(filter);\n        }\n      });\n    }\n    return [filtersInScope, filtersOutOfScope];\n  }, [cascadeFilters, dashboardHasTabs, isFilterInScope]);\n}__signature__(useSelectFiltersInScope, \"useDashboardHasTabs{dashboardHasTabs}\\nuseIsFilterInScope{isFilterInScope}\\nuseMemo{}\", () => [useDashboardHasTabs, useIsFilterInScope]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultFilterConfiguration, \"defaultFilterConfiguration\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterConfiguration, \"useFilterConfiguration\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterConfigMap, \"useFilterConfigMap\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useDashboardLayout, \"useDashboardLayout\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useDashboardHasTabs, \"useDashboardHasTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useActiveDashboardTabs, \"useActiveDashboardTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useSelectChartTabParents, \"useSelectChartTabParents\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useIsFilterInScope, \"useIsFilterInScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useSelectFiltersInScope, \"useSelectFiltersInScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/state.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { Filter, FilterConfiguration } from './types';\nimport { ActiveTabs, DashboardLayout, RootState } from '../../types';\nimport { TAB_TYPE } from '../../util/componentTypes';\nimport { CascadeFilter } from './FilterBar/CascadeFilters/types';\n\nconst defaultFilterConfiguration: Filter[] = [];\n\nexport function useFilterConfiguration() {\n  return useSelector<any, FilterConfiguration>(\n    state =>\n      state.dashboardInfo?.metadata?.native_filter_configuration ||\n      defaultFilterConfiguration,\n  );\n}\n\n/**\n * returns the dashboard's filter configuration,\n * converted into a map of id -> filter\n */\nexport function useFilterConfigMap() {\n  const filterConfig = useFilterConfiguration();\n  return useMemo(\n    () =>\n      filterConfig.reduce((acc: Record<string, Filter>, filter: Filter) => {\n        acc[filter.id] = filter;\n        return acc;\n      }, {} as Record<string, Filter>),\n    [filterConfig],\n  );\n}\n\nexport function useDashboardLayout() {\n  return useSelector<any, DashboardLayout>(\n    state => state.dashboardLayout?.present,\n  );\n}\n\nexport function useDashboardHasTabs() {\n  const dashboardLayout = useDashboardLayout();\n  return useMemo(\n    () =>\n      Object.values(dashboardLayout).some(element => element.type === TAB_TYPE),\n    [dashboardLayout],\n  );\n}\n\nfunction useActiveDashboardTabs() {\n  return useSelector<RootState, ActiveTabs>(\n    state => state.dashboardState?.activeTabs,\n  );\n}\n\nfunction useSelectChartTabParents() {\n  const dashboardLayout = useDashboardLayout();\n  return (chartId: number) => {\n    const chartLayoutItem = Object.values(dashboardLayout).find(\n      layoutItem => layoutItem.meta?.chartId === chartId,\n    );\n    return chartLayoutItem?.parents.filter(\n      (parent: string) => dashboardLayout[parent].type === TAB_TYPE,\n    );\n  };\n}\n\nfunction useIsFilterInScope() {\n  const activeTabs = useActiveDashboardTabs();\n  const selectChartTabParents = useSelectChartTabParents();\n\n  // Filter is in scope if any of it's charts is visible.\n  // Chart is visible if it's placed in an active tab tree or if it's not attached to any tab.\n  // Chart is in an active tab tree if all of it's ancestors of type TAB are active\n  return (filter: CascadeFilter) =>\n    filter.chartsInScope?.some((chartId: number) => {\n      const tabParents = selectChartTabParents(chartId);\n      return (\n        tabParents?.length === 0 ||\n        tabParents?.every(tab => activeTabs.includes(tab))\n      );\n    });\n}\n\nexport function useSelectFiltersInScope(cascadeFilters: CascadeFilter[]) {\n  const dashboardHasTabs = useDashboardHasTabs();\n  const isFilterInScope = useIsFilterInScope();\n\n  return useMemo(() => {\n    let filtersInScope: CascadeFilter[] = [];\n    const filtersOutOfScope: CascadeFilter[] = [];\n\n    // we check native filters scopes only on dashboards with tabs\n    if (!dashboardHasTabs) {\n      filtersInScope = cascadeFilters;\n    } else {\n      cascadeFilters.forEach((filter: CascadeFilter) => {\n        const filterInScope = isFilterInScope(filter);\n\n        if (filterInScope) {\n          filtersInScope.push(filter);\n        } else {\n          filtersOutOfScope.push(filter);\n        }\n      });\n    }\n    return [filtersInScope, filtersOutOfScope];\n  }, [cascadeFilters, dashboardHasTabs, isFilterInScope]);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}