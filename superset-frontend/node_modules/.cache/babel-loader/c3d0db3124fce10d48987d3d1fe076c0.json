{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport copyTextToClipboard from 'src/utils/copy';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useUrlShortener } from 'src/common/hooks/useUrlShortener';\nimport EmbedCodeButton from './EmbedCodeButton';\nimport { exportChart, getExploreLongUrl } from '../exploreUtils';\nimport ExploreAdditionalActionsMenu from './ExploreAdditionalActionsMenu';import { jsx as ___EmotionJSX } from \"@emotion/react\";var _ref = process.env.NODE_ENV === \"production\" ? { name: \"yc7s2v\", styles: \"display:flex;align-items:center;&:focus, &:focus:active{outline:0;}\" } : { name: \"1ssm59b-ActionButton\", styles: \"display:flex;align-items:center;&:focus, &:focus:active{outline:0;};label:ActionButton;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9teV9wbHVnaW4vc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2V4cGxvcmUvY29tcG9uZW50cy9FeHBsb3JlQWN0aW9uQnV0dG9ucy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0NzQyIsImZpbGUiOiIvaG9tZS91YnVudHUvbXlfcGx1Z2luL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3NyYy9leHBsb3JlL2NvbXBvbmVudHMvRXhwbG9yZUFjdGlvbkJ1dHRvbnMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgdCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvVG9vbHRpcCc7XG5pbXBvcnQgY29weVRleHRUb0NsaXBib2FyZCBmcm9tICdzcmMvdXRpbHMvY29weSc7XG5pbXBvcnQgd2l0aFRvYXN0cyBmcm9tICdzcmMvY29tcG9uZW50cy9NZXNzYWdlVG9hc3RzL3dpdGhUb2FzdHMnO1xuaW1wb3J0IHsgdXNlVXJsU2hvcnRlbmVyIH0gZnJvbSAnc3JjL2NvbW1vbi9ob29rcy91c2VVcmxTaG9ydGVuZXInO1xuaW1wb3J0IEVtYmVkQ29kZUJ1dHRvbiBmcm9tICcuL0VtYmVkQ29kZUJ1dHRvbic7XG5pbXBvcnQgeyBleHBvcnRDaGFydCwgZ2V0RXhwbG9yZUxvbmdVcmwgfSBmcm9tICcuLi9leHBsb3JlVXRpbHMnO1xuaW1wb3J0IEV4cGxvcmVBZGRpdGlvbmFsQWN0aW9uc01lbnUgZnJvbSAnLi9FeHBsb3JlQWRkaXRpb25hbEFjdGlvbnNNZW51JztcbmNvbnN0IEFjdGlvbkJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgaWNvbiwgdGV4dCwgdG9vbHRpcCwgY2xhc3NOYW1lLCBvblRvb2x0aXBWaXNpYmlsaXR5Q2hhbmdlLCAuLi5yZXN0IH0gPSBwcm9wcztcbiAgICByZXR1cm4gKDxUb29sdGlwIGlkPXtgJHtpY29ufS10b29sdGlwYH0gcGxhY2VtZW50PVwidG9wXCIgdGl0bGU9e3Rvb2x0aXB9IHRyaWdnZXI9e1snaG92ZXInXX0gb25WaXNpYmxlQ2hhbmdlPXtvblRvb2x0aXBWaXNpYmlsaXR5Q2hhbmdlfT5cbiAgICAgIDxkaXYgcm9sZT1cImJ1dHRvblwiIHRhYkluZGV4PXswfSBjc3M9e3tcbiAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgJyY6Zm9jdXMsICY6Zm9jdXM6YWN0aXZlJzogeyBvdXRsaW5lOiAwIH0sXG4gICAgICAgIH19IGNsYXNzTmFtZT17Y2xhc3NOYW1lIHx8ICdidG4gYnRuLWRlZmF1bHQgYnRuLXNtJ30gc3R5bGU9e3sgaGVpZ2h0OiAzMCB9fSB7Li4ucmVzdH0+XG4gICAgICAgIHtpY29ufVxuICAgICAgICB7dGV4dCAmJiA8c3BhbiBzdHlsZT17eyBtYXJnaW5MZWZ0OiA1IH19Pnt0ZXh0fTwvc3Bhbj59XG4gICAgICA8L2Rpdj5cbiAgICA8L1Rvb2x0aXA+KTtcbn07XG5jb25zdCBFeHBsb3JlQWN0aW9uQnV0dG9ucyA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgYWN0aW9ucywgY2FuRG93bmxvYWRDU1YsIGNoYXJ0U3RhdHVzLCBsYXRlc3RRdWVyeUZvcm1EYXRhLCBzbGljZSwgYWRkRGFuZ2VyVG9hc3QsIH0gPSBwcm9wcztcbiAgICBjb25zdCBjb3B5VG9vbHRpcFRleHQgPSB0KCdDb3B5IGNoYXJ0IFVSTCB0byBjbGlwYm9hcmQnKTtcbiAgICBjb25zdCBbY29weVRvb2x0aXAsIHNldENvcHlUb29sdGlwXSA9IHVzZVN0YXRlKGNvcHlUb29sdGlwVGV4dCk7XG4gICAgY29uc3QgbG9uZ1VybCA9IGdldEV4cGxvcmVMb25nVXJsKGxhdGVzdFF1ZXJ5Rm9ybURhdGEpO1xuICAgIGNvbnN0IGdldFNob3J0VXJsID0gdXNlVXJsU2hvcnRlbmVyKGxvbmdVcmwpO1xuICAgIGNvbnN0IGRvQ29weUxpbmsgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzZXRDb3B5VG9vbHRpcCh0KCdMb2FkaW5nLi4uJykpO1xuICAgICAgICAgICAgY29uc3Qgc2hvcnRVcmwgPSBhd2FpdCBnZXRTaG9ydFVybCgpO1xuICAgICAgICAgICAgYXdhaXQgY29weVRleHRUb0NsaXBib2FyZChzaG9ydFVybCk7XG4gICAgICAgICAgICBzZXRDb3B5VG9vbHRpcCh0KCdDb3BpZWQgdG8gY2xpcGJvYXJkIScpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHNldENvcHlUb29sdGlwKHQoJ1NvcnJ5LCB5b3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBjb3B5aW5nLicpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgZG9TaGFyZUVtYWlsID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgc3ViamVjdCA9IHQoJ1N1cGVyc2V0IENoYXJ0Jyk7XG4gICAgICAgICAgICBjb25zdCBzaG9ydFVybCA9IGF3YWl0IGdldFNob3J0VXJsKCk7XG4gICAgICAgICAgICBjb25zdCBib2R5ID0gdCgnJXMlcycsICdDaGVjayBvdXQgdGhpcyBjaGFydDogJywgc2hvcnRVcmwpO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBgbWFpbHRvOj9TdWJqZWN0PSR7c3ViamVjdH0lMjAmQm9keT0ke2JvZHl9YDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGFkZERhbmdlclRvYXN0KHQoJ1NvcnJ5LCBzb21ldGhpbmcgd2VudCB3cm9uZy4gVHJ5IGFnYWluIGxhdGVyLicpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgZG9FeHBvcnRDU1YgPSBjYW5Eb3dubG9hZENTVlxuICAgICAgICA/IGV4cG9ydENoYXJ0LmJpbmQodGhpcywge1xuICAgICAgICAgICAgZm9ybURhdGE6IGxhdGVzdFF1ZXJ5Rm9ybURhdGEsXG4gICAgICAgICAgICByZXN1bHRUeXBlOiAncmVzdWx0cycsXG4gICAgICAgICAgICByZXN1bHRGb3JtYXQ6ICdjc3YnLFxuICAgICAgICB9KVxuICAgICAgICA6IG51bGw7XG4gICAgY29uc3QgZG9FeHBvcnRKc29uID0gZXhwb3J0Q2hhcnQuYmluZCh0aGlzLCB7XG4gICAgICAgIGZvcm1EYXRhOiBsYXRlc3RRdWVyeUZvcm1EYXRhLFxuICAgICAgICByZXN1bHRUeXBlOiAncmVzdWx0cycsXG4gICAgICAgIHJlc3VsdEZvcm1hdDogJ2pzb24nLFxuICAgIH0pO1xuICAgIGNvbnN0IGV4cG9ydFRvQ1NWQ2xhc3NlcyA9IGN4KCdidG4gYnRuLWRlZmF1bHQgYnRuLXNtJywge1xuICAgICAgICBkaXNhYmxlZDogIWNhbkRvd25sb2FkQ1NWLFxuICAgIH0pO1xuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXAgcmVzdWx0c1wiIHJvbGU9XCJncm91cFwiIGRhdGEtdGVzdD1cImJ0bi1ncm91cC1yZXN1bHRzXCI+XG4gICAgICB7bGF0ZXN0UXVlcnlGb3JtRGF0YSAmJiAoPD5cbiAgICAgICAgICA8QWN0aW9uQnV0dG9uIGljb249ezxJY29ucy5MaW5rIGljb25TaXplPVwibFwiLz59IHRvb2x0aXA9e2NvcHlUb29sdGlwfSBvbkNsaWNrPXtkb0NvcHlMaW5rfSBkYXRhLXRlc3Q9XCJzaG9ydC1saW5rLWJ1dHRvblwiIG9uVG9vbHRpcFZpc2liaWxpdHlDaGFuZ2U9e3ZhbHVlID0+ICF2YWx1ZSAmJiBzZXRUaW1lb3V0KCgpID0+IHNldENvcHlUb29sdGlwKGNvcHlUb29sdGlwVGV4dCksIDIwMCl9Lz5cbiAgICAgICAgICA8QWN0aW9uQnV0dG9uIGljb249ezxJY29ucy5FbWFpbCBpY29uU2l6ZT1cImxcIi8+fSB0b29sdGlwPXt0KCdTaGFyZSBjaGFydCBieSBlbWFpbCcpfSBvbkNsaWNrPXtkb1NoYXJlRW1haWx9Lz5cbiAgICAgICAgICA8RW1iZWRDb2RlQnV0dG9uIGxhdGVzdFF1ZXJ5Rm9ybURhdGE9e2xhdGVzdFF1ZXJ5Rm9ybURhdGF9Lz5cbiAgICAgICAgICA8QWN0aW9uQnV0dG9uIGljb249ezxJY29ucy5GaWxlVGV4dE91dGxpbmVkIGljb25TaXplPVwibVwiLz59IHRleHQ9XCIuSlNPTlwiIHRvb2x0aXA9e3QoJ0V4cG9ydCB0byAuSlNPTiBmb3JtYXQnKX0gb25DbGljaz17ZG9FeHBvcnRKc29ufS8+XG4gICAgICAgICAgPEFjdGlvbkJ1dHRvbiBpY29uPXs8SWNvbnMuRmlsZUV4Y2VsT3V0bGluZWQgaWNvblNpemU9XCJtXCIvPn0gdGV4dD1cIi5DU1ZcIiB0b29sdGlwPXt0KCdFeHBvcnQgdG8gLkNTViBmb3JtYXQnKX0gb25DbGljaz17ZG9FeHBvcnRDU1Z9IGNsYXNzTmFtZT17ZXhwb3J0VG9DU1ZDbGFzc2VzfS8+XG4gICAgICAgIDwvPil9XG4gICAgICA8RXhwbG9yZUFkZGl0aW9uYWxBY3Rpb25zTWVudSBsYXRlc3RRdWVyeUZvcm1EYXRhPXtsYXRlc3RRdWVyeUZvcm1EYXRhfSBjaGFydFN0YXR1cz17Y2hhcnRTdGF0dXN9IG9uT3BlbkluRWRpdG9yPXthY3Rpb25zLnJlZGlyZWN0U1FMTGFifSBvbk9wZW5Qcm9wZXJ0aWVzTW9kYWw9e2FjdGlvbnMub3BlblByb3BlcnRpZXNNb2RhbH0gc2xpY2U9e3NsaWNlfS8+XG4gICAgPC9kaXY+KTtcbn07XG5leHBvcnQgZGVmYXVsdCB3aXRoVG9hc3RzKEV4cGxvcmVBY3Rpb25CdXR0b25zKTtcbiJdfQ== */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nconst ActionButton = (props) => {\n  const { icon, text, tooltip, className, onTooltipVisibilityChange, ...rest } = props;\n  return ___EmotionJSX(Tooltip, { id: `${icon}-tooltip`, placement: \"top\", title: tooltip, trigger: ['hover'], onVisibleChange: onTooltipVisibilityChange },\n  ___EmotionJSX(\"div\", _extends({ role: \"button\", tabIndex: 0, css: _ref,\n\n\n\n    className: className || 'btn btn-default btn-sm', style: { height: 30 } }, rest),\n  icon,\n  text && ___EmotionJSX(\"span\", { style: { marginLeft: 5 } }, text)));\n\n\n};\nconst ExploreActionButtons = (props) => {\n  const { actions, canDownloadCSV, chartStatus, latestQueryFormData, slice, addDangerToast } = props;\n  const copyTooltipText = t('Copy chart URL to clipboard');\n  const [copyTooltip, setCopyTooltip] = useState(copyTooltipText);\n  const longUrl = getExploreLongUrl(latestQueryFormData);\n  const getShortUrl = useUrlShortener(longUrl);\n  const doCopyLink = async () => {\n    try {\n      setCopyTooltip(t('Loading...'));\n      const shortUrl = await getShortUrl();\n      await copyTextToClipboard(shortUrl);\n      setCopyTooltip(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      setCopyTooltip(t('Sorry, your browser does not support copying.'));\n    }\n  };\n  const doShareEmail = async () => {\n    try {\n      const subject = t('Superset Chart');\n      const shortUrl = await getShortUrl();\n      const body = t('%s%s', 'Check out this chart: ', shortUrl);\n      window.location.href = `mailto:?Subject=${subject}%20&Body=${body}`;\n    }\n    catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  };\n  const doExportCSV = canDownloadCSV ?\n  exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'csv' }) :\n\n  null;\n  const doExportJson = exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'json' });\n\n  const exportToCSVClasses = cx('btn btn-default btn-sm', {\n    disabled: !canDownloadCSV });\n\n  return ___EmotionJSX(\"div\", { className: \"btn-group results\", role: \"group\" },\n  latestQueryFormData && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.Link, { iconSize: \"l\" }), tooltip: copyTooltip, onClick: doCopyLink, onTooltipVisibilityChange: (value) => !value && setTimeout(() => setCopyTooltip(copyTooltipText), 200) }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.Email, { iconSize: \"l\" }), tooltip: t('Share chart by email'), onClick: doShareEmail }),\n  ___EmotionJSX(EmbedCodeButton, { latestQueryFormData: latestQueryFormData }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.FileTextOutlined, { iconSize: \"m\" }), text: \".JSON\", tooltip: t('Export to .JSON format'), onClick: doExportJson }),\n  ___EmotionJSX(ActionButton, { icon: ___EmotionJSX(Icons.FileExcelOutlined, { iconSize: \"m\" }), text: \".CSV\", tooltip: t('Export to .CSV format'), onClick: doExportCSV, className: exportToCSVClasses })),\n\n  ___EmotionJSX(ExploreAdditionalActionsMenu, { latestQueryFormData: latestQueryFormData, chartStatus: chartStatus, onOpenInEditor: actions.redirectSQLLab, onOpenPropertiesModal: actions.openPropertiesModal, slice: slice }));\n\n};\nexport default withToasts(ExploreActionButtons);","map":null,"metadata":{},"sourceType":"module"}