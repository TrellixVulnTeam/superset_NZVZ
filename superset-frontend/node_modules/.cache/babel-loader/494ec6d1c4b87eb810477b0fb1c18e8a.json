{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { t, getChartMetadataRegistry, styled } from '@superset-ui/core';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport Modal from 'src/components/Modal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label from 'src/components/Label';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport VizTypeGallery, { MAX_ADVISABLE_VIZ_GALLERY_WIDTH } from './VizTypeGallery';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst propTypes = {\n  description: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  labelType: PropTypes.string };\n\nconst defaultProps = {\n  onChange: () => {},\n  labelType: 'default' };\n\nconst metadataRegistry = getChartMetadataRegistry();\nexport const VIZ_TYPE_CONTROL_TEST_ID = 'viz-type-control';\nfunction VizSupportValidation({ vizType }) {\n  const state = usePluginContext();\n  if (state.loading || metadataRegistry.has(vizType)) {\n    return null;\n  }\n  return ___EmotionJSX(\"div\", { className: \"text-danger\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 13 } },\n  ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 48, columnNumber: 7 } }), ' ',\n  ___EmotionJSX(\"small\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 49, columnNumber: 7 } }, t('This visualization type is not supported.')));\n\n}__signature__(VizSupportValidation, \"usePluginContext{state}\", () => [usePluginContext]);\nconst UnpaddedModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n/** Manages the viz type and the viz picker modal */\nconst VizTypeControl = (props) => {var _mountedPluginMetadat;\n  const { value: initialValue, onChange, isModalOpenInit, labelType } = props;\n  const { mountedPluginMetadata } = usePluginContext();\n  const [showModal, setShowModal] = useState(!!isModalOpenInit);\n  // a trick to force re-initialization of the gallery each time the modal opens,\n  // ensuring that the modal always opens to the correct category.\n  const [modalKey, setModalKey] = useState(0);\n  const [selectedViz, setSelectedViz] = useState(initialValue);\n  const openModal = useCallback(() => {\n    setShowModal(true);\n  }, []);\n  const onSubmit = useCallback(() => {\n    onChange(selectedViz);\n    setShowModal(false);\n  }, [selectedViz, onChange]);\n  const onCancel = useCallback(() => {\n    setShowModal(false);\n    setModalKey((key) => key + 1);\n    // make sure the modal re-opens to the last submitted viz\n    setSelectedViz(initialValue);\n  }, [initialValue]);\n  const labelContent = initialValue ?\n  ((_mountedPluginMetadat = mountedPluginMetadata[initialValue]) == null ? void 0 : _mountedPluginMetadat.name) || `${initialValue}` :\n  t('Select Viz Type');\n  return ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 13 } },\n  ___EmotionJSX(ControlHeader, _extends({}, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 7 } })),\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"right\", title: t('Click to change visualization type'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 7 } },\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Label, { onClick: openModal, type: labelType, \"data-test\": \"visualization-type\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 86, columnNumber: 11 } },\n  labelContent),\n\n  initialValue && ___EmotionJSX(VizSupportValidation, { vizType: initialValue, __self: this, __source: { fileName: _jsxFileName, lineNumber: 89, columnNumber: 28 } }))),\n\n\n\n  ___EmotionJSX(UnpaddedModal, { show: showModal, onHide: onCancel, title: t('Select a visualization type'), primaryButtonName: t('Select'), disablePrimaryButton: !selectedViz, onHandledPrimaryAction: onSubmit, maxWidth: `${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px`, responsive: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 93, columnNumber: 7 } },\n\n  ___EmotionJSX(VizTypeGallery, { key: modalKey, selectedViz: selectedViz, onChange: setSelectedViz, __self: this, __source: { fileName: _jsxFileName, lineNumber: 95, columnNumber: 9 } })));\n\n\n};__signature__(VizTypeControl, \"usePluginContext{{ mountedPluginMetadata }}\\nuseState{[showModal, setShowModal](!!isModalOpenInit)}\\nuseState{[modalKey, setModalKey](0)}\\nuseState{[selectedViz, setSelectedViz](initialValue)}\\nuseCallback{openModal}\\nuseCallback{onSubmit}\\nuseCallback{onCancel}\", () => [usePluginContext]);\nVizTypeControl.propTypes = propTypes;\nVizTypeControl.defaultProps = defaultProps;const _default =\nVizTypeControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(metadataRegistry, \"metadataRegistry\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VIZ_TYPE_CONTROL_TEST_ID, \"VIZ_TYPE_CONTROL_TEST_ID\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VizSupportValidation, \"VizSupportValidation\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(UnpaddedModal, \"UnpaddedModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VizTypeControl, \"VizTypeControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { t, getChartMetadataRegistry, styled } from '@superset-ui/core';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport Modal from 'src/components/Modal';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label, { Type } from 'src/components/Label';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport VizTypeGallery, {\n  MAX_ADVISABLE_VIZ_GALLERY_WIDTH,\n} from './VizTypeGallery';\n\nconst propTypes = {\n  description: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  labelType: PropTypes.string,\n};\n\ninterface VizTypeControlProps {\n  description?: string;\n  label?: string;\n  name: string;\n  onChange: (vizType: string | null) => void;\n  value: string | null;\n  labelType?: Type;\n  isModalOpenInit?: boolean;\n}\n\nconst defaultProps = {\n  onChange: () => {},\n  labelType: 'default',\n};\n\nconst metadataRegistry = getChartMetadataRegistry();\n\nexport const VIZ_TYPE_CONTROL_TEST_ID = 'viz-type-control';\n\nfunction VizSupportValidation({ vizType }: { vizType: string }) {\n  const state = usePluginContext();\n  if (state.loading || metadataRegistry.has(vizType)) {\n    return null;\n  }\n  return (\n    <div className=\"text-danger\">\n      <i className=\"fa fa-exclamation-circle text-danger\" />{' '}\n      <small>{t('This visualization type is not supported.')}</small>\n    </div>\n  );\n}\n\nconst UnpaddedModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\n/** Manages the viz type and the viz picker modal */\nconst VizTypeControl = (props: VizTypeControlProps) => {\n  const { value: initialValue, onChange, isModalOpenInit, labelType } = props;\n  const { mountedPluginMetadata } = usePluginContext();\n  const [showModal, setShowModal] = useState(!!isModalOpenInit);\n  // a trick to force re-initialization of the gallery each time the modal opens,\n  // ensuring that the modal always opens to the correct category.\n  const [modalKey, setModalKey] = useState(0);\n  const [selectedViz, setSelectedViz] = useState<string | null>(initialValue);\n\n  const openModal = useCallback(() => {\n    setShowModal(true);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    onChange(selectedViz);\n    setShowModal(false);\n  }, [selectedViz, onChange]);\n\n  const onCancel = useCallback(() => {\n    setShowModal(false);\n    setModalKey(key => key + 1);\n    // make sure the modal re-opens to the last submitted viz\n    setSelectedViz(initialValue);\n  }, [initialValue]);\n\n  const labelContent = initialValue\n    ? mountedPluginMetadata[initialValue]?.name || `${initialValue}`\n    : t('Select Viz Type');\n\n  return (\n    <div>\n      <ControlHeader {...props} />\n      <Tooltip\n        id=\"error-tooltip\"\n        placement=\"right\"\n        title={t('Click to change visualization type')}\n      >\n        <>\n          <Label\n            onClick={openModal}\n            type={labelType}\n            data-test=\"visualization-type\"\n          >\n            {labelContent}\n          </Label>\n          {initialValue && <VizSupportValidation vizType={initialValue} />}\n        </>\n      </Tooltip>\n\n      <UnpaddedModal\n        show={showModal}\n        onHide={onCancel}\n        title={t('Select a visualization type')}\n        primaryButtonName={t('Select')}\n        disablePrimaryButton={!selectedViz}\n        onHandledPrimaryAction={onSubmit}\n        maxWidth={`${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px`}\n        responsive\n      >\n        {/* When the key increments, it forces react to re-init the gallery component */}\n        <VizTypeGallery\n          key={modalKey}\n          selectedViz={selectedViz}\n          onChange={setSelectedViz}\n        />\n      </UnpaddedModal>\n    </div>\n  );\n};\n\nVizTypeControl.propTypes = propTypes;\nVizTypeControl.defaultProps = defaultProps;\n\nexport default VizTypeControl;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}