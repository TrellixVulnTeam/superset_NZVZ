{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { IN_COMPONENT_ELEMENT_TYPES } from './constants';\n\nexport default function getChartAndLabelComponentIdFromPath(directPathToChild) {\n  const result = {};\n\n  if (directPathToChild.length > 0) {\n    const currentPath = directPathToChild.slice();\n\n    while (currentPath.length) {\n      const componentId = currentPath.pop();\n      const componentType = componentId.split('-')[0];\n\n      result[componentType.toLowerCase()] = componentId;\n      if (!IN_COMPONENT_ELEMENT_TYPES.includes(componentType)) {\n        break;\n      }\n    }\n  }\n\n  return result;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getChartAndLabelComponentIdFromPath, \"getChartAndLabelComponentIdFromPath\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getChartAndLabelComponentIdFromPath.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getChartAndLabelComponentIdFromPath.js"],"names":["IN_COMPONENT_ELEMENT_TYPES","getChartAndLabelComponentIdFromPath","directPathToChild","result","length","currentPath","slice","componentId","pop","componentType","split","toLowerCase","includes"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,0BAAT,QAA2C,aAA3C;;AAEA,eAAe,SAASC,mCAAT,CAA6CC,iBAA7C,EAAgE;AAC7E,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAID,iBAAiB,CAACE,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,UAAMC,WAAW,GAAGH,iBAAiB,CAACI,KAAlB,EAApB;;AAEA,WAAOD,WAAW,CAACD,MAAnB,EAA2B;AACzB,YAAMG,WAAW,GAAGF,WAAW,CAACG,GAAZ,EAApB;AACA,YAAMC,aAAa,GAAGF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAtB;;AAEAP,MAAAA,MAAM,CAACM,aAAa,CAACE,WAAd,EAAD,CAAN,GAAsCJ,WAAtC;AACA,UAAI,CAACP,0BAA0B,CAACY,QAA3B,CAAoCH,aAApC,CAAL,EAAyD;AACvD;AACD;AACF;AACF;;AAED,SAAON,MAAP;AACD,C,iLAlBuBF,mC","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { IN_COMPONENT_ELEMENT_TYPES } from './constants';\n\nexport default function getChartAndLabelComponentIdFromPath(directPathToChild) {\n  const result = {};\n\n  if (directPathToChild.length > 0) {\n    const currentPath = directPathToChild.slice();\n\n    while (currentPath.length) {\n      const componentId = currentPath.pop();\n      const componentType = componentId.split('-')[0];\n\n      result[componentType.toLowerCase()] = componentId;\n      if (!IN_COMPONENT_ELEMENT_TYPES.includes(componentType)) {\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}