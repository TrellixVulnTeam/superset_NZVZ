{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { styled, css, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { useComponentDidUpdate } from 'src/common/hooks/useComponentDidUpdate';\nimport { FormattingPopover } from './FormattingPopover';\nimport { COMPARATOR } from './types';\nimport { AddControlLabel, CaretContainer, Label, OptionControlContainer } from '../OptionControls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FormattersContainer = styled.div`\n  ${({ theme }) => css`\n    padding: ${theme.gridUnit}px;\n    border: solid 1px ${theme.colors.grayscale.light2};\n    border-radius: ${theme.gridUnit}px;\n  `}\n`;\nexport const FormatterContainer = styled(OptionControlContainer)`\n  &,\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\nexport const CloseButton = styled.button`\n  ${({ theme }) => css`\n    color: ${theme.colors.grayscale.light1};\n    height: 100%;\n    width: ${theme.gridUnit * 6}px;\n    border: none;\n    border-right: solid 1px ${theme.colors.grayscale.dark2}0C;\n    padding: 0;\n    outline: none;\n    border-bottom-left-radius: 3px;\n    border-top-left-radius: 3px;\n  `}\n`;\nconst ConditionalFormattingControl = ({ value, onChange, columnOptions, verboseMap, ...props }) => {\n  const theme = useTheme();\n  const [conditionalFormattingConfigs, setConditionalFormattingConfigs] = useState(value != null ? value : []);\n  useEffect(() => {\n    if (onChange) {\n      onChange(conditionalFormattingConfigs);\n    }\n  }, [conditionalFormattingConfigs, onChange]);\n  // remove formatter when corresponding column is removed from controls\n  const removeFormattersWhenColumnsChange = useCallback(() => {\n    const newFormattingConfigs = conditionalFormattingConfigs.filter((config) => columnOptions.some((option) => (option == null ? void 0 : option.value) === (config == null ? void 0 : config.column)));\n    if (newFormattingConfigs.length !== conditionalFormattingConfigs.length &&\n    onChange) {\n      setConditionalFormattingConfigs(newFormattingConfigs);\n      onChange(newFormattingConfigs);\n    }\n  }, [JSON.stringify(columnOptions)]);\n  useComponentDidUpdate(removeFormattersWhenColumnsChange);\n  const onDelete = (index) => {\n    setConditionalFormattingConfigs((prevConfigs) => prevConfigs.filter((_, i) => i !== index));\n  };\n  const onSave = (config) => {\n    setConditionalFormattingConfigs((prevConfigs) => [...prevConfigs, config]);\n  };\n  const onEdit = (newConfig, index) => {\n    const newConfigs = [...conditionalFormattingConfigs];\n    newConfigs.splice(index, 1, newConfig);\n    setConditionalFormattingConfigs(newConfigs);\n  };\n  const createLabel = ({ column, operator, targetValue, targetValueLeft, targetValueRight }) => {var _ref;\n    const columnName = (_ref = column && (verboseMap == null ? void 0 : verboseMap[column])) != null ? _ref : column;\n    switch (operator) {\n      case COMPARATOR.NONE:\n        return `${columnName}`;\n      case COMPARATOR.BETWEEN:\n        return `${targetValueLeft} ${COMPARATOR.LESS_THAN} ${columnName} ${COMPARATOR.LESS_THAN} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_OR_EQUAL} ${columnName} ${COMPARATOR.LESS_OR_EQUAL} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_LEFT_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_OR_EQUAL} ${columnName} ${COMPARATOR.LESS_THAN} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_RIGHT_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_THAN} ${columnName} ${COMPARATOR.LESS_OR_EQUAL} ${targetValueRight}`;\n      default:\n        return `${columnName} ${operator} ${targetValue}`;}\n\n  };\n  return ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 13 } },\n  ___EmotionJSX(ControlHeader, _extends({}, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 103, columnNumber: 7 } })),\n  ___EmotionJSX(FormattersContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 104, columnNumber: 7 } },\n  conditionalFormattingConfigs.map((config, index) => ___EmotionJSX(FormatterContainer, { key: index, __self: this, __source: { fileName: _jsxFileName, lineNumber: 105, columnNumber: 63 } },\n  ___EmotionJSX(CloseButton, { onClick: () => onDelete(index), __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 13 } },\n  ___EmotionJSX(Icons.XSmall, { iconColor: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 107, columnNumber: 15 } })),\n\n  ___EmotionJSX(FormattingPopover, { title: t('Edit formatter'), config: config, columns: columnOptions, onChange: (newConfig) => onEdit(newConfig, index), destroyTooltipOnHide: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 109, columnNumber: 13 } },\n  ___EmotionJSX(OptionControlContainer, { withCaret: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 110, columnNumber: 15 } },\n  ___EmotionJSX(Label, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 111, columnNumber: 17 } }, createLabel(config)),\n  ___EmotionJSX(CaretContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 112, columnNumber: 17 } },\n  ___EmotionJSX(Icons.CaretRight, { iconColor: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 19 } })))))),\n\n\n\n\n  ___EmotionJSX(FormattingPopover, { title: t('Add new formatter'), columns: columnOptions, onChange: onSave, destroyTooltipOnHide: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 118, columnNumber: 9 } },\n  ___EmotionJSX(AddControlLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 119, columnNumber: 11 } },\n  ___EmotionJSX(Icons.PlusSmall, { iconColor: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 120, columnNumber: 13 } }),\n  t('Add new color formatter')))));\n\n\n\n\n};__signature__(ConditionalFormattingControl, \"useTheme{theme}\\nuseState{[conditionalFormattingConfigs, setConditionalFormattingConfigs,](value ?? [])}\\nuseEffect{}\\nuseCallback{removeFormattersWhenColumnsChange}\\nuseComponentDidUpdate{}\", () => [useTheme, useComponentDidUpdate]);const _default =\nConditionalFormattingControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FormattersContainer, \"FormattersContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\");reactHotLoader.register(FormatterContainer, \"FormatterContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\");reactHotLoader.register(CloseButton, \"CloseButton\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\");reactHotLoader.register(ConditionalFormattingControl, \"ConditionalFormattingControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/ConditionalFormattingControl.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { styled, css, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { useComponentDidUpdate } from 'src/common/hooks/useComponentDidUpdate';\nimport { FormattingPopover } from './FormattingPopover';\nimport {\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  ConditionalFormattingControlProps,\n} from './types';\nimport {\n  AddControlLabel,\n  CaretContainer,\n  Label,\n  OptionControlContainer,\n} from '../OptionControls';\n\nconst FormattersContainer = styled.div`\n  ${({ theme }) => css`\n    padding: ${theme.gridUnit}px;\n    border: solid 1px ${theme.colors.grayscale.light2};\n    border-radius: ${theme.gridUnit}px;\n  `}\n`;\n\nexport const FormatterContainer = styled(OptionControlContainer)`\n  &,\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const CloseButton = styled.button`\n  ${({ theme }) => css`\n    color: ${theme.colors.grayscale.light1};\n    height: 100%;\n    width: ${theme.gridUnit * 6}px;\n    border: none;\n    border-right: solid 1px ${theme.colors.grayscale.dark2}0C;\n    padding: 0;\n    outline: none;\n    border-bottom-left-radius: 3px;\n    border-top-left-radius: 3px;\n  `}\n`;\n\nconst ConditionalFormattingControl = ({\n  value,\n  onChange,\n  columnOptions,\n  verboseMap,\n  ...props\n}: ConditionalFormattingControlProps) => {\n  const theme = useTheme();\n  const [\n    conditionalFormattingConfigs,\n    setConditionalFormattingConfigs,\n  ] = useState<ConditionalFormattingConfig[]>(value ?? []);\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(conditionalFormattingConfigs);\n    }\n  }, [conditionalFormattingConfigs, onChange]);\n\n  // remove formatter when corresponding column is removed from controls\n  const removeFormattersWhenColumnsChange = useCallback(() => {\n    const newFormattingConfigs = conditionalFormattingConfigs.filter(config =>\n      columnOptions.some(option => option?.value === config?.column),\n    );\n    if (\n      newFormattingConfigs.length !== conditionalFormattingConfigs.length &&\n      onChange\n    ) {\n      setConditionalFormattingConfigs(newFormattingConfigs);\n      onChange(newFormattingConfigs);\n    }\n  }, [JSON.stringify(columnOptions)]);\n  useComponentDidUpdate(removeFormattersWhenColumnsChange);\n\n  const onDelete = (index: number) => {\n    setConditionalFormattingConfigs(prevConfigs =>\n      prevConfigs.filter((_, i) => i !== index),\n    );\n  };\n\n  const onSave = (config: ConditionalFormattingConfig) => {\n    setConditionalFormattingConfigs(prevConfigs => [...prevConfigs, config]);\n  };\n\n  const onEdit = (newConfig: ConditionalFormattingConfig, index: number) => {\n    const newConfigs = [...conditionalFormattingConfigs];\n    newConfigs.splice(index, 1, newConfig);\n    setConditionalFormattingConfigs(newConfigs);\n  };\n\n  const createLabel = ({\n    column,\n    operator,\n    targetValue,\n    targetValueLeft,\n    targetValueRight,\n  }: ConditionalFormattingConfig) => {\n    const columnName = (column && verboseMap?.[column]) ?? column;\n    switch (operator) {\n      case COMPARATOR.NONE:\n        return `${columnName}`;\n      case COMPARATOR.BETWEEN:\n        return `${targetValueLeft} ${COMPARATOR.LESS_THAN} ${columnName} ${COMPARATOR.LESS_THAN} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_OR_EQUAL} ${columnName} ${COMPARATOR.LESS_OR_EQUAL} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_LEFT_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_OR_EQUAL} ${columnName} ${COMPARATOR.LESS_THAN} ${targetValueRight}`;\n      case COMPARATOR.BETWEEN_OR_RIGHT_EQUAL:\n        return `${targetValueLeft} ${COMPARATOR.LESS_THAN} ${columnName} ${COMPARATOR.LESS_OR_EQUAL} ${targetValueRight}`;\n      default:\n        return `${columnName} ${operator} ${targetValue}`;\n    }\n  };\n\n  return (\n    <div>\n      <ControlHeader {...props} />\n      <FormattersContainer>\n        {conditionalFormattingConfigs.map((config, index) => (\n          <FormatterContainer key={index}>\n            <CloseButton onClick={() => onDelete(index)}>\n              <Icons.XSmall iconColor={theme.colors.grayscale.light1} />\n            </CloseButton>\n            <FormattingPopover\n              title={t('Edit formatter')}\n              config={config}\n              columns={columnOptions}\n              onChange={(newConfig: ConditionalFormattingConfig) =>\n                onEdit(newConfig, index)\n              }\n              destroyTooltipOnHide\n            >\n              <OptionControlContainer withCaret>\n                <Label>{createLabel(config)}</Label>\n                <CaretContainer>\n                  <Icons.CaretRight iconColor={theme.colors.grayscale.light1} />\n                </CaretContainer>\n              </OptionControlContainer>\n            </FormattingPopover>\n          </FormatterContainer>\n        ))}\n        <FormattingPopover\n          title={t('Add new formatter')}\n          columns={columnOptions}\n          onChange={onSave}\n          destroyTooltipOnHide\n        >\n          <AddControlLabel>\n            <Icons.PlusSmall iconColor={theme.colors.grayscale.light1} />\n            {t('Add new color formatter')}\n          </AddControlLabel>\n        </FormattingPopover>\n      </FormattersContainer>\n    </div>\n  );\n};\n\nexport default ConditionalFormattingControl;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}