{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _URLSearchParams from \"@babel/runtime-corejs3/core-js-stable/url-search-params\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport { URL_PARAMS } from 'src/constants';\nimport replaceUndefinedByNull from './replaceUndefinedByNull';\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\nexport default function getDashboardUrl({ pathname, filters = {}, hash = '', standalone, dataMask }) {\n  const newSearchParams = new _URLSearchParams();\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  newSearchParams.set(URL_PARAMS.preselectFilters.name, JSON.stringify(serializeActiveFilterValues(filters)));\n  if (standalone) {\n    newSearchParams.set(URL_PARAMS.standalone.name, standalone.toString());\n  }\n  if (dataMask) {\n    newSearchParams.set(URL_PARAMS.nativeFilters.name, rison.encode(replaceUndefinedByNull(dataMask)));\n  }\n  const hashSection = hash ? `#${hash}` : '';\n  return `${pathname}?${newSearchParams.toString()}${hashSection}`;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDashboardUrl, \"getDashboardUrl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getDashboardUrl.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getDashboardUrl.ts"],"names":[],"mappings":"+XAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,OAAO,sBAAP,MAAmC,0BAAnC;AACA,OAAO,2BAAP,MAAwC,+BAAxC;AAGA,eAAc,SAAU,eAAV,CAA0B,EACtC,QADsC,EAEtC,OAAO,GAAG,EAF4B,EAGtC,IAAI,GAAG,EAH+B,EAItC,UAJsC,EAKtC,QALsC,EAA1B,EAYb;AACC,QAAM,eAAe,GAAG,sBAAxB;AAEA;AACA;AACA,EAAA,eAAe,CAAC,GAAhB,CACE,UAAU,CAAC,gBAAX,CAA4B,IAD9B,EAEE,IAAI,CAAC,SAAL,CAAe,2BAA2B,CAAC,OAAD,CAA1C,CAFF;AAKA,MAAI,UAAJ,EAAgB;AACd,IAAA,eAAe,CAAC,GAAhB,CAAoB,UAAU,CAAC,UAAX,CAAsB,IAA1C,EAAgD,UAAU,CAAC,QAAX,EAAhD;AACD;AAED,MAAI,QAAJ,EAAc;AACZ,IAAA,eAAe,CAAC,GAAhB,CACE,UAAU,CAAC,aAAX,CAAyB,IAD3B,EAEE,KAAK,CAAC,MAAN,CAAa,sBAAsB,CAAC,QAAD,CAAnC,CAFF;AAID;AAED,QAAM,WAAW,GAAG,IAAI,GAAG,IAAI,IAAI,EAAX,GAAgB,EAAxC;AACA,SAAO,GAAG,QAAQ,IAAI,eAAe,CAAC,QAAhB,EAA0B,GAAG,WAAW,EAA9D;AACD,C,iLAnCuB,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport { JsonObject } from '@superset-ui/core';\nimport { URL_PARAMS } from 'src/constants';\nimport replaceUndefinedByNull from './replaceUndefinedByNull';\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\nimport { DataMaskState } from '../../dataMask/types';\n\nexport default function getDashboardUrl({\n  pathname,\n  filters = {},\n  hash = '',\n  standalone,\n  dataMask,\n}: {\n  pathname: string;\n  filters: JsonObject;\n  hash: string;\n  standalone?: number | null;\n  dataMask?: DataMaskState;\n}) {\n  const newSearchParams = new URLSearchParams();\n\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  newSearchParams.set(\n    URL_PARAMS.preselectFilters.name,\n    JSON.stringify(serializeActiveFilterValues(filters)),\n  );\n\n  if (standalone) {\n    newSearchParams.set(URL_PARAMS.standalone.name, standalone.toString());\n  }\n\n  if (dataMask) {\n    newSearchParams.set(\n      URL_PARAMS.nativeFilters.name,\n      rison.encode(replaceUndefinedByNull(dataMask)),\n    );\n  }\n\n  const hashSection = hash ? `#${hash}` : '';\n  return `${pathname}?${newSearchParams.toString()}${hashSection}`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}