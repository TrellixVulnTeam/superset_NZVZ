{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isEmpty from \"lodash/isEmpty\";import _isEqual from \"lodash/isEqual\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, GenericDataType, getChartMetadataRegistry, styled, t, SupersetClient } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormItem } from 'src/components/Form';\nimport { Input } from 'src/common/components';\nimport { Select } from 'src/components';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport Collapse from 'src/components/Collapse';\nimport { getChartDataRequest } from 'src/chart/chartAction';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport Tabs from 'src/components/Tabs';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Radio } from 'src/components/Radio';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport Loading from 'src/components/Loading';\nimport { ColumnSelect } from './ColumnSelect';\nimport { FILTER_SUPPORTED_TYPES, hasTemporalColumns, setNativeFilterFieldValues, useForceUpdate, mostUsedDataset } from './utils';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport { getFormData } from '../../utils';\nimport { NativeFilterType } from '../../types';\nimport getControlItemsMap from './getControlItemsMap';\nimport FilterScope from './FilterScope/FilterScope';\nimport RemovedFilter from './RemovedFilter';\nimport DefaultValue from './DefaultValue';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { CASCADING_FILTERS, getFiltersConfigModalTestId } from '../FiltersConfigModal';\nimport DatasetSelect from './DatasetSelect';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { TabPane } = Tabs;\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  color: ${({ theme }) => theme.colors.primary.base};\n`;\nconst StyledCollapse = styled(Collapse)`\n  margin-left: ${({ theme }) => theme.gridUnit * -4 - 1}px;\n  margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n  border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    margin-left: ${({ theme }) => theme.gridUnit * -4}px;\n    margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n    top: 0;\n    background: white;\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Configuration') },\n\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping') } };\n\n\nconst FilterPanels = {\n  basic: {\n    key: 'basic',\n    name: t('Basic') },\n\n  advanced: {\n    key: 'advanced',\n    name: t('Advanced') } };\n\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\nconst BASIC_CONTROL_ITEMS = ['enableEmptyFilter', 'multiSelect'];\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by') };\n\nconst localCache = new Map();\nconst cachedSupersetGet = cacheWrapper(SupersetClient.get, localCache, ({ endpoint }) => endpoint || '');\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = ({ filterId, filterToEdit, removedFilters, restoreFilter, form, parentFilters, setErroredFilters }, ref) => {var _form$getFieldValue, _formFilter$parentFil, _filterToEdit$cascade, _formFilter$dataset2, _nativeFilterItems$fo, _nativeFilterItems$fo2, _ref, _formFilter$dataset$v, _formFilter$dataset3, _filterToEdit$targets, _nativeFilterItems$fo3, _nativeFilterItem$val, _formFilter$isDataDir, _formFilter$dataset6, _filterToEdit$adhoc_f, _formFilter$controlVa, _filterToEdit$control, _filterToEdit$control2, _formFilter$controlVa2, _formFilter$adhoc_fil, _formFilter$controlVa3, _formFilter$dataset9, _datasetDetails$colum;\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState('');\n  const [metrics, setMetrics] = useState([]);\n  const [activeTabKey, setActiveTabKey] = useState(FilterTabs.configuration.key);\n  const [activeFilterPanelKey, setActiveFilterPanelKey] = useState();\n  const [undoFormValues, setUndoFormValues] = useState(null);\n  const forceUpdate = useForceUpdate();\n  const [datasetDetails, setDatasetDetails] = useState();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const formValues = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n  const parentFilterOptions = useMemo(() => parentFilters.map((filter) => ({\n    value: filter.id,\n    label: filter.title })),\n  [parentFilters]);\n  const parentId = (formFilter == null ? void 0 : (_formFilter$parentFil = formFilter.parentFilter) == null ? void 0 : _formFilter$parentFil.value) || (filterToEdit == null ? void 0 : (_filterToEdit$cascade = filterToEdit.cascadeParentIds) == null ? void 0 : _filterToEdit$cascade[0]);\n  const parentFilter = parentFilterOptions.find(({ value }) => value === parentId);\n  const hasParentFilter = !!parentFilter;\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n  // @ts-ignore\n  .filter(([, { value }]) => {var _value$behaviors;return (_value$behaviors = value.behaviors) == null ? void 0 : _value$behaviors.includes(Behavior.NATIVE_FILTER);}).\n  map(([key]) => key);\n  const loadedDatasets = useSelector(({ datasources }) => datasources);\n  const charts = useSelector(({ charts }) => charts);\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(() => Object.values(loadedDatasets).some((dataset) => hasTemporalColumns(dataset)), [loadedDatasets]);\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find((dataset) => {var _formFilter$dataset;return dataset.id === (formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value);});\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter == null ? void 0 : (_formFilter$dataset2 = formFilter.dataset) == null ? void 0 : _formFilter$dataset2.value, loadedDatasets]);\n  // @ts-ignore\n  const hasDataset = !!((_nativeFilterItems$fo = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo2 = _nativeFilterItems$fo.value) != null && _nativeFilterItems$fo2.\n  datasourceCount);\n  const datasetId = (_ref = (_formFilter$dataset$v = formFilter == null ? void 0 : (_formFilter$dataset3 = formFilter.dataset) == null ? void 0 : _formFilter$dataset3.value) != null ? _formFilter$dataset$v :\n  filterToEdit == null ? void 0 : (_filterToEdit$targets = filterToEdit.targets[0]) == null ? void 0 : _filterToEdit$targets.datasetId) != null ? _ref :\n  mostUsedDataset(loadedDatasets, charts);\n  const { controlItems = {}, mainControlItems = {} } = formFilter ?\n  getControlItemsMap({\n    datasetId,\n    disabled: false,\n    forceUpdate,\n    form,\n    filterId,\n    filterType: formFilter == null ? void 0 : formFilter.filterType,\n    filterToEdit,\n    formFilter,\n    removed: isRemoved }) :\n\n  {};\n  const hasColumn = !!mainControlItems.groupby;\n  const nativeFilterItem = (_nativeFilterItems$fo3 = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null ? _nativeFilterItems$fo3 : {};\n  // @ts-ignore\n  const enableNoResults = !!((_nativeFilterItem$val = nativeFilterItem.value) != null && _nativeFilterItem$val.enableNoResults);\n  const hasMetrics = hasColumn && !!metrics.length;\n  const hasFilledDataset = !hasDataset || datasetId && ((formFilter == null ? void 0 : formFilter.column) || !hasColumn);\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const isCascadingFilter = CASCADING_FILTERS.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const isDataDirty = (_formFilter$isDataDir = formFilter == null ? void 0 : formFilter.isDataDirty) != null ? _formFilter$isDataDir : true;\n  const setNativeFilterFieldValuesWrapper = (values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError('');\n    forceUpdate();\n  };\n  const setErrorWrapper = (error) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null });\n\n    setError(error);\n    forceUpdate();\n  };\n  const refreshHandler = useCallback((force = false) => {var _formFilter$dataset4, _formFilter$dataset5;\n    if (!hasDataset || !(formFilter != null && (_formFilter$dataset4 = formFilter.dataset) != null && _formFilter$dataset4.value)) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter == null ? void 0 : (_formFilter$dataset5 = formFilter.dataset) == null ? void 0 : _formFilter$dataset5.value,\n      groupby: formFilter == null ? void 0 : formFilter.column,\n      ...formFilter });\n\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false });\n\n    getChartDataRequest({\n      formData,\n      force,\n      requestParams: { dashboardId: 0 } }).\n\n    then(({ response, json }) => {\n      if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n        // deal with getChartDataRequest transforming the response data\n        const result = 'result' in json ? json.result[0] : json;\n        if (response.status === 200) {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: [result] });\n\n        } else\n        if (response.status === 202) {\n          waitForAsyncData(result).\n          then((asyncResult) => {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: asyncResult });\n\n          }).\n          catch((error) => {\n            setError(error.message || error.error || t('Check configuration'));\n          });\n        } else\n        {\n          throw new Error(`Received unexpected response status (${response.status}) while fetching chart data`);\n        }\n      } else\n      {\n        setNativeFilterFieldValuesWrapper({\n          defaultValueQueriesData: json.result });\n\n      }\n    }).\n    catch((error) => {\n      error.json().then((body) => {\n        setErrorWrapper(body.message || error.statusText || t('Check configuration'));\n      });\n    });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset]);\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter == null ? void 0 : formFilter.column : undefined,\n    ...formFilter });\n\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] = useDefaultValue(formFilter, filterToEdit);\n  const showDataset = !datasetId || datasetDetails || (formFilter == null ? void 0 : (_formFilter$dataset6 = formFilter.dataset) == null ? void 0 : _formFilter$dataset6.label);\n  const formChanged = useCallback(() => {\n    form.setFields([\n    {\n      name: 'changed',\n      value: true }]);\n\n\n  }, [form]);\n  const updateFormValues = useCallback((values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    formChanged();\n  }, [filterId, form, formChanged]);\n  const hasPreFilter = !!(formFilter != null && formFilter.adhoc_filters) ||\n  !!(formFilter != null && formFilter.time_range) ||\n  !!(filterToEdit != null && (_filterToEdit$adhoc_f = filterToEdit.adhoc_filters) != null && _filterToEdit$adhoc_f.length) ||\n  !!(filterToEdit != null && filterToEdit.time_range);\n  const hasSorting = typeof (formFilter == null ? void 0 : (_formFilter$controlVa = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa.sortAscending) === 'boolean' ||\n  typeof (filterToEdit == null ? void 0 : (_filterToEdit$control = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control.sortAscending) === 'boolean';\n  let sort = filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2.sortAscending;\n  if (typeof (formFilter == null ? void 0 : (_formFilter$controlVa2 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa2.sortAscending) === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n  const showDefaultValue = !hasDataset ||\n  !isDataDirty && hasFilledDataset ||\n  !mainControlItems.groupby;\n  const onSortChanged = (value) => {var _form$getFieldValue2;\n    const previous = (_form$getFieldValue2 = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue2[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value } });\n\n\n    forceUpdate();\n  };\n  const validatePreFilter = () => setTimeout(() => form.validateFields([\n  ['filters', filterId, 'adhoc_filters'],\n  ['filters', filterId, 'time_range']]),\n  0);\n  const hasTimeRange = (formFilter == null ? void 0 : formFilter.time_range) && formFilter.time_range !== 'No filter';\n  const hasAdhoc = (formFilter == null ? void 0 : (_formFilter$adhoc_fil = formFilter.adhoc_filters) == null ? void 0 : _formFilter$adhoc_fil.length) > 0;\n  const defaultToFirstItem = formFilter == null ? void 0 : (_formFilter$controlVa3 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa3.defaultToFirstItem;\n  const hasAdvancedSection = (formFilter == null ? void 0 : formFilter.filterType) === 'filter_select' ||\n  (formFilter == null ? void 0 : formFilter.filterType) === 'filter_range';\n  const initialDefaultValue = (formFilter == null ? void 0 : formFilter.filterType) === (filterToEdit == null ? void 0 : filterToEdit.filterType) ?\n  filterToEdit == null ? void 0 : filterToEdit.defaultDataMask :\n  null;\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n  const ParentSelect = ({ value, ...rest }) => {\n    const parentId = value == null ? void 0 : value.value;\n    const isParentRemoved = parentId && removedFilters[parentId];\n    let options = parentFilterOptions;\n    if (isParentRemoved) {\n      options = [\n      { label: t('(deleted)'), value: parentId },\n      ...parentFilterOptions];\n\n    }\n    return ___EmotionJSX(Select, _extends({ ariaLabel: t('Parent filter'), placeholder: t('None'), options: options, allowClear: true, value: parentId }, rest, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 420, columnNumber: 17 } }));\n  };\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}` }).\n\n      then((response) => {var _response$json, _response$json$result, _response$json2;\n        setMetrics((_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result) == null ? void 0 : _response$json$result.metrics);\n        const dataset = (_response$json2 = response.json) == null ? void 0 : _response$json2.result;\n        // modify the response to fit structure expected by AdhocFilterControl\n        dataset.type = dataset.datasource_type;\n        dataset.filter_select = true;\n        setDatasetDetails(dataset);\n      }).\n      catch((response) => {\n        addDangerToast(response.message);\n      });\n    }\n  }, [datasetId]);\n  useImperativeHandle(ref, () => ({\n    changeTab(tab) {\n      setActiveTabKey(tab);\n    } }));\n\n  useBackendFormUpdate(form, filterId);\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n  hasDataset,\n  hasFilledDataset,\n  hasDefaultValue,\n  isDataDirty,\n  refreshHandler,\n  showDataset]);\n\n  useEffect(() => {\n    // Run only once when the control items are available\n    if (!activeFilterPanelKey && !_isEmpty(controlItems)) {\n      const hasCheckedAdvancedControl = hasParentFilter ||\n      hasPreFilter ||\n      hasSorting ||\n      Object.keys(controlItems).\n      filter((key) => !BASIC_CONTROL_ITEMS.includes(key)).\n      some((key) => controlItems[key].checked);\n      setActiveFilterPanelKey(hasCheckedAdvancedControl ?\n      [FilterPanels.basic.key, FilterPanels.advanced.key] :\n      FilterPanels.basic.key);\n    }\n  }, [\n  activeFilterPanelKey,\n  hasParentFilter,\n  hasPreFilter,\n  hasSorting,\n  controlItems]);\n\n  const initiallyExcludedCharts = useMemo(() => {var _formFilter$dataset7;\n    const excluded = [];\n    if ((formFilter == null ? void 0 : (_formFilter$dataset7 = formFilter.dataset) == null ? void 0 : _formFilter$dataset7.value) === undefined) {\n      return [];\n    }\n    Object.values(charts).forEach((chart) => {var _chart$formData, _loadedDatasets$chart, _formFilter$dataset8;\n      const chartDatasetUid = (_chart$formData = chart.formData) == null ? void 0 : _chart$formData.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (((_loadedDatasets$chart = loadedDatasets[chartDatasetUid]) == null ? void 0 : _loadedDatasets$chart.id) !== (formFilter == null ? void 0 : (_formFilter$dataset8 = formFilter.dataset) == null ? void 0 : _formFilter$dataset8.value)) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n  JSON.stringify(charts),\n  formFilter == null ? void 0 : (_formFilter$dataset9 = formFilter.dataset) == null ? void 0 : _formFilter$dataset9.value,\n  JSON.stringify(loadedDatasets)]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n  if (isRemoved) {\n    return ___EmotionJSX(RemovedFilter, { onClick: () => restoreFilter(filterId), __self: this, __source: { fileName: _jsxFileName, lineNumber: 512, columnNumber: 16 } });\n  }\n  return ___EmotionJSX(StyledTabs, { activeKey: activeTabKey, onChange: (activeKey) => setActiveTabKey(activeKey), centered: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 514, columnNumber: 13 } },\n  ___EmotionJSX(TabPane, { tab: FilterTabs.configuration.name, key: FilterTabs.configuration.key, forceRender: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 515, columnNumber: 7 } },\n  ___EmotionJSX(StyledContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 516, columnNumber: 9 } },\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'type'], hidden: true, initialValue: NativeFilterType.NATIVE_FILTER, __self: this, __source: { fileName: _jsxFileName, lineNumber: 517, columnNumber: 11 } },\n  ___EmotionJSX(Input, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 518, columnNumber: 13 } })),\n\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'name'], label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 520, columnNumber: 71 } }, t('Filter name')), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !isRemoved, message: t('Name is required') }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 520, columnNumber: 11 } },\n  ___EmotionJSX(Input, _extends({}, getFiltersConfigModalTestId('name-input'), { __self: this, __source: { fileName: _jsxFileName, lineNumber: 521, columnNumber: 13 } }))),\n\n  ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'filterType'], rules: [{ required: !isRemoved, message: t('Name is required') }], initialValue: (filterToEdit == null ? void 0 : filterToEdit.filterType) || 'filter_select', label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 523, columnNumber: 203 } }, t('Filter Type')) }, getFiltersConfigModalTestId('filter-type'), { __self: this, __source: { fileName: _jsxFileName, lineNumber: 523, columnNumber: 11 } }),\n  ___EmotionJSX(Select, { ariaLabel: t('Filter type'), options: nativeFilterVizTypes.map((filterType) => {var _nativeFilterItems$fi, _FILTER_SUPPORTED_TYP, _FILTER_SUPPORTED_TYP2;\n      // @ts-ignore\n      const name = (_nativeFilterItems$fi = nativeFilterItems[filterType]) == null ? void 0 : _nativeFilterItems$fi.value.name;\n      const mappedName = name ?\n      FILTER_TYPE_NAME_MAPPING[name] :\n      undefined;\n      const isDisabled = ((_FILTER_SUPPORTED_TYP = FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP.length) === 1 && ((_FILTER_SUPPORTED_TYP2 =\n      FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP2.includes(GenericDataType.TEMPORAL)) &&\n      !doLoadedDatasetsHaveTemporalColumns;\n      return {\n        value: filterType,\n        label: mappedName || name,\n        customLabel: isDisabled ? ___EmotionJSX(Tooltip, { title: t('Datasets do not contain a temporal column'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 536, columnNumber: 44 } },\n        mappedName || name) :\n        undefined,\n        disabled: isDisabled };\n\n    }), onChange: (value) => {\n      setNativeFilterFieldValues(form, filterId, {\n        filterType: value,\n        defaultDataMask: null,\n        column: null });\n\n      forceUpdate();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 524, columnNumber: 13 } }))),\n\n\n  hasDataset && ___EmotionJSX(StyledRowContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 551, columnNumber: 25 } },\n  showDataset ? ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'dataset'], label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 552, columnNumber: 92 } }, t('Dataset')), initialValue: datasetDetails ?\n    {\n      label: datasetDetails.table_name,\n      value: datasetDetails.id } :\n\n    undefined, rules: [\n    { required: !isRemoved, message: t('Dataset is required') }] },\n  getFiltersConfigModalTestId('datasource-input'), { __self: this, __source: { fileName: _jsxFileName, lineNumber: 552, columnNumber: 29 } }),\n  ___EmotionJSX(DatasetSelect, { onChange: (value) => {\n      // We need to reset the column when the dataset has changed\n      if (value.value !== datasetId) {\n        setNativeFilterFieldValues(form, filterId, {\n          dataset: value,\n          defaultDataMask: null,\n          column: null });\n\n      }\n      forceUpdate();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 560, columnNumber: 17 } })) :\n  ___EmotionJSX(StyledFormItem, { label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 571, columnNumber: 60 } }, t('Dataset')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 571, columnNumber: 37 } },\n  ___EmotionJSX(Loading, { position: \"inline-centered\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 572, columnNumber: 17 } })),\n\n  hasDataset &&\n  Object.keys(mainControlItems).map((key) => mainControlItems[key].element)),\n\n  ___EmotionJSX(StyledCollapse, { activeKey: activeFilterPanelKey, onChange: (key) => setActiveFilterPanelKey(key), expandIconPosition: \"right\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 577, columnNumber: 9 } },\n  ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.basic.name, key: FilterPanels.basic.key, __self: this, __source: { fileName: _jsxFileName, lineNumber: 578, columnNumber: 11 } },\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValueQueriesData'], hidden: true, initialValue: null, __self: this, __source: { fileName: _jsxFileName, lineNumber: 579, columnNumber: 13 } }),\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValue'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 580, columnNumber: 13 } },\n  ___EmotionJSX(CollapsibleControl, { checked: hasDefaultValue, disabled: isRequired || defaultToFirstItem, initialValue: hasDefaultValue, title: t('Filter has default value'), tooltip: defaultValueTooltip, onChange: (value) => {\n      setHasDefaultValue(value);\n      formChanged();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 581, columnNumber: 15 } },\n  !isRemoved && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'defaultDataMask'], initialValue: initialDefaultValue, \"data-test\": \"default-input\", label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 585, columnNumber: 171 } }, t('Default Value')), required: hasDefaultValue, rules: [\n    {\n      validator: () => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n        if (formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value) {\n          // requires managing the error as the DefaultValue\n          // component does not use an Antdesign compatible input\n          const formValidationFields = form.getFieldsError();\n          setErroredFilters((prevErroredFilters) => {\n            if (prevErroredFilters.length &&\n            !formValidationFields.find((f) => f.errors.length > 0)) {\n              return [];\n            }\n            return prevErroredFilters;\n          });\n          return Promise.resolve();\n        }\n        setErroredFilters((prevErroredFilters) => {\n          if (prevErroredFilters.includes(filterId)) {\n            return prevErroredFilters;\n          }\n          return [...prevErroredFilters, filterId];\n        });\n        return Promise.reject(new Error(t('Default value is required')));\n      } }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 585, columnNumber: 33 } },\n\n\n  error ? ___EmotionJSX(BasicErrorAlert, { title: t('Cannot load filter'), body: error, level: \"error\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 611, columnNumber: 31 } }) : showDefaultValue ? ___EmotionJSX(DefaultValueContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 611, columnNumber: 132 } },\n  ___EmotionJSX(DefaultValue, { setDataMask: (dataMask) => {var _initialDefaultValue$, _dataMask$filterState;\n      if (!_isEqual(initialDefaultValue == null ? void 0 : (_initialDefaultValue$ = initialDefaultValue.filterState) == null ? void 0 : _initialDefaultValue$.value, dataMask == null ? void 0 : (_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value)) {\n        formChanged();\n      }\n      setNativeFilterFieldValues(form, filterId, {\n        defaultDataMask: dataMask });\n\n      form.validateFields([\n      ['filters', filterId, 'defaultDataMask']]);\n\n      forceUpdate();\n    }, hasDefaultValue: hasDefaultValue, filterId: filterId, hasDataset: hasDataset, form: form, formData: newFormData, enableNoResults: enableNoResults, __self: this, __source: { fileName: _jsxFileName, lineNumber: 612, columnNumber: 25 } }),\n  hasDataset && datasetId && ___EmotionJSX(Tooltip, { title: t('Refresh the default values'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 624, columnNumber: 54 } },\n  ___EmotionJSX(RefreshIcon, { onClick: () => refreshHandler(true), __self: this, __source: { fileName: _jsxFileName, lineNumber: 625, columnNumber: 29 } }))) :\n\n  t('Fill all required fields to enable \"Default Value\"')))),\n\n\n\n  Object.keys(controlItems).\n  filter((key) => BASIC_CONTROL_ITEMS.includes(key)).\n  map((key) => controlItems[key].element)),\n\n  hasAdvancedSection && ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.advanced.name, key: FilterPanels.advanced.key, __self: this, __source: { fileName: _jsxFileName, lineNumber: 635, columnNumber: 35 } },\n  isCascadingFilter && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'hierarchicalFilter'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 636, columnNumber: 38 } },\n  ___EmotionJSX(CollapsibleControl, { title: t('Filter is hierarchical'), initialValue: hasParentFilter, onChange: (checked) => {\n      formChanged();\n      if (checked) {\n        // execute after render\n        setTimeout(() => form.validateFields([\n        ['filters', filterId, 'parentFilter']]),\n        0);\n      }\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 637, columnNumber: 19 } },\n  ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'parentFilter'], label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 646, columnNumber: 95 } }, t('Parent filter')), initialValue: parentFilter, normalize: (value) => value ? { value } : undefined, \"data-test\": \"parent-filter-input\", required: true, rules: [\n    {\n      required: true,\n      message: t('Parent filter is required') }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 646, columnNumber: 21 } },\n\n\n  ___EmotionJSX(ParentSelect, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 652, columnNumber: 23 } })))),\n\n\n\n  Object.keys(controlItems).\n  filter((key) => !BASIC_CONTROL_ITEMS.includes(key)).\n  map((key) => controlItems[key].element),\n  hasDataset && hasAdditionalFilters && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'preFilter'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 659, columnNumber: 55 } },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasPreFilter, title: t('Pre-filter available values'), onChange: (checked) => {\n      formChanged();\n      if (checked) {\n        validatePreFilter();\n      }\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 660, columnNumber: 19 } },\n  ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'adhoc_filters'], initialValue: filterToEdit == null ? void 0 : filterToEdit.adhoc_filters, required: true, rules: [\n    {\n      validator: preFilterValidator }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 666, columnNumber: 21 } },\n\n\n  ___EmotionJSX(AdhocFilterControl, { columns: (datasetDetails == null ? void 0 : (_datasetDetails$colum = datasetDetails.columns) == null ? void 0 : _datasetDetails$colum.filter((c) => c.filterable)) || [], savedMetrics: (datasetDetails == null ? void 0 : datasetDetails.metrics) || [], datasource: datasetDetails, onChange: (filters) => {\n      setNativeFilterFieldValues(form, filterId, {\n        adhoc_filters: filters });\n\n      forceUpdate();\n      validatePreFilter();\n    }, label: ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 677, columnNumber: 27 } },\n    ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 678, columnNumber: 29 } }, t('Pre-filter')),\n    !hasTimeRange && ___EmotionJSX(StyledAsterisk, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 679, columnNumber: 47 } })), __self: this, __source: { fileName: _jsxFileName, lineNumber: 671, columnNumber: 23 } })),\n\n\n  showTimeRangePicker && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'time_range'], label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 682, columnNumber: 115 } }, t('Time range')), initialValue: (filterToEdit == null ? void 0 : filterToEdit.time_range) || 'No filter', required: !hasAdhoc, rules: [\n    {\n      validator: preFilterValidator }], __self: this, __source: { fileName: _jsxFileName, lineNumber: 682, columnNumber: 46 } },\n\n\n  ___EmotionJSX(DateFilterControl, { name: \"time_range\", endpoints: ['inclusive', 'exclusive'], onChange: (timeRange) => {\n      setNativeFilterFieldValues(form, filterId, {\n        time_range: timeRange });\n\n      forceUpdate();\n      validatePreFilter();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 687, columnNumber: 25 } })),\n\n  hasTimeRange && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'granularity_sqla'], label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 696, columnNumber: 29 } }, t('Time column')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: t('Optional time column if time range should apply to another column than the default time column'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 697, columnNumber: 29 } })),\n    initialValue: filterToEdit == null ? void 0 : filterToEdit.granularity_sqla, __self: this, __source: { fileName: _jsxFileName, lineNumber: 695, columnNumber: 39 } },\n  ___EmotionJSX(ColumnSelect, { allowClear: true, form: form, formField: \"granularity_sqla\", filterId: filterId, filterValues: (column) => !!column.is_dttm, datasetId: datasetId, onChange: (column) => {\n      // We need reset default value when when column changed\n      setNativeFilterFieldValues(form, filterId, {\n        granularity_sqla: column });\n\n      forceUpdate();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 699, columnNumber: 25 } })))),\n\n\n\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_range' && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'sortFilter'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 709, columnNumber: 62 } },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasSorting, title: t('Sort filter values'), onChange: (checked) => {\n      onSortChanged(checked || undefined);\n      formChanged();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 710, columnNumber: 19 } },\n  ___EmotionJSX(StyledRowFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'sortAscending'],\n    initialValue: sort, label: ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 719, columnNumber: 47 } }, t('Sort type')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 714, columnNumber: 21 } },\n  ___EmotionJSX(Radio.Group, { onChange: (value) => {\n      onSortChanged(value.target.value);\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 720, columnNumber: 23 } },\n  ___EmotionJSX(Radio, { value: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 723, columnNumber: 25 } }, t('Sort ascending')),\n  ___EmotionJSX(Radio, { value: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 724, columnNumber: 25 } }, t('Sort descending')))),\n\n\n  hasMetrics && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'sortMetric'], initialValue: filterToEdit == null ? void 0 : filterToEdit.sortMetric, label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 728, columnNumber: 29 } }, t('Sort Metric')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: t('If a metric is specified, sorting will be done based on the metric value'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 729, columnNumber: 29 } })),\n    \"data-test\": \"field-input\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 727, columnNumber: 37 } },\n  ___EmotionJSX(Select, { allowClear: true, ariaLabel: t('Sort metric'), name: \"sortMetric\", options: metrics.map((metric) => {var _metric$verbose_name;return {\n        value: metric.metric_name,\n        label: (_metric$verbose_name = metric.verbose_name) != null ? _metric$verbose_name : metric.metric_name };}),\n    onChange: (value) => {\n      if (value !== undefined) {\n        setNativeFilterFieldValues(form, filterId, {\n          sortMetric: value });\n\n        forceUpdate();\n      }\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 731, columnNumber: 25 } }))))))),\n\n\n\n\n\n\n  ___EmotionJSX(TabPane, { tab: FilterTabs.scoping.name, key: FilterTabs.scoping.key, forceRender: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 748, columnNumber: 7 } },\n  ___EmotionJSX(FilterScope, { updateFormValues: updateFormValues, pathToFormValue: ['filters', filterId], forceUpdate: forceUpdate, filterScope: filterToEdit == null ? void 0 : filterToEdit.scope, formFilterScope: formFilter == null ? void 0 : formFilter.scope, formScopingType: formFilter == null ? void 0 : formFilter.scoping, initiallyExcludedCharts: initiallyExcludedCharts, __self: this, __source: { fileName: _jsxFileName, lineNumber: 749, columnNumber: 9 } })));\n\n\n};__signature__(FiltersConfigForm, \"useState{[error, setError]('')}\\nuseState{[metrics, setMetrics]([])}\\nuseState{[activeTabKey, setActiveTabKey](FilterTabs.configuration.key)}\\nuseState{[activeFilterPanelKey, setActiveFilterPanelKey]}\\nuseState{[undoFormValues, setUndoFormValues](null)}\\nuseForceUpdate{forceUpdate}\\nuseState{[datasetDetails, setDatasetDetails]}\\nuseMemo{defaultFormFilter}\\nuseMemo{parentFilterOptions}\\nuseSelector{loadedDatasets}\\nuseSelector{charts}\\nuseMemo{doLoadedDatasetsHaveTemporalColumns}\\nuseMemo{showTimeRangePicker}\\nuseCallback{refreshHandler}\\nuseDefaultValue{[hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue,]}\\nuseCallback{formChanged}\\nuseCallback{updateFormValues}\\nuseEffect{}\\nuseImperativeHandle{}\\nuseBackendFormUpdate{}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{initiallyExcludedCharts}\\nuseEffect{}\\nuseEffect{}\", () => [useForceUpdate, useSelector, useSelector, useDefaultValue, useImperativeHandle, useBackendFormUpdate]);const _default = /*#__PURE__*/\nforwardRef(FiltersConfigForm);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TabPane, \"TabPane\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowContainer, \"StyledRowContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledFormItem, \"StyledFormItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowFormItem, \"StyledRowFormItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowSubFormItem, \"StyledRowSubFormItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledLabel, \"StyledLabel\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(DefaultValueContainer, \"DefaultValueContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(RefreshIcon, \"RefreshIcon\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledCollapse, \"StyledCollapse\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledTabs, \"StyledTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledAsterisk, \"StyledAsterisk\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTabs, \"FilterTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterPanels, \"FilterPanels\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTERS_WITH_ADHOC_FILTERS, \"FILTERS_WITH_ADHOC_FILTERS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(BASIC_CONTROL_ITEMS, \"BASIC_CONTROL_ITEMS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTER_TYPE_NAME_MAPPING, \"FILTER_TYPE_NAME_MAPPING\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(localCache, \"localCache\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(cachedSupersetGet, \"cachedSupersetGet\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FiltersConfigForm, \"FiltersConfigForm\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  Behavior,\n  ChartDataResponseResult,\n  Column,\n  GenericDataType,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetApiError,\n  t,\n  SupersetClient,\n} from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  InfoTooltipWithTrigger,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport { FormInstance } from 'antd/lib/form';\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { isEqual, isEmpty } from 'lodash';\nimport { FormItem } from 'src/components/Form';\nimport { Input } from 'src/common/components';\nimport { Select } from 'src/components';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { ClientErrorObject } from 'src/utils/getClientErrorObject';\nimport Collapse from 'src/components/Collapse';\nimport { getChartDataRequest } from 'src/chart/chartAction';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport Tabs from 'src/components/Tabs';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Radio } from 'src/components/Radio';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport {\n  Chart,\n  ChartsState,\n  DatasourcesState,\n  RootState,\n} from 'src/dashboard/types';\nimport Loading from 'src/components/Loading';\nimport { ColumnSelect } from './ColumnSelect';\nimport { NativeFiltersForm, FilterRemoval } from '../types';\nimport {\n  FILTER_SUPPORTED_TYPES,\n  hasTemporalColumns,\n  setNativeFilterFieldValues,\n  useForceUpdate,\n  mostUsedDataset,\n} from './utils';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport { getFormData } from '../../utils';\nimport { Filter, NativeFilterType } from '../../types';\nimport getControlItemsMap from './getControlItemsMap';\nimport FilterScope from './FilterScope/FilterScope';\nimport RemovedFilter from './RemovedFilter';\nimport DefaultValue from './DefaultValue';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport {\n  CASCADING_FILTERS,\n  getFiltersConfigModalTestId,\n} from '../FiltersConfigModal';\nimport DatasetSelect from './DatasetSelect';\n\nconst { TabPane } = Tabs;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\n\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\n\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  color: ${({ theme }) => theme.colors.primary.base};\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  margin-left: ${({ theme }) => theme.gridUnit * -4 - 1}px;\n  margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n  border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    margin-left: ${({ theme }) => theme.gridUnit * -4}px;\n    margin-right: ${({ theme }) => theme.gridUnit * -4}px;\n    top: 0;\n    background: white;\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\n\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Configuration'),\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping'),\n  },\n};\n\nconst FilterPanels = {\n  basic: {\n    key: 'basic',\n    name: t('Basic'),\n  },\n  advanced: {\n    key: 'advanced',\n    name: t('Advanced'),\n  },\n};\n\nexport interface FiltersConfigFormProps {\n  filterId: string;\n  filterToEdit?: Filter;\n  removedFilters: Record<string, FilterRemoval>;\n  restoreFilter: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  parentFilters: { id: string; title: string }[];\n  setErroredFilters: (f: (filters: string[]) => string[]) => void;\n}\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n\nconst BASIC_CONTROL_ITEMS = ['enableEmptyFilter', 'multiSelect'];\n\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by'),\n};\n\nconst localCache = new Map<string, any>();\n\nconst cachedSupersetGet = cacheWrapper(\n  SupersetClient.get,\n  localCache,\n  ({ endpoint }) => endpoint || '',\n);\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (\n  {\n    filterId,\n    filterToEdit,\n    removedFilters,\n    restoreFilter,\n    form,\n    parentFilters,\n    setErroredFilters,\n  }: FiltersConfigFormProps,\n  ref: React.RefObject<any>,\n) => {\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState<string>('');\n  const [metrics, setMetrics] = useState<Metric[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    FilterTabs.configuration.key,\n  );\n  const [activeFilterPanelKey, setActiveFilterPanelKey] = useState<\n    string | string[] | undefined\n  >();\n  const [undoFormValues, setUndoFormValues] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const forceUpdate = useForceUpdate();\n  const [datasetDetails, setDatasetDetails] = useState<Record<string, any>>();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const formValues = form.getFieldValue('filters')?.[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n\n  const parentFilterOptions = useMemo(\n    () =>\n      parentFilters.map(filter => ({\n        value: filter.id,\n        label: filter.title,\n      })),\n    [parentFilters],\n  );\n\n  const parentId =\n    formFilter?.parentFilter?.value || filterToEdit?.cascadeParentIds?.[0];\n\n  const parentFilter = parentFilterOptions.find(\n    ({ value }) => value === parentId,\n  );\n\n  const hasParentFilter = !!parentFilter;\n\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n    // @ts-ignore\n    .filter(([, { value }]) =>\n      value.behaviors?.includes(Behavior.NATIVE_FILTER),\n    )\n    .map(([key]) => key);\n\n  const loadedDatasets = useSelector<RootState, DatasourcesState>(\n    ({ datasources }) => datasources,\n  );\n\n  const charts = useSelector<RootState, ChartsState>(({ charts }) => charts);\n\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(\n    () =>\n      Object.values(loadedDatasets).some(dataset =>\n        hasTemporalColumns(dataset),\n      ),\n    [loadedDatasets],\n  );\n\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find(\n      dataset => dataset.id === formFilter?.dataset?.value,\n    );\n\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter?.dataset?.value, loadedDatasets]);\n\n  // @ts-ignore\n  const hasDataset = !!nativeFilterItems[formFilter?.filterType]?.value\n    ?.datasourceCount;\n\n  const datasetId =\n    formFilter?.dataset?.value ??\n    filterToEdit?.targets[0]?.datasetId ??\n    mostUsedDataset(loadedDatasets, charts);\n\n  const { controlItems = {}, mainControlItems = {} } = formFilter\n    ? getControlItemsMap({\n        datasetId,\n        disabled: false,\n        forceUpdate,\n        form,\n        filterId,\n        filterType: formFilter?.filterType,\n        filterToEdit,\n        formFilter,\n        removed: isRemoved,\n      })\n    : {};\n  const hasColumn = !!mainControlItems.groupby;\n\n  const nativeFilterItem = nativeFilterItems[formFilter?.filterType] ?? {};\n  // @ts-ignore\n  const enableNoResults = !!nativeFilterItem.value?.enableNoResults;\n\n  const hasMetrics = hasColumn && !!metrics.length;\n\n  const hasFilledDataset =\n    !hasDataset || (datasetId && (formFilter?.column || !hasColumn));\n\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(\n    formFilter?.filterType,\n  );\n\n  const isCascadingFilter = CASCADING_FILTERS.includes(formFilter?.filterType);\n\n  const isDataDirty = formFilter?.isDataDirty ?? true;\n\n  const setNativeFilterFieldValuesWrapper = (values: object) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError('');\n    forceUpdate();\n  };\n\n  const setErrorWrapper = (error: string) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null,\n    });\n    setError(error);\n    forceUpdate();\n  };\n\n  const refreshHandler = useCallback(\n    (force = false) => {\n      if (!hasDataset || !formFilter?.dataset?.value) {\n        forceUpdate();\n        return;\n      }\n      const formData = getFormData({\n        datasetId: formFilter?.dataset?.value,\n        groupby: formFilter?.column,\n        ...formFilter,\n      });\n      setNativeFilterFieldValuesWrapper({\n        defaultValueQueriesData: null,\n        isDataDirty: false,\n      });\n      getChartDataRequest({\n        formData,\n        force,\n        requestParams: { dashboardId: 0 },\n      })\n        .then(({ response, json }) => {\n          if (isFeatureEnabled(FeatureFlag.GLOBAL_ASYNC_QUERIES)) {\n            // deal with getChartDataRequest transforming the response data\n            const result = 'result' in json ? json.result[0] : json;\n\n            if (response.status === 200) {\n              setNativeFilterFieldValuesWrapper({\n                defaultValueQueriesData: [result],\n              });\n            } else if (response.status === 202) {\n              waitForAsyncData(result)\n                .then((asyncResult: ChartDataResponseResult[]) => {\n                  setNativeFilterFieldValuesWrapper({\n                    defaultValueQueriesData: asyncResult,\n                  });\n                })\n                .catch((error: ClientErrorObject) => {\n                  setError(\n                    error.message || error.error || t('Check configuration'),\n                  );\n                });\n            } else {\n              throw new Error(\n                `Received unexpected response status (${response.status}) while fetching chart data`,\n              );\n            }\n          } else {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: json.result,\n            });\n          }\n        })\n        .catch((error: Response) => {\n          error.json().then(body => {\n            setErrorWrapper(\n              body.message || error.statusText || t('Check configuration'),\n            );\n          });\n        });\n    },\n    [filterId, forceUpdate, form, formFilter, hasDataset],\n  );\n\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter?.column : undefined,\n    ...formFilter,\n  });\n\n  const [\n    hasDefaultValue,\n    isRequired,\n    defaultValueTooltip,\n    setHasDefaultValue,\n  ] = useDefaultValue(formFilter, filterToEdit);\n\n  const showDataset =\n    !datasetId || datasetDetails || formFilter?.dataset?.label;\n\n  const formChanged = useCallback(() => {\n    form.setFields([\n      {\n        name: 'changed',\n        value: true,\n      },\n    ]);\n  }, [form]);\n\n  const updateFormValues = useCallback(\n    (values: any) => {\n      setNativeFilterFieldValues(form, filterId, values);\n      formChanged();\n    },\n    [filterId, form, formChanged],\n  );\n\n  const hasPreFilter =\n    !!formFilter?.adhoc_filters ||\n    !!formFilter?.time_range ||\n    !!filterToEdit?.adhoc_filters?.length ||\n    !!filterToEdit?.time_range;\n\n  const hasSorting =\n    typeof formFilter?.controlValues?.sortAscending === 'boolean' ||\n    typeof filterToEdit?.controlValues?.sortAscending === 'boolean';\n\n  let sort = filterToEdit?.controlValues?.sortAscending;\n  if (typeof formFilter?.controlValues?.sortAscending === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n\n  const showDefaultValue =\n    !hasDataset ||\n    (!isDataDirty && hasFilledDataset) ||\n    !mainControlItems.groupby;\n\n  const onSortChanged = (value: boolean | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const validatePreFilter = () =>\n    setTimeout(\n      () =>\n        form.validateFields([\n          ['filters', filterId, 'adhoc_filters'],\n          ['filters', filterId, 'time_range'],\n        ]),\n      0,\n    );\n\n  const hasTimeRange =\n    formFilter?.time_range && formFilter.time_range !== 'No filter';\n\n  const hasAdhoc = formFilter?.adhoc_filters?.length > 0;\n\n  const defaultToFirstItem = formFilter?.controlValues?.defaultToFirstItem;\n\n  const hasAdvancedSection =\n    formFilter?.filterType === 'filter_select' ||\n    formFilter?.filterType === 'filter_range';\n\n  const initialDefaultValue =\n    formFilter?.filterType === filterToEdit?.filterType\n      ? filterToEdit?.defaultDataMask\n      : null;\n\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n\n  const ParentSelect = ({\n    value,\n    ...rest\n  }: {\n    value?: { value: string | number };\n  }) => {\n    const parentId = value?.value;\n    const isParentRemoved = parentId && removedFilters[parentId];\n    let options = parentFilterOptions;\n    if (isParentRemoved) {\n      options = [\n        { label: t('(deleted)'), value: parentId as string },\n        ...parentFilterOptions,\n      ];\n    }\n    return (\n      <Select\n        ariaLabel={t('Parent filter')}\n        placeholder={t('None')}\n        options={options}\n        allowClear\n        value={parentId}\n        {...rest}\n      />\n    );\n  };\n\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}`,\n      })\n        .then((response: JsonResponse) => {\n          setMetrics(response.json?.result?.metrics);\n          const dataset = response.json?.result;\n          // modify the response to fit structure expected by AdhocFilterControl\n          dataset.type = dataset.datasource_type;\n          dataset.filter_select = true;\n          setDatasetDetails(dataset);\n        })\n        .catch((response: SupersetApiError) => {\n          addDangerToast(response.message);\n        });\n    }\n  }, [datasetId]);\n\n  useImperativeHandle(ref, () => ({\n    changeTab(tab: 'configuration' | 'scoping') {\n      setActiveTabKey(tab);\n    },\n  }));\n\n  useBackendFormUpdate(form, filterId);\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n    hasDataset,\n    hasFilledDataset,\n    hasDefaultValue,\n    isDataDirty,\n    refreshHandler,\n    showDataset,\n  ]);\n\n  useEffect(() => {\n    // Run only once when the control items are available\n    if (!activeFilterPanelKey && !isEmpty(controlItems)) {\n      const hasCheckedAdvancedControl =\n        hasParentFilter ||\n        hasPreFilter ||\n        hasSorting ||\n        Object.keys(controlItems)\n          .filter(key => !BASIC_CONTROL_ITEMS.includes(key))\n          .some(key => controlItems[key].checked);\n      setActiveFilterPanelKey(\n        hasCheckedAdvancedControl\n          ? [FilterPanels.basic.key, FilterPanels.advanced.key]\n          : FilterPanels.basic.key,\n      );\n    }\n  }, [\n    activeFilterPanelKey,\n    hasParentFilter,\n    hasPreFilter,\n    hasSorting,\n    controlItems,\n  ]);\n\n  const initiallyExcludedCharts = useMemo(() => {\n    const excluded: number[] = [];\n    if (formFilter?.dataset?.value === undefined) {\n      return [];\n    }\n\n    Object.values(charts).forEach((chart: Chart) => {\n      const chartDatasetUid = chart.formData?.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (loadedDatasets[chartDatasetUid]?.id !== formFilter?.dataset?.value) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n    JSON.stringify(charts),\n    formFilter?.dataset?.value,\n    JSON.stringify(loadedDatasets),\n  ]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n\n  if (isRemoved) {\n    return <RemovedFilter onClick={() => restoreFilter(filterId)} />;\n  }\n\n  return (\n    <StyledTabs\n      activeKey={activeTabKey}\n      onChange={activeKey => setActiveTabKey(activeKey)}\n      centered\n    >\n      <TabPane\n        tab={FilterTabs.configuration.name}\n        key={FilterTabs.configuration.key}\n        forceRender\n      >\n        <StyledContainer>\n          <StyledFormItem\n            name={['filters', filterId, 'type']}\n            hidden\n            initialValue={NativeFilterType.NATIVE_FILTER}\n          >\n            <Input />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'name']}\n            label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n            initialValue={filterToEdit?.name}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n          >\n            <Input {...getFiltersConfigModalTestId('name-input')} />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'filterType']}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n            initialValue={filterToEdit?.filterType || 'filter_select'}\n            label={<StyledLabel>{t('Filter Type')}</StyledLabel>}\n            {...getFiltersConfigModalTestId('filter-type')}\n          >\n            <Select\n              ariaLabel={t('Filter type')}\n              options={nativeFilterVizTypes.map(filterType => {\n                // @ts-ignore\n                const name = nativeFilterItems[filterType]?.value.name;\n                const mappedName = name\n                  ? FILTER_TYPE_NAME_MAPPING[name]\n                  : undefined;\n                const isDisabled =\n                  FILTER_SUPPORTED_TYPES[filterType]?.length === 1 &&\n                  FILTER_SUPPORTED_TYPES[filterType]?.includes(\n                    GenericDataType.TEMPORAL,\n                  ) &&\n                  !doLoadedDatasetsHaveTemporalColumns;\n                return {\n                  value: filterType,\n                  label: mappedName || name,\n                  customLabel: isDisabled ? (\n                    <Tooltip\n                      title={t('Datasets do not contain a temporal column')}\n                    >\n                      {mappedName || name}\n                    </Tooltip>\n                  ) : undefined,\n                  disabled: isDisabled,\n                };\n              })}\n              onChange={value => {\n                setNativeFilterFieldValues(form, filterId, {\n                  filterType: value,\n                  defaultDataMask: null,\n                  column: null,\n                });\n                forceUpdate();\n              }}\n            />\n          </StyledFormItem>\n        </StyledContainer>\n        {hasDataset && (\n          <StyledRowContainer>\n            {showDataset ? (\n              <StyledFormItem\n                name={['filters', filterId, 'dataset']}\n                label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n                initialValue={\n                  datasetDetails\n                    ? {\n                        label: datasetDetails.table_name,\n                        value: datasetDetails.id,\n                      }\n                    : undefined\n                }\n                rules={[\n                  { required: !isRemoved, message: t('Dataset is required') },\n                ]}\n                {...getFiltersConfigModalTestId('datasource-input')}\n              >\n                <DatasetSelect\n                  onChange={(value: { label: string; value: number }) => {\n                    // We need to reset the column when the dataset has changed\n                    if (value.value !== datasetId) {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dataset: value,\n                        defaultDataMask: null,\n                        column: null,\n                      });\n                    }\n                    forceUpdate();\n                  }}\n                />\n              </StyledFormItem>\n            ) : (\n              <StyledFormItem label={<StyledLabel>{t('Dataset')}</StyledLabel>}>\n                <Loading position=\"inline-centered\" />\n              </StyledFormItem>\n            )}\n            {hasDataset &&\n              Object.keys(mainControlItems).map(\n                key => mainControlItems[key].element,\n              )}\n          </StyledRowContainer>\n        )}\n        <StyledCollapse\n          activeKey={activeFilterPanelKey}\n          onChange={key => setActiveFilterPanelKey(key)}\n          expandIconPosition=\"right\"\n        >\n          <Collapse.Panel\n            forceRender\n            header={FilterPanels.basic.name}\n            key={FilterPanels.basic.key}\n          >\n            <CleanFormItem\n              name={['filters', filterId, 'defaultValueQueriesData']}\n              hidden\n              initialValue={null}\n            />\n            <CleanFormItem name={['filters', filterId, 'defaultValue']}>\n              <CollapsibleControl\n                checked={hasDefaultValue}\n                disabled={isRequired || defaultToFirstItem}\n                initialValue={hasDefaultValue}\n                title={t('Filter has default value')}\n                tooltip={defaultValueTooltip}\n                onChange={value => {\n                  setHasDefaultValue(value);\n                  formChanged();\n                }}\n              >\n                {!isRemoved && (\n                  <StyledRowSubFormItem\n                    name={['filters', filterId, 'defaultDataMask']}\n                    initialValue={initialDefaultValue}\n                    data-test=\"default-input\"\n                    label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n                    required={hasDefaultValue}\n                    rules={[\n                      {\n                        validator: () => {\n                          if (formFilter?.defaultDataMask?.filterState?.value) {\n                            // requires managing the error as the DefaultValue\n                            // component does not use an Antdesign compatible input\n                            const formValidationFields = form.getFieldsError();\n                            setErroredFilters(prevErroredFilters => {\n                              if (\n                                prevErroredFilters.length &&\n                                !formValidationFields.find(\n                                  f => f.errors.length > 0,\n                                )\n                              ) {\n                                return [];\n                              }\n                              return prevErroredFilters;\n                            });\n                            return Promise.resolve();\n                          }\n                          setErroredFilters(prevErroredFilters => {\n                            if (prevErroredFilters.includes(filterId)) {\n                              return prevErroredFilters;\n                            }\n                            return [...prevErroredFilters, filterId];\n                          });\n                          return Promise.reject(\n                            new Error(t('Default value is required')),\n                          );\n                        },\n                      },\n                    ]}\n                  >\n                    {error ? (\n                      <BasicErrorAlert\n                        title={t('Cannot load filter')}\n                        body={error}\n                        level=\"error\"\n                      />\n                    ) : showDefaultValue ? (\n                      <DefaultValueContainer>\n                        <DefaultValue\n                          setDataMask={dataMask => {\n                            if (\n                              !isEqual(\n                                initialDefaultValue?.filterState?.value,\n                                dataMask?.filterState?.value,\n                              )\n                            ) {\n                              formChanged();\n                            }\n                            setNativeFilterFieldValues(form, filterId, {\n                              defaultDataMask: dataMask,\n                            });\n                            form.validateFields([\n                              ['filters', filterId, 'defaultDataMask'],\n                            ]);\n                            forceUpdate();\n                          }}\n                          hasDefaultValue={hasDefaultValue}\n                          filterId={filterId}\n                          hasDataset={hasDataset}\n                          form={form}\n                          formData={newFormData}\n                          enableNoResults={enableNoResults}\n                        />\n                        {hasDataset && datasetId && (\n                          <Tooltip title={t('Refresh the default values')}>\n                            <RefreshIcon onClick={() => refreshHandler(true)} />\n                          </Tooltip>\n                        )}\n                      </DefaultValueContainer>\n                    ) : (\n                      t('Fill all required fields to enable \"Default Value\"')\n                    )}\n                  </StyledRowSubFormItem>\n                )}\n              </CollapsibleControl>\n            </CleanFormItem>\n            {Object.keys(controlItems)\n              .filter(key => BASIC_CONTROL_ITEMS.includes(key))\n              .map(key => controlItems[key].element)}\n          </Collapse.Panel>\n          {hasAdvancedSection && (\n            <Collapse.Panel\n              forceRender\n              header={FilterPanels.advanced.name}\n              key={FilterPanels.advanced.key}\n            >\n              {isCascadingFilter && (\n                <CleanFormItem\n                  name={['filters', filterId, 'hierarchicalFilter']}\n                >\n                  <CollapsibleControl\n                    title={t('Filter is hierarchical')}\n                    initialValue={hasParentFilter}\n                    onChange={checked => {\n                      formChanged();\n                      if (checked) {\n                        // execute after render\n                        setTimeout(\n                          () =>\n                            form.validateFields([\n                              ['filters', filterId, 'parentFilter'],\n                            ]),\n                          0,\n                        );\n                      }\n                    }}\n                  >\n                    <StyledRowSubFormItem\n                      name={['filters', filterId, 'parentFilter']}\n                      label={<StyledLabel>{t('Parent filter')}</StyledLabel>}\n                      initialValue={parentFilter}\n                      normalize={value => (value ? { value } : undefined)}\n                      data-test=\"parent-filter-input\"\n                      required\n                      rules={[\n                        {\n                          required: true,\n                          message: t('Parent filter is required'),\n                        },\n                      ]}\n                    >\n                      <ParentSelect />\n                    </StyledRowSubFormItem>\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n              {Object.keys(controlItems)\n                .filter(key => !BASIC_CONTROL_ITEMS.includes(key))\n                .map(key => controlItems[key].element)}\n              {hasDataset && hasAdditionalFilters && (\n                <CleanFormItem name={['filters', filterId, 'preFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasPreFilter}\n                    title={t('Pre-filter available values')}\n                    onChange={checked => {\n                      formChanged();\n                      if (checked) {\n                        validatePreFilter();\n                      }\n                    }}\n                  >\n                    <StyledRowSubFormItem\n                      name={['filters', filterId, 'adhoc_filters']}\n                      initialValue={filterToEdit?.adhoc_filters}\n                      required\n                      rules={[\n                        {\n                          validator: preFilterValidator,\n                        },\n                      ]}\n                    >\n                      <AdhocFilterControl\n                        columns={\n                          datasetDetails?.columns?.filter(\n                            (c: ColumnMeta) => c.filterable,\n                          ) || []\n                        }\n                        savedMetrics={datasetDetails?.metrics || []}\n                        datasource={datasetDetails}\n                        onChange={(filters: AdhocFilter[]) => {\n                          setNativeFilterFieldValues(form, filterId, {\n                            adhoc_filters: filters,\n                          });\n                          forceUpdate();\n                          validatePreFilter();\n                        }}\n                        label={\n                          <span>\n                            <StyledLabel>{t('Pre-filter')}</StyledLabel>\n                            {!hasTimeRange && <StyledAsterisk />}\n                          </span>\n                        }\n                      />\n                    </StyledRowSubFormItem>\n                    {showTimeRangePicker && (\n                      <StyledRowFormItem\n                        name={['filters', filterId, 'time_range']}\n                        label={<StyledLabel>{t('Time range')}</StyledLabel>}\n                        initialValue={filterToEdit?.time_range || 'No filter'}\n                        required={!hasAdhoc}\n                        rules={[\n                          {\n                            validator: preFilterValidator,\n                          },\n                        ]}\n                      >\n                        <DateFilterControl\n                          name=\"time_range\"\n                          endpoints={['inclusive', 'exclusive']}\n                          onChange={timeRange => {\n                            setNativeFilterFieldValues(form, filterId, {\n                              time_range: timeRange,\n                            });\n                            forceUpdate();\n                            validatePreFilter();\n                          }}\n                        />\n                      </StyledRowFormItem>\n                    )}\n                    {hasTimeRange && (\n                      <StyledRowFormItem\n                        name={['filters', filterId, 'granularity_sqla']}\n                        label={\n                          <>\n                            <StyledLabel>{t('Time column')}</StyledLabel>&nbsp;\n                            <InfoTooltipWithTrigger\n                              placement=\"top\"\n                              tooltip={t(\n                                'Optional time column if time range should apply to another column than the default time column',\n                              )}\n                            />\n                          </>\n                        }\n                        initialValue={filterToEdit?.granularity_sqla}\n                      >\n                        <ColumnSelect\n                          allowClear\n                          form={form}\n                          formField=\"granularity_sqla\"\n                          filterId={filterId}\n                          filterValues={(column: Column) => !!column.is_dttm}\n                          datasetId={datasetId}\n                          onChange={column => {\n                            // We need reset default value when when column changed\n                            setNativeFilterFieldValues(form, filterId, {\n                              granularity_sqla: column,\n                            });\n                            forceUpdate();\n                          }}\n                        />\n                      </StyledRowFormItem>\n                    )}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n              {formFilter?.filterType !== 'filter_range' && (\n                <CleanFormItem name={['filters', filterId, 'sortFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasSorting}\n                    title={t('Sort filter values')}\n                    onChange={checked => {\n                      onSortChanged(checked || undefined);\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'sortAscending',\n                      ]}\n                      initialValue={sort}\n                      label={<StyledLabel>{t('Sort type')}</StyledLabel>}\n                    >\n                      <Radio.Group\n                        onChange={value => {\n                          onSortChanged(value.target.value);\n                        }}\n                      >\n                        <Radio value>{t('Sort ascending')}</Radio>\n                        <Radio value={false}>{t('Sort descending')}</Radio>\n                      </Radio.Group>\n                    </StyledRowFormItem>\n                    {hasMetrics && (\n                      <StyledRowSubFormItem\n                        name={['filters', filterId, 'sortMetric']}\n                        initialValue={filterToEdit?.sortMetric}\n                        label={\n                          <>\n                            <StyledLabel>{t('Sort Metric')}</StyledLabel>&nbsp;\n                            <InfoTooltipWithTrigger\n                              placement=\"top\"\n                              tooltip={t(\n                                'If a metric is specified, sorting will be done based on the metric value',\n                              )}\n                            />\n                          </>\n                        }\n                        data-test=\"field-input\"\n                      >\n                        <Select\n                          allowClear\n                          ariaLabel={t('Sort metric')}\n                          name=\"sortMetric\"\n                          options={metrics.map((metric: Metric) => ({\n                            value: metric.metric_name,\n                            label: metric.verbose_name ?? metric.metric_name,\n                          }))}\n                          onChange={value => {\n                            if (value !== undefined) {\n                              setNativeFilterFieldValues(form, filterId, {\n                                sortMetric: value,\n                              });\n                              forceUpdate();\n                            }\n                          }}\n                        />\n                      </StyledRowSubFormItem>\n                    )}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n            </Collapse.Panel>\n          )}\n        </StyledCollapse>\n      </TabPane>\n      <TabPane\n        tab={FilterTabs.scoping.name}\n        key={FilterTabs.scoping.key}\n        forceRender\n      >\n        <FilterScope\n          updateFormValues={updateFormValues}\n          pathToFormValue={['filters', filterId]}\n          forceUpdate={forceUpdate}\n          filterScope={filterToEdit?.scope}\n          formFilterScope={formFilter?.scope}\n          formScopingType={formFilter?.scoping}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      </TabPane>\n    </StyledTabs>\n  );\n};\n\nexport default forwardRef<typeof FiltersConfigForm, FiltersConfigFormProps>(\n  FiltersConfigForm,\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}