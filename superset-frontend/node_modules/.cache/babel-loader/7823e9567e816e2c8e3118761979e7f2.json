{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useRef } from 'react';\nexport const useComponentDidUpdate = (effect) => {\n  const isMountedRef = useRef(false);\n  useEffect(() => {\n    if (isMountedRef.current) {\n      effect();\n    } else\n    {\n      isMountedRef.current = true;\n    }\n  }, [effect]);\n};__signature__(useComponentDidUpdate, \"useRef{isMountedRef}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useComponentDidUpdate, \"useComponentDidUpdate\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/common/hooks/useComponentDidUpdate/useComponentDidUpdate.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/common/hooks/useComponentDidUpdate/useComponentDidUpdate.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAyB,SAAzB,EAAoC,MAApC,QAAkD,OAAlD;AAEA,OAAO,MAAM,qBAAqB,GAAG,CAAC,MAAD,KAA2B;AAC9D,QAAM,YAAY,GAAG,MAAM,CAAC,KAAD,CAA3B;AACA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,YAAY,CAAC,OAAjB,EAA0B;AACxB,MAAA,MAAM;AACP,KAFD;AAEO;AACL,MAAA,YAAY,CAAC,OAAb,GAAuB,IAAvB;AACD;AACF,GANQ,EAMN,CAAC,MAAD,CANM,CAAT;AAOD,CATM,C,cAAM,qB,wNAAA,qB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { EffectCallback, useEffect, useRef } from 'react';\n\nexport const useComponentDidUpdate = (effect: EffectCallback) => {\n  const isMountedRef = useRef(false);\n  useEffect(() => {\n    if (isMountedRef.current) {\n      effect();\n    } else {\n      isMountedRef.current = true;\n    }\n  }, [effect]);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}