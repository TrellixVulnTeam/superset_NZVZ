{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({ entitiesMap, source, destination }) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.id === destination.id) {\n    const reordered = reorder(current, source.index, destination.index);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered } };\n\n\n\n    return result;\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(destination.index, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current },\n\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next } };\n\n\n\n  return result;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reorder, \"reorder\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/dnd-reorder.js\");reactHotLoader.register(reorderItem, \"reorderItem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/dnd-reorder.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/dnd-reorder.js"],"names":["reorder","list","startIndex","endIndex","result","removed","splice","reorderItem","entitiesMap","source","destination","current","id","children","next","target","index","reordered"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6C;AAClD,QAAMC,MAAM,GAAG,CAAC,GAAGH,IAAJ,CAAf;AACA,QAAM,CAACI,OAAD,IAAYD,MAAM,CAACE,MAAP,CAAcJ,UAAd,EAA0B,CAA1B,CAAlB;AACAE,EAAAA,MAAM,CAACE,MAAP,CAAcH,QAAd,EAAwB,CAAxB,EAA2BE,OAA3B;;AAEA,SAAOD,MAAP;AACD;;AAED,eAAe,SAASG,WAAT,CAAqB,EAAEC,WAAF,EAAeC,MAAf,EAAuBC,WAAvB,EAArB,EAA2D;AACxE,QAAMC,OAAO,GAAG,CAAC,GAAGH,WAAW,CAACC,MAAM,CAACG,EAAR,CAAX,CAAuBC,QAA3B,CAAhB;AACA,QAAMC,IAAI,GAAG,CAAC,GAAGN,WAAW,CAACE,WAAW,CAACE,EAAb,CAAX,CAA4BC,QAAhC,CAAb;AACA,QAAME,MAAM,GAAGJ,OAAO,CAACF,MAAM,CAACO,KAAR,CAAtB;;AAEA;AACA,MAAIP,MAAM,CAACG,EAAP,KAAcF,WAAW,CAACE,EAA9B,EAAkC;AAChC,UAAMK,SAAS,GAAGjB,OAAO,CAACW,OAAD,EAAUF,MAAM,CAACO,KAAjB,EAAwBN,WAAW,CAACM,KAApC,CAAzB;;AAEA,UAAMZ,MAAM,GAAG;AACb,SAAGI,WADU;AAEb,OAACC,MAAM,CAACG,EAAR,GAAa;AACX,WAAGJ,WAAW,CAACC,MAAM,CAACG,EAAR,CADH;AAEXC,QAAAA,QAAQ,EAAEI,SAFC,EAFA,EAAf;;;;AAQA,WAAOb,MAAP;AACD;;AAED;AACAO,EAAAA,OAAO,CAACL,MAAR,CAAeG,MAAM,CAACO,KAAtB,EAA6B,CAA7B,EArBwE,CAqBvC;AACjCF,EAAAA,IAAI,CAACR,MAAL,CAAYI,WAAW,CAACM,KAAxB,EAA+B,CAA/B,EAAkCD,MAAlC,EAtBwE,CAsB7B;;AAE3C,QAAMX,MAAM,GAAG;AACb,OAAGI,WADU;AAEb,KAACC,MAAM,CAACG,EAAR,GAAa;AACX,SAAGJ,WAAW,CAACC,MAAM,CAACG,EAAR,CADH;AAEXC,MAAAA,QAAQ,EAAEF,OAFC,EAFA;;AAMb,KAACD,WAAW,CAACE,EAAb,GAAkB;AAChB,SAAGJ,WAAW,CAACE,WAAW,CAACE,EAAb,CADE;AAEhBC,MAAAA,QAAQ,EAAEC,IAFM,EANL,EAAf;;;;AAYA,SAAOV,MAAP;AACD,C,iLA7CeJ,O,4HAQQO,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({ entitiesMap, source, destination }) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.id === destination.id) {\n    const reordered = reorder(current, source.index, destination.index);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered,\n      },\n    };\n\n    return result;\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(destination.index, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current,\n    },\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next,\n    },\n  };\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}