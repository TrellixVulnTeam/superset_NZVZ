{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport debounce from 'lodash/debounce';\nimport { Input } from 'src/common/components';\nimport { BOOL_FALSE_DISPLAY, BOOL_TRUE_DISPLAY, SLOW_DEBOUNCE } from 'src/constants';\nimport Button from 'src/components/Button';\nimport { applyFormattingToTabularData, prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst CopyNode = ___EmotionJSX(CopyButton, { buttonSize: \"xsmall\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 40, columnNumber: 19 } },\n___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 41, columnNumber: 5 } }));\n\nexport const CopyToClipboardButton = ({ data, columns }) => ___EmotionJSX(CopyToClipboard, { text: data && columns ? prepareCopyToClipboardTabularData(data, columns) : '', wrapped: false, copyNode: CopyNode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 43, columnNumber: 63 } });\nexport const FilterInput = ({ onChangeHandler }) => {\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return ___EmotionJSX(Input, { placeholder: t('Search'), onChange: (event) => {\n      const filterText = event.target.value;\n      debouncedChangeHandler(filterText);\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 46, columnNumber: 13 } });\n};\nexport const RowCount = ({ data, loading }) => {var _data$length;return ___EmotionJSX(RowCountLabel, { rowcount: (_data$length = data == null ? void 0 : data.length) != null ? _data$length : 0, loading: loading, suffix: t('rows retrieved'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 51, columnNumber: 50 } });};\nexport const useFilteredTableData = (filterText, data) => useMemo(() => {\n  if (!(data != null && data.length)) {\n    return [];\n  }\n  const formattedData = applyFormattingToTabularData(data);\n  return formattedData.filter((row) => Object.values(row).some((value) => value == null ? void 0 : value.toString().toLowerCase().includes(filterText.toLowerCase())));\n}, [data, filterText]);__signature__(useFilteredTableData, \"useMemo{}\");\nexport const useTableColumns = (colnames, data, moreConfigs) => useMemo(() => colnames && data != null && data.length ?\ncolnames.\nfilter((column) => Object.keys(data[0]).includes(column)).\nmap((key) => ({\n  accessor: (row) => row[key],\n  Header: key,\n  Cell: ({ value }) => {\n    if (value === true) {\n      return BOOL_TRUE_DISPLAY;\n    }\n    if (value === false) {\n      return BOOL_FALSE_DISPLAY;\n    }\n    return String(value);\n  },\n  ...(moreConfigs == null ? void 0 : moreConfigs[key]) })) :\n\n[], [data, moreConfigs]);__signature__(useTableColumns, \"useMemo{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CopyButton, \"CopyButton\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyNode, \"CopyNode\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyToClipboardButton, \"CopyToClipboardButton\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FilterInput, \"FilterInput\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(RowCount, \"RowCount\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useFilteredTableData, \"useFilteredTableData\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useTableColumns, \"useTableColumns\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Column } from 'react-table';\nimport debounce from 'lodash/debounce';\nimport { Input } from 'src/common/components';\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport Button from 'src/components/Button';\nimport {\n  applyFormattingToTabularData,\n  prepareCopyToClipboardTabularData,\n} from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\n\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst CopyNode = (\n  <CopyButton buttonSize=\"xsmall\">\n    <i className=\"fa fa-clipboard\" />\n  </CopyButton>\n);\n\nexport const CopyToClipboardButton = ({\n  data,\n  columns,\n}: {\n  data?: Record<string, any>;\n  columns?: string[];\n}) => (\n  <CopyToClipboard\n    text={\n      data && columns ? prepareCopyToClipboardTabularData(data, columns) : ''\n    }\n    wrapped={false}\n    copyNode={CopyNode}\n  />\n);\n\nexport const FilterInput = ({\n  onChangeHandler,\n}: {\n  onChangeHandler(filterText: string): void;\n}) => {\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return (\n    <Input\n      placeholder={t('Search')}\n      onChange={(event: any) => {\n        const filterText = event.target.value;\n        debouncedChangeHandler(filterText);\n      }}\n    />\n  );\n};\n\nexport const RowCount = ({\n  data,\n  loading,\n}: {\n  data?: Record<string, any>[];\n  loading: boolean;\n}) => (\n  <RowCountLabel\n    rowcount={data?.length ?? 0}\n    loading={loading}\n    suffix={t('rows retrieved')}\n  />\n);\n\nexport const useFilteredTableData = (\n  filterText: string,\n  data?: Record<string, any>[],\n) =>\n  useMemo(() => {\n    if (!data?.length) {\n      return [];\n    }\n    const formattedData = applyFormattingToTabularData(data);\n    return formattedData.filter((row: Record<string, any>) =>\n      Object.values(row).some(value =>\n        value?.toString().toLowerCase().includes(filterText.toLowerCase()),\n      ),\n    );\n  }, [data, filterText]);\n\nexport const useTableColumns = (\n  colnames?: string[],\n  data?: Record<string, any>[],\n  moreConfigs?: { [key: string]: Partial<Column> },\n) =>\n  useMemo(\n    () =>\n      colnames && data?.length\n        ? colnames\n            .filter((column: string) => Object.keys(data[0]).includes(column))\n            .map(\n              key =>\n                ({\n                  accessor: row => row[key],\n                  Header: key,\n                  Cell: ({ value }) => {\n                    if (value === true) {\n                      return BOOL_TRUE_DISPLAY;\n                    }\n                    if (value === false) {\n                      return BOOL_FALSE_DISPLAY;\n                    }\n                    return String(value);\n                  },\n                  ...moreConfigs?.[key],\n                } as Column),\n            )\n        : [],\n    [data, moreConfigs],\n  );\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}