{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, (child) => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/React.cloneElement(newChild, {\n        children: recurseReactClone(\n        newChild.props.children,\n        type,\n        propExtender) });\n\n\n    }\n    return newChild;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/utils.js\");reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/CRUD/utils.js"],"names":["recurseReactClone","newChild","child","type","React","propExtender","children"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAO,SAAA,iBAAA,CAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAyD;AAC9D;AACF;AACA;AACA;AACE,SAAO,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,CAAA,KAAA,KAAS;AAC3C,QAAIC,QAAQ,GAAZ,KAAA;AACA,QAAIC,KAAK,IAAIA,KAAK,CAALA,IAAAA,CAAAA,IAAAA,KAAoBC,IAAI,CAArC,IAAA,EAA4C;AAC1CF,MAAAA,QAAQ,GAAA,aAAGG,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAA0BC,YAAY,CAAjDJ,KAAiD,CAAtCG,CAAXH;AACD;AACD,QAAIA,QAAQ,IAAIA,QAAQ,CAARA,KAAAA,CAAhB,QAAA,EAAyC;AACvCA,MAAAA,QAAQ,GAAA,aAAG,KAAK,CAAL,YAAA,CAAA,QAAA,EAA6B;AACtCK,QAAAA,QAAQ,EAAEN,iBAAiB;AACzBC,QAAAA,QAAQ,CAARA,KAAAA,CADyB,QAAA;AAAA,QAAA,IAAA;AAD7BA,QAAAA,YAC6B,CADW,EAA7B,CAAXA;;;AAOD;AACD,WAAA,QAAA;AAdF,GAAO,CAAP;kLALcD,iB,ujBAAT,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport function recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return React.Children.map(children, child => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = React.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = React.cloneElement(newChild, {\n        children: recurseReactClone(\n          newChild.props.children,\n          type,\n          propExtender,\n        ),\n      });\n    }\n    return newChild;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}