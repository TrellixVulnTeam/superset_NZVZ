{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Switch, Select, Button } from 'src/common/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { DeleteFilled, CloseOutlined } from '@ant-design/icons';\nimport { formScrollableStyles, validatedFormStyles, CredentialInfoForm, toggleStyle, infoTooltip, StyledFooterButton, StyledCatalogTable, labelMarginBotton } from './styles';\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";export const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info' };\n\nvar CredentialInfoOptions;\n(function (CredentialInfoOptions) {\n  CredentialInfoOptions[CredentialInfoOptions[\"jsonUpload\"] = 0] = \"jsonUpload\";\n  CredentialInfoOptions[CredentialInfoOptions[\"copyPaste\"] = 1] = \"copyPaste\";\n})(CredentialInfoOptions || (CredentialInfoOptions = {}));\nconst castStringToBoolean = (optionValue) => optionValue === 'true';\nexport const FormFieldOrder = [\n'host',\n'port',\n'database',\n'username',\n'password',\n'database_name',\n'credentials_info',\n'service_account_info',\n'catalog',\n'query',\n'encryption'];var _ref = process.env.NODE_ENV === \"production\" ? { name: \"s5xdrg\", styles: \"display:flex;align-items:center\" } : { name: \"1s62nco-CredentialsInfo\", styles: \"display:flex;align-items:center;label:CredentialsInfo;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9teV9wbHVnaW4vc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL3ZpZXdzL0NSVUQvZGF0YS9kYXRhYmFzZS9EYXRhYmFzZU1vZGFsL0RhdGFiYXNlQ29ubmVjdGlvbkZvcm0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9HaUIiLCJmaWxlIjoiL2hvbWUvdWJ1bnR1L215X3BsdWdpbi9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvdmlld3MvQ1JVRC9kYXRhL2RhdGFiYXNlL0RhdGFiYXNlTW9kYWwvRGF0YWJhc2VDb25uZWN0aW9uRm9ybS50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgU3dpdGNoLCBTZWxlY3QsIEJ1dHRvbiB9IGZyb20gJ3NyYy9jb21tb24vY29tcG9uZW50cyc7XG5pbXBvcnQgSW5mb1Rvb2x0aXAgZnJvbSAnc3JjL2NvbXBvbmVudHMvSW5mb1Rvb2x0aXAnO1xuaW1wb3J0IFZhbGlkYXRlZElucHV0IGZyb20gJ3NyYy9jb21wb25lbnRzL0Zvcm0vTGFiZWxlZEVycm9yQm91bmRJbnB1dCc7XG5pbXBvcnQgRm9ybUxhYmVsIGZyb20gJ3NyYy9jb21wb25lbnRzL0Zvcm0vRm9ybUxhYmVsJztcbmltcG9ydCB7IERlbGV0ZUZpbGxlZCwgQ2xvc2VPdXRsaW5lZCB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zJztcbmltcG9ydCB7IGZvcm1TY3JvbGxhYmxlU3R5bGVzLCB2YWxpZGF0ZWRGb3JtU3R5bGVzLCBDcmVkZW50aWFsSW5mb0Zvcm0sIHRvZ2dsZVN0eWxlLCBpbmZvVG9vbHRpcCwgU3R5bGVkRm9vdGVyQnV0dG9uLCBTdHlsZWRDYXRhbG9nVGFibGUsIGxhYmVsTWFyZ2luQm90dG9uLCB9IGZyb20gJy4vc3R5bGVzJztcbi8vIFRoZXNlIGFyZSB0aGUgY29sdW1ucyB0aGF0IGFyZSBnb2luZyB0byBiZSBhZGRlZCB0byBlbmNyeXB0ZWQgZXh0cmEsIHRoZXkgZGlmZmVyIGluIG5hbWUgYmFzZWRcbi8vIG9uIHRoZSBlbmdpbmUsIGhvd2V2ZXIgd2Ugd2FudCB0byB1c2UgdGhlIHNhbWUgY29tcG9uZW50IGZvciBlYWNoIG9mIHRoZW0uIE1ha2Ugc3VyZSB0byBhZGQgdGhlXG4vLyB0aGUgZW5naW5lIHNwZWNpZmljIG5hbWUgaGVyZS5cbmV4cG9ydCBjb25zdCBlbmNyeXB0ZWRDcmVkZW50aWFsc01hcCA9IHtcbiAgICBnc2hlZXRzOiAnc2VydmljZV9hY2NvdW50X2luZm8nLFxuICAgIGJpZ3F1ZXJ5OiAnY3JlZGVudGlhbHNfaW5mbycsXG59O1xudmFyIENyZWRlbnRpYWxJbmZvT3B0aW9ucztcbihmdW5jdGlvbiAoQ3JlZGVudGlhbEluZm9PcHRpb25zKSB7XG4gICAgQ3JlZGVudGlhbEluZm9PcHRpb25zW0NyZWRlbnRpYWxJbmZvT3B0aW9uc1tcImpzb25VcGxvYWRcIl0gPSAwXSA9IFwianNvblVwbG9hZFwiO1xuICAgIENyZWRlbnRpYWxJbmZvT3B0aW9uc1tDcmVkZW50aWFsSW5mb09wdGlvbnNbXCJjb3B5UGFzdGVcIl0gPSAxXSA9IFwiY29weVBhc3RlXCI7XG59KShDcmVkZW50aWFsSW5mb09wdGlvbnMgfHwgKENyZWRlbnRpYWxJbmZvT3B0aW9ucyA9IHt9KSk7XG5jb25zdCBjYXN0U3RyaW5nVG9Cb29sZWFuID0gKG9wdGlvblZhbHVlKSA9PiBvcHRpb25WYWx1ZSA9PT0gJ3RydWUnO1xuZXhwb3J0IGNvbnN0IEZvcm1GaWVsZE9yZGVyID0gW1xuICAgICdob3N0JyxcbiAgICAncG9ydCcsXG4gICAgJ2RhdGFiYXNlJyxcbiAgICAndXNlcm5hbWUnLFxuICAgICdwYXNzd29yZCcsXG4gICAgJ2RhdGFiYXNlX25hbWUnLFxuICAgICdjcmVkZW50aWFsc19pbmZvJyxcbiAgICAnc2VydmljZV9hY2NvdW50X2luZm8nLFxuICAgICdjYXRhbG9nJyxcbiAgICAncXVlcnknLFxuICAgICdlbmNyeXB0aW9uJyxcbl07XG5jb25zdCBDcmVkZW50aWFsc0luZm8gPSAoeyBjaGFuZ2VNZXRob2RzLCBpc0VkaXRNb2RlLCBkYiwgZWRpdE5ld0RiLCB9KSA9PiB7XG4gICAgY29uc3QgW3VwbG9hZE9wdGlvbiwgc2V0VXBsb2FkT3B0aW9uXSA9IHVzZVN0YXRlKENyZWRlbnRpYWxJbmZvT3B0aW9ucy5qc29uVXBsb2FkLnZhbHVlT2YoKSk7XG4gICAgY29uc3QgW2ZpbGVUb1VwbG9hZCwgc2V0RmlsZVRvVXBsb2FkXSA9IHVzZVN0YXRlKG51bGwpO1xuICAgIGNvbnN0IFtpc1B1YmxpYywgc2V0SXNQdWJsaWNdID0gdXNlU3RhdGUodHJ1ZSk7XG4gICAgY29uc3Qgc2hvd0NyZWRlbnRpYWxzSW5mbyA9IGRiPy5lbmdpbmUgPT09ICdnc2hlZXRzJyA/ICFpc0VkaXRNb2RlICYmICFpc1B1YmxpYyA6ICFpc0VkaXRNb2RlO1xuICAgIC8vIGEgZGF0YWJhc2UgdGhhdCBoYXMgYW4gb3B0aW9uYWwgZW5jcnlwdGVkIGZpZWxkIGhhcyBhbiBlbmNyeXB0ZWRfZXh0cmEgdGhhdCBpcyBhbiBlbXB0eSBvYmplY3QsIHRoaXMgY2hlY2tzIGZvciB0aGF0LlxuICAgIGNvbnN0IGlzRW5jcnlwdGVkID0gaXNFZGl0TW9kZSAmJiBkYj8uZW5jcnlwdGVkX2V4dHJhICE9PSAne30nO1xuICAgIGNvbnN0IGVuY3J5cHRlZEZpZWxkID0gZGI/LmVuZ2luZSAmJiBlbmNyeXB0ZWRDcmVkZW50aWFsc01hcFtkYi5lbmdpbmVdO1xuICAgIGNvbnN0IGVuY3J5cHRlZFZhbHVlID0gdHlwZW9mIGRiPy5wYXJhbWV0ZXJzPy5bZW5jcnlwdGVkRmllbGRdID09PSAnb2JqZWN0J1xuICAgICAgICA/IEpTT04uc3RyaW5naWZ5KGRiPy5wYXJhbWV0ZXJzPy5bZW5jcnlwdGVkRmllbGRdKVxuICAgICAgICA6IGRiPy5wYXJhbWV0ZXJzPy5bZW5jcnlwdGVkRmllbGRdO1xuICAgIHJldHVybiAoPENyZWRlbnRpYWxJbmZvRm9ybT5cbiAgICAgIHtkYj8uZW5naW5lID09PSAnZ3NoZWV0cycgJiYgKDxkaXYgY2xhc3NOYW1lPVwiY2F0YWxvZy10eXBlLXNlbGVjdFwiPlxuICAgICAgICAgIDxGb3JtTGFiZWwgY3NzPXsodGhlbWUpID0+IGxhYmVsTWFyZ2luQm90dG9uKHRoZW1lKX0gcmVxdWlyZWQ+XG4gICAgICAgICAgICB7dCgnVHlwZSBvZiBHb29nbGUgU2hlZXRzIGFsbG93ZWQnKX1cbiAgICAgICAgICA8L0Zvcm1MYWJlbD5cbiAgICAgICAgICA8U2VsZWN0IHN0eWxlPXt7IHdpZHRoOiAnMTAwJScgfX0gZGVmYXVsdFZhbHVlPXtpc0VuY3J5cHRlZCA/ICdmYWxzZScgOiAndHJ1ZSd9IG9uQ2hhbmdlPXsodmFsdWUpID0+IHNldElzUHVibGljKGNhc3RTdHJpbmdUb0Jvb2xlYW4odmFsdWUpKX0+XG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiB2YWx1ZT1cInRydWVcIiBrZXk9ezF9PlxuICAgICAgICAgICAgICB7dCgnUHVibGljbHkgc2hhcmVkIHNoZWV0cyBvbmx5Jyl9XG4gICAgICAgICAgICA8L1NlbGVjdC5PcHRpb24+XG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiB2YWx1ZT1cImZhbHNlXCIga2V5PXsyfT5cbiAgICAgICAgICAgICAge3QoJ1B1YmxpYyBhbmQgcHJpdmF0ZWx5IHNoYXJlZCBzaGVldHMnKX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICA8L1NlbGVjdD5cbiAgICAgICAgPC9kaXY+KX1cbiAgICAgIHtzaG93Q3JlZGVudGlhbHNJbmZvICYmICg8PlxuICAgICAgICAgIDxGb3JtTGFiZWwgcmVxdWlyZWQ+XG4gICAgICAgICAgICB7dCgnSG934oiCIGRvIHlvdSB3YW50IHRvIGVudGVyIHNlcnZpY2UgYWNjb3VudCBjcmVkZW50aWFscz8nKX1cbiAgICAgICAgICA8L0Zvcm1MYWJlbD5cbiAgICAgICAgICA8U2VsZWN0IGRlZmF1bHRWYWx1ZT17dXBsb2FkT3B0aW9ufSBzdHlsZT17eyB3aWR0aDogJzEwMCUnIH19IG9uQ2hhbmdlPXtvcHRpb24gPT4gc2V0VXBsb2FkT3B0aW9uKG9wdGlvbil9PlxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24gdmFsdWU9e0NyZWRlbnRpYWxJbmZvT3B0aW9ucy5qc29uVXBsb2FkfT5cbiAgICAgICAgICAgICAge3QoJ1VwbG9hZCBKU09OIGZpbGUnKX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cblxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24gdmFsdWU9e0NyZWRlbnRpYWxJbmZvT3B0aW9ucy5jb3B5UGFzdGV9PlxuICAgICAgICAgICAgICB7dCgnQ29weSBhbmQgUGFzdGUgSlNPTiBjcmVkZW50aWFscycpfVxuICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgIDwvU2VsZWN0PlxuICAgICAgICA8Lz4pfVxuICAgICAge3VwbG9hZE9wdGlvbiA9PT0gQ3JlZGVudGlhbEluZm9PcHRpb25zLmNvcHlQYXN0ZSB8fFxuICAgICAgICAgICAgaXNFZGl0TW9kZSB8fFxuICAgICAgICAgICAgZWRpdE5ld0RiID8gKDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgPEZvcm1MYWJlbCByZXF1aXJlZD57dCgnU2VydmljZSBBY2NvdW50Jyl9PC9Gb3JtTGFiZWw+XG4gICAgICAgICAgPHRleHRhcmVhIGNsYXNzTmFtZT1cImlucHV0LWZvcm1cIiBuYW1lPXtlbmNyeXB0ZWRGaWVsZH0gdmFsdWU9e2VuY3J5cHRlZFZhbHVlfSBvbkNoYW5nZT17Y2hhbmdlTWV0aG9kcy5vblBhcmFtZXRlcnNDaGFuZ2V9IHBsYWNlaG9sZGVyPVwiUGFzdGUgY29udGVudCBvZiBzZXJ2aWNlIGNyZWRlbnRpYWxzIEpTT04gZmlsZSBoZXJlXCIvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsLXBhc3RlXCI+XG4gICAgICAgICAgICB7dCgnQ29weSBhbmQgcGFzdGUgdGhlIGVudGlyZSBzZXJ2aWNlIGFjY291bnQgLmpzb24gZmlsZSBoZXJlJyl9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj4pIDogKHNob3dDcmVkZW50aWFsc0luZm8gJiYgKDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCIgY3NzPXsodGhlbWUpID0+IGluZm9Ub29sdGlwKHRoZW1lKX0+XG4gICAgICAgICAgICA8ZGl2IGNzcz17eyBkaXNwbGF5OiAnZmxleCcsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19PlxuICAgICAgICAgICAgICA8Rm9ybUxhYmVsIHJlcXVpcmVkPnt0KCdVcGxvYWQgQ3JlZGVudGlhbHMnKX08L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgPEluZm9Ub29sdGlwIHRvb2x0aXA9e3QoJ1VzZSB0aGUgSlNPTiBmaWxlIHlvdSBhdXRvbWF0aWNhbGx5IGRvd25sb2FkZWQgd2hlbiBjcmVhdGluZyB5b3VyIHNlcnZpY2UgYWNjb3VudC4nKX0gdmlld0JveD1cIjAgMCAyNCAyNFwiLz5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICB7IWZpbGVUb1VwbG9hZCAmJiAoPEJ1dHRvbiBjbGFzc05hbWU9XCJpbnB1dC11cGxvYWQtYnRuXCIgb25DbGljaz17KCkgPT4gZG9jdW1lbnQ/LmdldEVsZW1lbnRCeUlkKCdzZWxlY3RlZEZpbGUnKT8uY2xpY2soKX0+XG4gICAgICAgICAgICAgICAge3QoJ0Nob29zZSBGaWxlJyl9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPil9XG4gICAgICAgICAgICB7ZmlsZVRvVXBsb2FkICYmICg8ZGl2IGNsYXNzTmFtZT1cImlucHV0LXVwbG9hZC1jdXJyZW50XCI+XG4gICAgICAgICAgICAgICAge2ZpbGVUb1VwbG9hZH1cbiAgICAgICAgICAgICAgICA8RGVsZXRlRmlsbGVkIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0RmlsZVRvVXBsb2FkKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VNZXRob2RzLm9uUGFyYW1ldGVyc0NoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBlbmNyeXB0ZWRGaWVsZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgIDwvZGl2Pil9XG5cbiAgICAgICAgICAgIDxpbnB1dCBpZD1cInNlbGVjdGVkRmlsZVwiIGNsYXNzTmFtZT1cImlucHV0LXVwbG9hZFwiIHR5cGU9XCJmaWxlXCIgb25DaGFuZ2U9e2FzeW5jIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBmaWxlO1xuICAgICAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQuZmlsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2V0RmlsZVRvVXBsb2FkKGZpbGU/Lm5hbWUpO1xuICAgICAgICAgICAgICAgIGNoYW5nZU1ldGhvZHMub25QYXJhbWV0ZXJzQ2hhbmdlKHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZW5jcnlwdGVkRmllbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYXdhaXQgZmlsZT8udGV4dCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbGVjdGVkRmlsZScpLnZhbHVlID0gbnVsbDtcbiAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICA8L2Rpdj4pKX1cbiAgICA8L0NyZWRlbnRpYWxJbmZvRm9ybT4pO1xufTtcbmNvbnN0IFRhYmxlQ2F0YWxvZyA9ICh7IHJlcXVpcmVkLCBjaGFuZ2VNZXRob2RzLCBnZXRWYWxpZGF0aW9uLCB2YWxpZGF0aW9uRXJyb3JzLCBkYiwgfSkgPT4ge1xuICAgIGNvbnN0IHRhYmxlQ2F0YWxvZyA9IGRiPy5jYXRhbG9nIHx8IFtdO1xuICAgIGNvbnN0IGNhdGFsb2dFcnJvciA9IHZhbGlkYXRpb25FcnJvcnMgfHwge307XG4gICAgcmV0dXJuICg8U3R5bGVkQ2F0YWxvZ1RhYmxlPlxuICAgICAgPGg0IGNsYXNzTmFtZT1cImdzaGVldC10aXRsZVwiPlxuICAgICAgICB7dCgnQ29ubmVjdCBHb29nbGUgU2hlZXRzIGFzIHRhYmxlcyB0byB0aGlzIGRhdGFiYXNlJyl9XG4gICAgICA8L2g0PlxuICAgICAgPGRpdj5cbiAgICAgICAge3RhYmxlQ2F0YWxvZz8ubWFwKChzaGVldCwgaWR4KSA9PiAoPD5cbiAgICAgICAgICAgIDxGb3JtTGFiZWwgY2xhc3NOYW1lPVwiY2F0YWxvZy1sYWJlbFwiIHJlcXVpcmVkPlxuICAgICAgICAgICAgICB7dCgnR29vZ2xlIFNoZWV0IE5hbWUgYW5kIFVSTCcpfVxuICAgICAgICAgICAgPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdGFsb2ctbmFtZVwiPlxuICAgICAgICAgICAgICA8VmFsaWRhdGVkSW5wdXQgY2xhc3NOYW1lPVwiY2F0YWxvZy1uYW1lLWlucHV0XCIgcmVxdWlyZWQ9e3JlcXVpcmVkfSB2YWxpZGF0aW9uTWV0aG9kcz17eyBvbkJsdXI6IGdldFZhbGlkYXRpb24gfX0gZXJyb3JNZXNzYWdlPXtjYXRhbG9nRXJyb3JbaWR4XT8ubmFtZX0gcGxhY2Vob2xkZXI9e3QoJ0VudGVyIGEgbmFtZSBmb3IgdGhpcyBzaGVldCcpfSBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VNZXRob2RzLm9uUGFyYW1ldGVyc0NoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYGNhdGFsb2ctJHtpZHh9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICduYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH19IHZhbHVlPXtzaGVldC5uYW1lfS8+XG4gICAgICAgICAgICAgIHt0YWJsZUNhdGFsb2c/Lmxlbmd0aCA+IDEgJiYgKDxDbG9zZU91dGxpbmVkIGNsYXNzTmFtZT1cImNhdGFsb2ctZGVsZXRlXCIgb25DbGljaz17KCkgPT4gY2hhbmdlTWV0aG9kcy5vblJlbW92ZVRhYmxlQ2F0YWxvZyhpZHgpfS8+KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPFZhbGlkYXRlZElucHV0IGNsYXNzTmFtZT1cImNhdGFsb2ctbmFtZS11cmxcIiByZXF1aXJlZD17cmVxdWlyZWR9IHZhbGlkYXRpb25NZXRob2RzPXt7IG9uQmx1cjogZ2V0VmFsaWRhdGlvbiB9fSBlcnJvck1lc3NhZ2U9e2NhdGFsb2dFcnJvcltpZHhdPy51cmx9IHBsYWNlaG9sZGVyPXt0KCdQYXN0ZSB0aGUgc2hhcmVhYmxlIEdvb2dsZSBTaGVldCBVUkwgaGVyZScpfSBvbkNoYW5nZT17KGUpID0+IGNoYW5nZU1ldGhvZHMub25QYXJhbWV0ZXJzQ2hhbmdlKHtcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogYGNhdGFsb2ctJHtpZHh9YCxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3ZhbHVlJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGUudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KX0gdmFsdWU9e3NoZWV0LnZhbHVlfS8+XG4gICAgICAgICAgPC8+KSl9XG4gICAgICAgIDxTdHlsZWRGb290ZXJCdXR0b24gY2xhc3NOYW1lPVwiY2F0YWxvZy1hZGQtYnRuXCIgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgY2hhbmdlTWV0aG9kcy5vbkFkZFRhYmxlQ2F0YWxvZygpO1xuICAgICAgICB9fT5cbiAgICAgICAgICArIHt0KCdBZGQgc2hlZXQnKX1cbiAgICAgICAgPC9TdHlsZWRGb290ZXJCdXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L1N0eWxlZENhdGFsb2dUYWJsZT4pO1xufTtcbmNvbnN0IGhvc3RGaWVsZCA9ICh7IHJlcXVpcmVkLCBjaGFuZ2VNZXRob2RzLCBnZXRWYWxpZGF0aW9uLCB2YWxpZGF0aW9uRXJyb3JzLCBkYiwgfSkgPT4gKDxWYWxpZGF0ZWRJbnB1dCBpZD1cImhvc3RcIiBuYW1lPVwiaG9zdFwiIHZhbHVlPXtkYj8ucGFyYW1ldGVycz8uaG9zdH0gcmVxdWlyZWQ9e3JlcXVpcmVkfSBoYXNUb29sdGlwIHRvb2x0aXBUZXh0PXt0KCdUaGlzIGNhbiBiZSBlaXRoZXIgYW4gSVAgYWRkcmVzcyAoZS5nLiAxMjcuMC4wLjEpIG9yIGEgZG9tYWluIG5hbWUgKGUuZy4gbXlkYXRhYmFzZS5jb20pLicpfSB2YWxpZGF0aW9uTWV0aG9kcz17eyBvbkJsdXI6IGdldFZhbGlkYXRpb24gfX0gZXJyb3JNZXNzYWdlPXt2YWxpZGF0aW9uRXJyb3JzPy5ob3N0fSBwbGFjZWhvbGRlcj1cImUuZy4gMTI3LjAuMC4xXCIgY2xhc3NOYW1lPVwiZm9ybS1ncm91cC13LTUwXCIgbGFiZWw9XCJIb3N0XCIgb25DaGFuZ2U9e2NoYW5nZU1ldGhvZHMub25QYXJhbWV0ZXJzQ2hhbmdlfS8+KTtcbmNvbnN0IHBvcnRGaWVsZCA9ICh7IHJlcXVpcmVkLCBjaGFuZ2VNZXRob2RzLCBnZXRWYWxpZGF0aW9uLCB2YWxpZGF0aW9uRXJyb3JzLCBkYiwgfSkgPT4gKDw+XG4gICAgPFZhbGlkYXRlZElucHV0IGlkPVwicG9ydFwiIG5hbWU9XCJwb3J0XCIgdHlwZT1cIm51bWJlclwiIHJlcXVpcmVkPXtyZXF1aXJlZH0gdmFsdWU9e2RiPy5wYXJhbWV0ZXJzPy5wb3J0fSB2YWxpZGF0aW9uTWV0aG9kcz17eyBvbkJsdXI6IGdldFZhbGlkYXRpb24gfX0gZXJyb3JNZXNzYWdlPXt2YWxpZGF0aW9uRXJyb3JzPy5wb3J0fSBwbGFjZWhvbGRlcj1cImUuZy4gNTQzMlwiIGNsYXNzTmFtZT1cImZvcm0tZ3JvdXAtdy01MFwiIGxhYmVsPVwiUG9ydFwiIG9uQ2hhbmdlPXtjaGFuZ2VNZXRob2RzLm9uUGFyYW1ldGVyc0NoYW5nZX0vPlxuICA8Lz4pO1xuY29uc3QgZGF0YWJhc2VGaWVsZCA9ICh7IHJlcXVpcmVkLCBjaGFuZ2VNZXRob2RzLCBnZXRWYWxpZGF0aW9uLCB2YWxpZGF0aW9uRXJyb3JzLCBkYiwgfSkgPT4gKDxWYWxpZGF0ZWRJbnB1dCBpZD1cImRhdGFiYXNlXCIgbmFtZT1cImRhdGFiYXNlXCIgcmVxdWlyZWQ9e3JlcXVpcmVkfSB2YWx1ZT17ZGI/LnBhcmFtZXRlcnM/LmRhdGFiYXNlfSB2YWxpZGF0aW9uTWV0aG9kcz17eyBvbkJsdXI6IGdldFZhbGlkYXRpb24gfX0gZXJyb3JNZXNzYWdlPXt2YWxpZGF0aW9uRXJyb3JzPy5kYXRhYmFzZX0gcGxhY2Vob2xkZXI9XCJlLmcuIHdvcmxkX3BvcHVsYXRpb25cIiBsYWJlbD1cIkRhdGFiYXNlIG5hbWVcIiBvbkNoYW5nZT17Y2hhbmdlTWV0aG9kcy5vblBhcmFtZXRlcnNDaGFuZ2V9IGhlbHBUZXh0PXt0KCdDb3B5IHRoZSBuYW1lIG9mIHRoZSAgZGF0YWJhc2UgeW91IGFyZSB0cnlpbmcgdG8gY29ubmVjdCB0by4nKX0vPik7XG5jb25zdCB1c2VybmFtZUZpZWxkID0gKHsgcmVxdWlyZWQsIGNoYW5nZU1ldGhvZHMsIGdldFZhbGlkYXRpb24sIHZhbGlkYXRpb25FcnJvcnMsIGRiLCB9KSA9PiAoPFZhbGlkYXRlZElucHV0IGlkPVwidXNlcm5hbWVcIiBuYW1lPVwidXNlcm5hbWVcIiByZXF1aXJlZD17cmVxdWlyZWR9IHZhbHVlPXtkYj8ucGFyYW1ldGVycz8udXNlcm5hbWV9IHZhbGlkYXRpb25NZXRob2RzPXt7IG9uQmx1cjogZ2V0VmFsaWRhdGlvbiB9fSBlcnJvck1lc3NhZ2U9e3ZhbGlkYXRpb25FcnJvcnM/LnVzZXJuYW1lfSBwbGFjZWhvbGRlcj1cImUuZy4gQW5hbHl0aWNzXCIgbGFiZWw9XCJVc2VybmFtZVwiIG9uQ2hhbmdlPXtjaGFuZ2VNZXRob2RzLm9uUGFyYW1ldGVyc0NoYW5nZX0vPik7XG5jb25zdCBwYXNzd29yZEZpZWxkID0gKHsgcmVxdWlyZWQsIGNoYW5nZU1ldGhvZHMsIGdldFZhbGlkYXRpb24sIHZhbGlkYXRpb25FcnJvcnMsIGRiLCBpc0VkaXRNb2RlLCB9KSA9PiAoPFZhbGlkYXRlZElucHV0IGlkPVwicGFzc3dvcmRcIiBuYW1lPVwicGFzc3dvcmRcIiByZXF1aXJlZD17cmVxdWlyZWR9IHR5cGU9e2lzRWRpdE1vZGUgJiYgJ3Bhc3N3b3JkJ30gdmFsdWU9e2RiPy5wYXJhbWV0ZXJzPy5wYXNzd29yZH0gdmFsaWRhdGlvbk1ldGhvZHM9e3sgb25CbHVyOiBnZXRWYWxpZGF0aW9uIH19IGVycm9yTWVzc2FnZT17dmFsaWRhdGlvbkVycm9ycz8ucGFzc3dvcmR9IHBsYWNlaG9sZGVyPVwiZS5nLiAqKioqKioqKlwiIGxhYmVsPVwiUGFzc3dvcmRcIiBvbkNoYW5nZT17Y2hhbmdlTWV0aG9kcy5vblBhcmFtZXRlcnNDaGFuZ2V9Lz4pO1xuY29uc3QgZGlzcGxheUZpZWxkID0gKHsgY2hhbmdlTWV0aG9kcywgZ2V0VmFsaWRhdGlvbiwgdmFsaWRhdGlvbkVycm9ycywgZGIsIH0pID0+ICg8PlxuICAgIDxWYWxpZGF0ZWRJbnB1dCBpZD1cImRhdGFiYXNlX25hbWVcIiBuYW1lPVwiZGF0YWJhc2VfbmFtZVwiIHJlcXVpcmVkIHZhbHVlPXtkYj8uZGF0YWJhc2VfbmFtZX0gdmFsaWRhdGlvbk1ldGhvZHM9e3sgb25CbHVyOiBnZXRWYWxpZGF0aW9uIH19IGVycm9yTWVzc2FnZT17dmFsaWRhdGlvbkVycm9ycz8uZGF0YWJhc2VfbmFtZX0gcGxhY2Vob2xkZXI9XCJcIiBsYWJlbD17dCgnRGlzcGxheSBOYW1lJyl9IG9uQ2hhbmdlPXtjaGFuZ2VNZXRob2RzLm9uQ2hhbmdlfSBoZWxwVGV4dD17dCgnUGljayBhIG5pY2tuYW1lIGZvciB0aGlzIGRhdGFiYXNlIHRvIGRpc3BsYXkgYXMgaW4gU3VwZXJzZXQuJyl9Lz5cbiAgPC8+KTtcbmNvbnN0IHF1ZXJ5RmllbGQgPSAoeyByZXF1aXJlZCwgY2hhbmdlTWV0aG9kcywgZ2V0VmFsaWRhdGlvbiwgdmFsaWRhdGlvbkVycm9ycywgZGIsIH0pID0+ICg8VmFsaWRhdGVkSW5wdXQgaWQ9XCJxdWVyeV9pbnB1dFwiIG5hbWU9XCJxdWVyeV9pbnB1dFwiIHJlcXVpcmVkPXtyZXF1aXJlZH0gdmFsdWU9e2RiPy5xdWVyeV9pbnB1dCB8fCAnJ30gdmFsaWRhdGlvbk1ldGhvZHM9e3sgb25CbHVyOiBnZXRWYWxpZGF0aW9uIH19IGVycm9yTWVzc2FnZT17dmFsaWRhdGlvbkVycm9ycz8ucXVlcnl9IHBsYWNlaG9sZGVyPVwiZS5nLiBwYXJhbTE9dmFsdWUxJnBhcmFtMj12YWx1ZTJcIiBsYWJlbD1cIkFkZGl0aW9uYWwgUGFyYW1ldGVyc1wiIG9uQ2hhbmdlPXtjaGFuZ2VNZXRob2RzLm9uUXVlcnlDaGFuZ2V9IGhlbHBUZXh0PXt0KCdBZGQgYWRkaXRpb25hbCBjdXN0b20gcGFyYW1ldGVycycpfS8+KTtcbmNvbnN0IGZvcmNlU1NMRmllbGQgPSAoeyBpc0VkaXRNb2RlLCBjaGFuZ2VNZXRob2RzLCBkYiwgc3NsRm9yY2VkLCB9KSA9PiAoPGRpdiBjc3M9eyh0aGVtZSkgPT4gaW5mb1Rvb2x0aXAodGhlbWUpfT5cbiAgICA8U3dpdGNoIGRpc2FibGVkPXtzc2xGb3JjZWQgJiYgIWlzRWRpdE1vZGV9IGNoZWNrZWQ9e2RiPy5wYXJhbWV0ZXJzPy5lbmNyeXB0aW9uIHx8IHNzbEZvcmNlZH0gb25DaGFuZ2U9e2NoYW5nZWQgPT4ge1xuICAgICAgICBjaGFuZ2VNZXRob2RzLm9uUGFyYW1ldGVyc0NoYW5nZSh7XG4gICAgICAgICAgICB0YXJnZXQ6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAndG9nZ2xlJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZW5jcnlwdGlvbicsXG4gICAgICAgICAgICAgICAgY2hlY2tlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogY2hhbmdlZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH19Lz5cbiAgICA8c3BhbiBjc3M9e3RvZ2dsZVN0eWxlfT5TU0w8L3NwYW4+XG4gICAgPEluZm9Ub29sdGlwIHRvb2x0aXA9e3QoJ1NTTCBNb2RlIFwicmVxdWlyZVwiIHdpbGwgYmUgdXNlZC4nKX0gcGxhY2VtZW50PVwicmlnaHRcIiB2aWV3Qm94PVwiMCAtNSAyNCAyNFwiLz5cbiAgPC9kaXY+KTtcbmNvbnN0IEZPUk1fRklFTERfTUFQID0ge1xuICAgIGhvc3Q6IGhvc3RGaWVsZCxcbiAgICBwb3J0OiBwb3J0RmllbGQsXG4gICAgZGF0YWJhc2U6IGRhdGFiYXNlRmllbGQsXG4gICAgdXNlcm5hbWU6IHVzZXJuYW1lRmllbGQsXG4gICAgcGFzc3dvcmQ6IHBhc3N3b3JkRmllbGQsXG4gICAgZGF0YWJhc2VfbmFtZTogZGlzcGxheUZpZWxkLFxuICAgIHF1ZXJ5OiBxdWVyeUZpZWxkLFxuICAgIGVuY3J5cHRpb246IGZvcmNlU1NMRmllbGQsXG4gICAgY3JlZGVudGlhbHNfaW5mbzogQ3JlZGVudGlhbHNJbmZvLFxuICAgIHNlcnZpY2VfYWNjb3VudF9pbmZvOiBDcmVkZW50aWFsc0luZm8sXG4gICAgY2F0YWxvZzogVGFibGVDYXRhbG9nLFxufTtcbmNvbnN0IERhdGFiYXNlQ29ubmVjdGlvbkZvcm0gPSAoeyBkYk1vZGVsOiB7IHBhcmFtZXRlcnMgfSwgb25QYXJhbWV0ZXJzQ2hhbmdlLCBvbkNoYW5nZSwgb25RdWVyeUNoYW5nZSwgb25QYXJhbWV0ZXJzVXBsb2FkRmlsZUNoYW5nZSwgb25BZGRUYWJsZUNhdGFsb2csIG9uUmVtb3ZlVGFibGVDYXRhbG9nLCB2YWxpZGF0aW9uRXJyb3JzLCBnZXRWYWxpZGF0aW9uLCBkYiwgaXNFZGl0TW9kZSA9IGZhbHNlLCBzc2xGb3JjZWQsIGVkaXROZXdEYiwgfSkgPT4gKDw+XG4gICAgPGRpdiBcbi8vIEB0cy1pZ25vcmVcbmNzcz17KHRoZW1lKSA9PiBbXG4gICAgICAgIGZvcm1TY3JvbGxhYmxlU3R5bGVzLFxuICAgICAgICB2YWxpZGF0ZWRGb3JtU3R5bGVzKHRoZW1lKSxcbiAgICBdfT5cbiAgICAgIHtwYXJhbWV0ZXJzICYmXG4gICAgICAgIEZvcm1GaWVsZE9yZGVyLmZpbHRlcigoa2V5KSA9PiBPYmplY3Qua2V5cyhwYXJhbWV0ZXJzLnByb3BlcnRpZXMpLmluY2x1ZGVzKGtleSkgfHxcbiAgICAgICAgICAgIGtleSA9PT0gJ2RhdGFiYXNlX25hbWUnKS5tYXAoZmllbGQgPT4gRk9STV9GSUVMRF9NQVBbZmllbGRdKHtcbiAgICAgICAgICAgIHJlcXVpcmVkOiBwYXJhbWV0ZXJzLnJlcXVpcmVkPy5pbmNsdWRlcyhmaWVsZCksXG4gICAgICAgICAgICBjaGFuZ2VNZXRob2RzOiB7XG4gICAgICAgICAgICAgICAgb25QYXJhbWV0ZXJzQ2hhbmdlLFxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlLFxuICAgICAgICAgICAgICAgIG9uUXVlcnlDaGFuZ2UsXG4gICAgICAgICAgICAgICAgb25QYXJhbWV0ZXJzVXBsb2FkRmlsZUNoYW5nZSxcbiAgICAgICAgICAgICAgICBvbkFkZFRhYmxlQ2F0YWxvZyxcbiAgICAgICAgICAgICAgICBvblJlbW92ZVRhYmxlQ2F0YWxvZyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2YWxpZGF0aW9uRXJyb3JzLFxuICAgICAgICAgICAgZ2V0VmFsaWRhdGlvbixcbiAgICAgICAgICAgIGRiLFxuICAgICAgICAgICAga2V5OiBmaWVsZCxcbiAgICAgICAgICAgIGlzRWRpdE1vZGUsXG4gICAgICAgICAgICBzc2xGb3JjZWQsXG4gICAgICAgICAgICBlZGl0TmV3RGIsXG4gICAgICAgIH0pKX1cbiAgICA8L2Rpdj5cbiAgPC8+KTtcbmV4cG9ydCBjb25zdCBGb3JtRmllbGRNYXAgPSBGT1JNX0ZJRUxEX01BUDtcbmV4cG9ydCBkZWZhdWx0IERhdGFiYXNlQ29ubmVjdGlvbkZvcm07XG4iXX0= */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nconst CredentialsInfo = ({ changeMethods, isEditMode, db, editNewDb }) => {var _db$parameters, _db$parameters2, _db$parameters3;\n  const [uploadOption, setUploadOption] = useState(CredentialInfoOptions.jsonUpload.valueOf());\n  const [fileToUpload, setFileToUpload] = useState(null);\n  const [isPublic, setIsPublic] = useState(true);\n  const showCredentialsInfo = (db == null ? void 0 : db.engine) === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  // a database that has an optional encrypted field has an encrypted_extra that is an empty object, this checks for that.\n  const isEncrypted = isEditMode && (db == null ? void 0 : db.encrypted_extra) !== '{}';\n  const encryptedField = (db == null ? void 0 : db.engine) && encryptedCredentialsMap[db.engine];\n  const encryptedValue = typeof (db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters[encryptedField]) === 'object' ?\n  JSON.stringify(db == null ? void 0 : (_db$parameters2 = db.parameters) == null ? void 0 : _db$parameters2[encryptedField]) :\n  db == null ? void 0 : (_db$parameters3 = db.parameters) == null ? void 0 : _db$parameters3[encryptedField];\n  return ___EmotionJSX(CredentialInfoForm, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 64, columnNumber: 13 } },\n  (db == null ? void 0 : db.engine) === 'gsheets' && ___EmotionJSX(\"div\", { className: \"catalog-type-select\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 65, columnNumber: 37 } },\n  ___EmotionJSX(FormLabel, { css: (theme) => labelMarginBotton(theme), required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 66, columnNumber: 11 } },\n  t('Type of Google Sheets allowed')),\n\n  ___EmotionJSX(Select, { style: { width: '100%' }, defaultValue: isEncrypted ? 'false' : 'true', onChange: (value) => setIsPublic(castStringToBoolean(value)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 69, columnNumber: 11 } },\n  ___EmotionJSX(Select.Option, { value: \"true\", key: 1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 13 } },\n  t('Publicly shared sheets only')),\n\n  ___EmotionJSX(Select.Option, { value: \"false\", key: 2, __self: this, __source: { fileName: _jsxFileName, lineNumber: 73, columnNumber: 13 } },\n  t('Public and privately shared sheets')))),\n\n\n\n  showCredentialsInfo && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 11 } },\n  t('How∂ do you want to enter service account credentials?')),\n\n  ___EmotionJSX(Select, { defaultValue: uploadOption, style: { width: '100%' }, onChange: (option) => setUploadOption(option), __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 11 } },\n  ___EmotionJSX(Select.Option, { value: CredentialInfoOptions.jsonUpload, __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 13 } },\n  t('Upload JSON file')),\n\n\n  ___EmotionJSX(Select.Option, { value: CredentialInfoOptions.copyPaste, __self: this, __source: { fileName: _jsxFileName, lineNumber: 87, columnNumber: 13 } },\n  t('Copy and Paste JSON credentials')))),\n\n\n\n  uploadOption === CredentialInfoOptions.copyPaste ||\n  isEditMode ||\n  editNewDb ? ___EmotionJSX(\"div\", { className: \"input-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 94, columnNumber: 26 } },\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 95, columnNumber: 11 } }, t('Service Account')),\n  ___EmotionJSX(\"textarea\", { className: \"input-form\", name: encryptedField, value: encryptedValue, onChange: changeMethods.onParametersChange, placeholder: \"Paste content of service credentials JSON file here\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 96, columnNumber: 11 } }),\n  ___EmotionJSX(\"span\", { className: \"label-paste\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 97, columnNumber: 11 } },\n  t('Copy and paste the entire service account .json file here'))) :\n\n  showCredentialsInfo && ___EmotionJSX(\"div\", { className: \"input-container\", css: (theme) => infoTooltip(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 100, columnNumber: 44 } },\n  ___EmotionJSX(\"div\", { css: _ref, __self: this, __source: { fileName: _jsxFileName, lineNumber: 101, columnNumber: 13 } },\n  ___EmotionJSX(FormLabel, { required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 15 } }, t('Upload Credentials')),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Use the JSON file you automatically downloaded when creating your service account.'), viewBox: \"0 0 24 24\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 103, columnNumber: 15 } })),\n\n\n  !fileToUpload && ___EmotionJSX(Button, { className: \"input-upload-btn\", onClick: () => {var _document, _document$getElementB;return (_document = document) == null ? void 0 : (_document$getElementB = _document.getElementById('selectedFile')) == null ? void 0 : _document$getElementB.click();}, __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 32 } },\n  t('Choose File')),\n\n  fileToUpload && ___EmotionJSX(\"div\", { className: \"input-upload-current\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 109, columnNumber: 31 } },\n  fileToUpload,\n  ___EmotionJSX(DeleteFilled, { onClick: () => {\n      setFileToUpload(null);\n      changeMethods.onParametersChange({\n        target: {\n          name: encryptedField,\n          value: '' } });\n\n\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 111, columnNumber: 17 } })),\n\n\n  ___EmotionJSX(\"input\", { id: \"selectedFile\", className: \"input-upload\", type: \"file\", onChange: async (event) => {var _file, _file2;\n      let file;\n      if (event.target.files) {\n        file = event.target.files[0];\n      }\n      setFileToUpload((_file = file) == null ? void 0 : _file.name);\n      changeMethods.onParametersChange({\n        target: {\n          type: null,\n          name: encryptedField,\n          value: await ((_file2 = file) == null ? void 0 : _file2.text()),\n          checked: false } });\n\n\n      document.getElementById('selectedFile').value = null;\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 122, columnNumber: 13 } })));\n\n\n};__signature__(CredentialsInfo, \"useState{[uploadOption, setUploadOption](CredentialInfoOptions.jsonUpload.valueOf())}\\nuseState{[fileToUpload, setFileToUpload](null)}\\nuseState{[isPublic, setIsPublic](true)}\");\nconst TableCatalog = ({ required, changeMethods, getValidation, validationErrors, db }) => {\n  const tableCatalog = (db == null ? void 0 : db.catalog) || [];\n  const catalogError = validationErrors || {};\n  return ___EmotionJSX(StyledCatalogTable, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 144, columnNumber: 13 } },\n  ___EmotionJSX(\"h4\", { className: \"gsheet-title\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 145, columnNumber: 7 } },\n  t('Connect Google Sheets as tables to this database')),\n\n  ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 148, columnNumber: 7 } },\n  tableCatalog == null ? void 0 : tableCatalog.map((sheet, idx) => {var _catalogError$idx, _catalogError$idx2;return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(FormLabel, { className: \"catalog-label\", required: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 150, columnNumber: 13 } },\n    t('Google Sheet Name and URL')),\n\n    ___EmotionJSX(\"div\", { className: \"catalog-name\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 13 } },\n    ___EmotionJSX(ValidatedInput, { className: \"catalog-name-input\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx = catalogError[idx]) == null ? void 0 : _catalogError$idx.name, placeholder: t('Enter a name for this sheet'), onChange: (e) => {\n        changeMethods.onParametersChange({\n          target: {\n            type: `catalog-${idx}`,\n            name: 'name',\n            value: e.target.value } });\n\n\n      }, value: sheet.name, __self: this, __source: { fileName: _jsxFileName, lineNumber: 154, columnNumber: 15 } }),\n    (tableCatalog == null ? void 0 : tableCatalog.length) > 1 && ___EmotionJSX(CloseOutlined, { className: \"catalog-delete\", onClick: () => changeMethods.onRemoveTableCatalog(idx), __self: this, __source: { fileName: _jsxFileName, lineNumber: 163, columnNumber: 45 } })),\n\n    ___EmotionJSX(ValidatedInput, { className: \"catalog-name-url\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx2 = catalogError[idx]) == null ? void 0 : _catalogError$idx2.url, placeholder: t('Paste the shareable Google Sheet URL here'), onChange: (e) => changeMethods.onParametersChange({\n        target: {\n          type: `catalog-${idx}`,\n          name: 'value',\n          value: e.target.value } }),\n\n      value: sheet.value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 165, columnNumber: 13 } }));}),\n\n  ___EmotionJSX(StyledFooterButton, { className: \"catalog-add-btn\", onClick: () => {\n      changeMethods.onAddTableCatalog();\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 9 } }, \"+ \",\n  t('Add sheet'))));\n\n\n\n};\nconst hostField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters4;return ___EmotionJSX(ValidatedInput, { id: \"host\", name: \"host\", value: db == null ? void 0 : (_db$parameters4 = db.parameters) == null ? void 0 : _db$parameters4.host, required: required, hasTooltip: true, tooltipText: t('This can be either an IP address (e.g. 127.0.0.1) or a domain name (e.g. mydatabase.com).'), validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.host, placeholder: \"e.g. 127.0.0.1\", className: \"form-group-w-50\", label: \"Host\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 181, columnNumber: 91 } });};\nconst portField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters5;return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ValidatedInput, { id: \"port\", name: \"port\", type: \"number\", required: required, value: db == null ? void 0 : (_db$parameters5 = db.parameters) == null ? void 0 : _db$parameters5.port, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.port, placeholder: \"e.g. 5432\", className: \"form-group-w-50\", label: \"Port\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 5 } }));};\n\nconst databaseField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters6;return ___EmotionJSX(ValidatedInput, { id: \"database\", name: \"database\", required: required, value: db == null ? void 0 : (_db$parameters6 = db.parameters) == null ? void 0 : _db$parameters6.database, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.database, placeholder: \"e.g. world_population\", label: \"Database name\", onChange: changeMethods.onParametersChange, helpText: t('Copy the name of the  database you are trying to connect to.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 185, columnNumber: 95 } });};\nconst usernameField = ({ required, changeMethods, getValidation, validationErrors, db }) => {var _db$parameters7;return ___EmotionJSX(ValidatedInput, { id: \"username\", name: \"username\", required: required, value: db == null ? void 0 : (_db$parameters7 = db.parameters) == null ? void 0 : _db$parameters7.username, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.username, placeholder: \"e.g. Analytics\", label: \"Username\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 186, columnNumber: 95 } });};\nconst passwordField = ({ required, changeMethods, getValidation, validationErrors, db, isEditMode }) => {var _db$parameters8;return ___EmotionJSX(ValidatedInput, { id: \"password\", name: \"password\", required: required, type: isEditMode && 'password', value: db == null ? void 0 : (_db$parameters8 = db.parameters) == null ? void 0 : _db$parameters8.password, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.password, placeholder: \"e.g. ********\", label: \"Password\", onChange: changeMethods.onParametersChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 187, columnNumber: 107 } });};\nconst displayField = ({ changeMethods, getValidation, validationErrors, db }) => ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(ValidatedInput, { id: \"database_name\", name: \"database_name\", required: true, value: db == null ? void 0 : db.database_name, validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.database_name, placeholder: \"\", label: t('Display Name'), onChange: changeMethods.onChange, helpText: t('Pick a nickname for this database to display as in Superset.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 189, columnNumber: 5 } }));\n\nconst queryField = ({ required, changeMethods, getValidation, validationErrors, db }) => ___EmotionJSX(ValidatedInput, { id: \"query_input\", name: \"query_input\", required: required, value: (db == null ? void 0 : db.query_input) || '', validationMethods: { onBlur: getValidation }, errorMessage: validationErrors == null ? void 0 : validationErrors.query, placeholder: \"e.g. param1=value1&param2=value2\", label: \"Additional Parameters\", onChange: changeMethods.onQueryChange, helpText: t('Add additional custom parameters'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 191, columnNumber: 92 } });\nconst forceSSLField = ({ isEditMode, changeMethods, db, sslForced }) => {var _db$parameters9;return ___EmotionJSX(\"div\", { css: (theme) => infoTooltip(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 192, columnNumber: 75 } },\n  ___EmotionJSX(Switch, { disabled: sslForced && !isEditMode, checked: (db == null ? void 0 : (_db$parameters9 = db.parameters) == null ? void 0 : _db$parameters9.encryption) || sslForced, onChange: (changed) => {\n      changeMethods.onParametersChange({\n        target: {\n          type: 'toggle',\n          name: 'encryption',\n          checked: true,\n          value: changed } });\n\n\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 193, columnNumber: 5 } }),\n  ___EmotionJSX(\"span\", { css: toggleStyle, __self: this, __source: { fileName: _jsxFileName, lineNumber: 203, columnNumber: 5 } }, \"SSL\"),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('SSL Mode \"require\" will be used.'), placement: \"right\", viewBox: \"0 -5 24 24\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 204, columnNumber: 5 } }));};\n\nconst FORM_FIELD_MAP = {\n  host: hostField,\n  port: portField,\n  database: databaseField,\n  username: usernameField,\n  password: passwordField,\n  database_name: displayField,\n  query: queryField,\n  encryption: forceSSLField,\n  credentials_info: CredentialsInfo,\n  service_account_info: CredentialsInfo,\n  catalog: TableCatalog };\n\nconst DatabaseConnectionForm = ({ dbModel: { parameters }, onParametersChange, onChange, onQueryChange, onParametersUploadFileChange, onAddTableCatalog, onRemoveTableCatalog, validationErrors, getValidation, db, isEditMode = false, sslForced, editNewDb }) => ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(\"div\", {\n  // @ts-ignore\n  css: (theme) => [\n  formScrollableStyles,\n  validatedFormStyles(theme)], __self: this, __source: { fileName: _jsxFileName, lineNumber: 220, columnNumber: 5 } },\n\nparameters &&\nFormFieldOrder.filter((key) => Object.keys(parameters.properties).includes(key) ||\nkey === 'database_name').map((field) => {var _parameters$required;return FORM_FIELD_MAP[field]({\n    required: (_parameters$required = parameters.required) == null ? void 0 : _parameters$required.includes(field),\n    changeMethods: {\n      onParametersChange,\n      onChange,\n      onQueryChange,\n      onParametersUploadFileChange,\n      onAddTableCatalog,\n      onRemoveTableCatalog },\n\n    validationErrors,\n    getValidation,\n    db,\n    key: field,\n    isEditMode,\n    sslForced,\n    editNewDb });})));\n\n\n\nexport const FormFieldMap = FORM_FIELD_MAP;const _default =\nDatabaseConnectionForm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(encryptedCredentialsMap, \"encryptedCredentialsMap\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(CredentialInfoOptions, \"CredentialInfoOptions\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(castStringToBoolean, \"castStringToBoolean\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FormFieldOrder, \"FormFieldOrder\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(CredentialsInfo, \"CredentialsInfo\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(TableCatalog, \"TableCatalog\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(hostField, \"hostField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(portField, \"portField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(databaseField, \"databaseField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(usernameField, \"usernameField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(passwordField, \"passwordField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(displayField, \"displayField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(queryField, \"queryField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(forceSSLField, \"forceSSLField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FORM_FIELD_MAP, \"FORM_FIELD_MAP\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(DatabaseConnectionForm, \"DatabaseConnectionForm\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(FormFieldMap, \"FormFieldMap\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FormEvent, useState } from 'react';\nimport { SupersetTheme, JsonObject, t } from '@superset-ui/core';\nimport { InputProps } from 'antd/lib/input';\nimport { Switch, Select, Button } from 'src/common/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport { DeleteFilled, CloseOutlined } from '@ant-design/icons';\nimport {\n  formScrollableStyles,\n  validatedFormStyles,\n  CredentialInfoForm,\n  toggleStyle,\n  infoTooltip,\n  StyledFooterButton,\n  StyledCatalogTable,\n  labelMarginBotton,\n} from './styles';\nimport { CatalogObject, DatabaseForm, DatabaseObject } from '../types';\n\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info',\n};\n\nenum CredentialInfoOptions {\n  jsonUpload,\n  copyPaste,\n}\n\nconst castStringToBoolean = (optionValue: string) => optionValue === 'true';\n\nexport const FormFieldOrder = [\n  'host',\n  'port',\n  'database',\n  'username',\n  'password',\n  'database_name',\n  'credentials_info',\n  'service_account_info',\n  'catalog',\n  'query',\n  'encryption',\n];\n\ninterface FieldPropTypes {\n  required: boolean;\n  hasTooltip?: boolean;\n  tooltipText?: (value: any) => string;\n  onParametersChange: (value: any) => string;\n  onParametersUploadFileChange: (value: any) => string;\n  changeMethods: { onParametersChange: (value: any) => string } & {\n    onChange: (value: any) => string;\n  } & {\n    onQueryChange: (value: any) => string;\n  } & { onParametersUploadFileChange: (value: any) => string } & {\n    onAddTableCatalog: () => void;\n    onRemoveTableCatalog: (idx: number) => void;\n  };\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n  db?: DatabaseObject;\n  isEditMode?: boolean;\n  sslForced?: boolean;\n  defaultDBName?: string;\n  editNewDb?: boolean;\n}\n\nconst CredentialsInfo = ({\n  changeMethods,\n  isEditMode,\n  db,\n  editNewDb,\n}: FieldPropTypes) => {\n  const [uploadOption, setUploadOption] = useState<number>(\n    CredentialInfoOptions.jsonUpload.valueOf(),\n  );\n  const [fileToUpload, setFileToUpload] = useState<string | null | undefined>(\n    null,\n  );\n  const [isPublic, setIsPublic] = useState<boolean>(true);\n  const showCredentialsInfo =\n    db?.engine === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  // a database that has an optional encrypted field has an encrypted_extra that is an empty object, this checks for that.\n  const isEncrypted = isEditMode && db?.encrypted_extra !== '{}';\n  const encryptedField = db?.engine && encryptedCredentialsMap[db.engine];\n  const encryptedValue =\n    typeof db?.parameters?.[encryptedField] === 'object'\n      ? JSON.stringify(db?.parameters?.[encryptedField])\n      : db?.parameters?.[encryptedField];\n  return (\n    <CredentialInfoForm>\n      {db?.engine === 'gsheets' && (\n        <div className=\"catalog-type-select\">\n          <FormLabel\n            css={(theme: SupersetTheme) => labelMarginBotton(theme)}\n            required\n          >\n            {t('Type of Google Sheets allowed')}\n          </FormLabel>\n          <Select\n            style={{ width: '100%' }}\n            defaultValue={isEncrypted ? 'false' : 'true'}\n            onChange={(value: string) =>\n              setIsPublic(castStringToBoolean(value))\n            }\n          >\n            <Select.Option value=\"true\" key={1}>\n              {t('Publicly shared sheets only')}\n            </Select.Option>\n            <Select.Option value=\"false\" key={2}>\n              {t('Public and privately shared sheets')}\n            </Select.Option>\n          </Select>\n        </div>\n      )}\n      {showCredentialsInfo && (\n        <>\n          <FormLabel required>\n            {t('How∂ do you want to enter service account credentials?')}\n          </FormLabel>\n          <Select\n            defaultValue={uploadOption}\n            style={{ width: '100%' }}\n            onChange={option => setUploadOption(option)}\n          >\n            <Select.Option value={CredentialInfoOptions.jsonUpload}>\n              {t('Upload JSON file')}\n            </Select.Option>\n\n            <Select.Option value={CredentialInfoOptions.copyPaste}>\n              {t('Copy and Paste JSON credentials')}\n            </Select.Option>\n          </Select>\n        </>\n      )}\n      {uploadOption === CredentialInfoOptions.copyPaste ||\n      isEditMode ||\n      editNewDb ? (\n        <div className=\"input-container\">\n          <FormLabel required>{t('Service Account')}</FormLabel>\n          <textarea\n            className=\"input-form\"\n            name={encryptedField}\n            value={encryptedValue}\n            onChange={changeMethods.onParametersChange}\n            placeholder=\"Paste content of service credentials JSON file here\"\n          />\n          <span className=\"label-paste\">\n            {t('Copy and paste the entire service account .json file here')}\n          </span>\n        </div>\n      ) : (\n        showCredentialsInfo && (\n          <div\n            className=\"input-container\"\n            css={(theme: SupersetTheme) => infoTooltip(theme)}\n          >\n            <div css={{ display: 'flex', alignItems: 'center' }}>\n              <FormLabel required>{t('Upload Credentials')}</FormLabel>\n              <InfoTooltip\n                tooltip={t(\n                  'Use the JSON file you automatically downloaded when creating your service account.',\n                )}\n                viewBox=\"0 0 24 24\"\n              />\n            </div>\n\n            {!fileToUpload && (\n              <Button\n                className=\"input-upload-btn\"\n                onClick={() =>\n                  document?.getElementById('selectedFile')?.click()\n                }\n              >\n                {t('Choose File')}\n              </Button>\n            )}\n            {fileToUpload && (\n              <div className=\"input-upload-current\">\n                {fileToUpload}\n                <DeleteFilled\n                  onClick={() => {\n                    setFileToUpload(null);\n                    changeMethods.onParametersChange({\n                      target: {\n                        name: encryptedField,\n                        value: '',\n                      },\n                    });\n                  }}\n                />\n              </div>\n            )}\n\n            <input\n              id=\"selectedFile\"\n              className=\"input-upload\"\n              type=\"file\"\n              onChange={async event => {\n                let file;\n                if (event.target.files) {\n                  file = event.target.files[0];\n                }\n                setFileToUpload(file?.name);\n                changeMethods.onParametersChange({\n                  target: {\n                    type: null,\n                    name: encryptedField,\n                    value: await file?.text(),\n                    checked: false,\n                  },\n                });\n                (document.getElementById(\n                  'selectedFile',\n                ) as HTMLInputElement).value = null as any;\n              }}\n            />\n          </div>\n        )\n      )}\n    </CredentialInfoForm>\n  );\n};\n\nconst TableCatalog = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => {\n  const tableCatalog = db?.catalog || [];\n  const catalogError = validationErrors || {};\n\n  return (\n    <StyledCatalogTable>\n      <h4 className=\"gsheet-title\">\n        {t('Connect Google Sheets as tables to this database')}\n      </h4>\n      <div>\n        {tableCatalog?.map((sheet: CatalogObject, idx: number) => (\n          <>\n            <FormLabel className=\"catalog-label\" required>\n              {t('Google Sheet Name and URL')}\n            </FormLabel>\n            <div className=\"catalog-name\">\n              <ValidatedInput\n                className=\"catalog-name-input\"\n                required={required}\n                validationMethods={{ onBlur: getValidation }}\n                errorMessage={catalogError[idx]?.name}\n                placeholder={t('Enter a name for this sheet')}\n                onChange={(e: { target: { value: any } }) => {\n                  changeMethods.onParametersChange({\n                    target: {\n                      type: `catalog-${idx}`,\n                      name: 'name',\n                      value: e.target.value,\n                    },\n                  });\n                }}\n                value={sheet.name}\n              />\n              {tableCatalog?.length > 1 && (\n                <CloseOutlined\n                  className=\"catalog-delete\"\n                  onClick={() => changeMethods.onRemoveTableCatalog(idx)}\n                />\n              )}\n            </div>\n            <ValidatedInput\n              className=\"catalog-name-url\"\n              required={required}\n              validationMethods={{ onBlur: getValidation }}\n              errorMessage={catalogError[idx]?.url}\n              placeholder={t('Paste the shareable Google Sheet URL here')}\n              onChange={(e: { target: { value: any } }) =>\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'value',\n                    value: e.target.value,\n                  },\n                })\n              }\n              value={sheet.value}\n            />\n          </>\n        ))}\n        <StyledFooterButton\n          className=\"catalog-add-btn\"\n          onClick={() => {\n            changeMethods.onAddTableCatalog();\n          }}\n        >\n          + {t('Add sheet')}\n        </StyledFooterButton>\n      </div>\n    </StyledCatalogTable>\n  );\n};\n\nconst hostField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"host\"\n    name=\"host\"\n    value={db?.parameters?.host}\n    required={required}\n    hasTooltip\n    tooltipText={t(\n      'This can be either an IP address (e.g. 127.0.0.1) or a domain name (e.g. mydatabase.com).',\n    )}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.host}\n    placeholder=\"e.g. 127.0.0.1\"\n    className=\"form-group-w-50\"\n    label=\"Host\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst portField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"port\"\n      name=\"port\"\n      type=\"number\"\n      required={required}\n      value={db?.parameters?.port as number}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.port}\n      placeholder=\"e.g. 5432\"\n      className=\"form-group-w-50\"\n      label=\"Port\"\n      onChange={changeMethods.onParametersChange}\n    />\n  </>\n);\nconst databaseField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"database\"\n    name=\"database\"\n    required={required}\n    value={db?.parameters?.database}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.database}\n    placeholder=\"e.g. world_population\"\n    label=\"Database name\"\n    onChange={changeMethods.onParametersChange}\n    helpText={t('Copy the name of the  database you are trying to connect to.')}\n  />\n);\nconst usernameField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"username\"\n    name=\"username\"\n    required={required}\n    value={db?.parameters?.username}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.username}\n    placeholder=\"e.g. Analytics\"\n    label=\"Username\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst passwordField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n  isEditMode,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"password\"\n    name=\"password\"\n    required={required}\n    type={isEditMode && 'password'}\n    value={db?.parameters?.password}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.password}\n    placeholder=\"e.g. ********\"\n    label=\"Password\"\n    onChange={changeMethods.onParametersChange}\n  />\n);\nconst displayField = ({\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <>\n    <ValidatedInput\n      id=\"database_name\"\n      name=\"database_name\"\n      required\n      value={db?.database_name}\n      validationMethods={{ onBlur: getValidation }}\n      errorMessage={validationErrors?.database_name}\n      placeholder=\"\"\n      label={t('Display Name')}\n      onChange={changeMethods.onChange}\n      helpText={t(\n        'Pick a nickname for this database to display as in Superset.',\n      )}\n    />\n  </>\n);\n\nconst queryField = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => (\n  <ValidatedInput\n    id=\"query_input\"\n    name=\"query_input\"\n    required={required}\n    value={db?.query_input || ''}\n    validationMethods={{ onBlur: getValidation }}\n    errorMessage={validationErrors?.query}\n    placeholder=\"e.g. param1=value1&param2=value2\"\n    label=\"Additional Parameters\"\n    onChange={changeMethods.onQueryChange}\n    helpText={t('Add additional custom parameters')}\n  />\n);\n\nconst forceSSLField = ({\n  isEditMode,\n  changeMethods,\n  db,\n  sslForced,\n}: FieldPropTypes) => (\n  <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n    <Switch\n      disabled={sslForced && !isEditMode}\n      checked={db?.parameters?.encryption || sslForced}\n      onChange={changed => {\n        changeMethods.onParametersChange({\n          target: {\n            type: 'toggle',\n            name: 'encryption',\n            checked: true,\n            value: changed,\n          },\n        });\n      }}\n    />\n    <span css={toggleStyle}>SSL</span>\n    <InfoTooltip\n      tooltip={t('SSL Mode \"require\" will be used.')}\n      placement=\"right\"\n      viewBox=\"0 -5 24 24\"\n    />\n  </div>\n);\n\nconst FORM_FIELD_MAP = {\n  host: hostField,\n  port: portField,\n  database: databaseField,\n  username: usernameField,\n  password: passwordField,\n  database_name: displayField,\n  query: queryField,\n  encryption: forceSSLField,\n  credentials_info: CredentialsInfo,\n  service_account_info: CredentialsInfo,\n  catalog: TableCatalog,\n};\n\nconst DatabaseConnectionForm = ({\n  dbModel: { parameters },\n  onParametersChange,\n  onChange,\n  onQueryChange,\n  onParametersUploadFileChange,\n  onAddTableCatalog,\n  onRemoveTableCatalog,\n  validationErrors,\n  getValidation,\n  db,\n  isEditMode = false,\n  sslForced,\n  editNewDb,\n}: {\n  isEditMode?: boolean;\n  sslForced: boolean;\n  editNewDb?: boolean;\n  dbModel: DatabaseForm;\n  db: Partial<DatabaseObject> | null;\n  onParametersChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onQueryChange: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onParametersUploadFileChange?: (\n    event: FormEvent<InputProps> | { target: HTMLInputElement },\n  ) => void;\n  onAddTableCatalog: () => void;\n  onRemoveTableCatalog: (idx: number) => void;\n  validationErrors: JsonObject | null;\n  getValidation: () => void;\n}) => (\n  <>\n    <div\n      // @ts-ignore\n      css={(theme: SupersetTheme) => [\n        formScrollableStyles,\n        validatedFormStyles(theme),\n      ]}\n    >\n      {parameters &&\n        FormFieldOrder.filter(\n          (key: string) =>\n            Object.keys(parameters.properties).includes(key) ||\n            key === 'database_name',\n        ).map(field =>\n          FORM_FIELD_MAP[field]({\n            required: parameters.required?.includes(field),\n            changeMethods: {\n              onParametersChange,\n              onChange,\n              onQueryChange,\n              onParametersUploadFileChange,\n              onAddTableCatalog,\n              onRemoveTableCatalog,\n            },\n            validationErrors,\n            getValidation,\n            db,\n            key: field,\n            isEditMode,\n            sslForced,\n            editNewDb,\n          }),\n        )}\n    </div>\n  </>\n);\nexport const FormFieldMap = FORM_FIELD_MAP;\n\nexport default DatabaseConnectionForm;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}