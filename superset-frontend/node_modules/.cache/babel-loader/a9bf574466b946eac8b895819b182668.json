{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { formatDecimalParts } from \"./formatDecimal.js\";const _default =\n\nfunction (x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n  exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient :\n  coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) :\n  coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-format/src/formatRounded.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-format/src/formatRounded.js"],"names":["formatDecimalParts","x","p","d","coefficient","exponent","Array","join","length","slice"],"mappings":"uSAAA,SAAQA,kBAAR,QAAiC,oBAAjC,C;;AAEe,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5B,MAAIC,CAAC,GAAGH,kBAAkB,CAACC,CAAD,EAAIC,CAAJ,CAA1B;AACA,MAAI,CAACC,CAAL,EAAQ,OAAOF,CAAC,GAAG,EAAX;AACR,MAAIG,WAAW,GAAGD,CAAC,CAAC,CAAD,CAAnB;AACIE,EAAAA,QAAQ,GAAGF,CAAC,CAAC,CAAD,CADhB;AAEA,SAAOE,QAAQ,GAAG,CAAX,GAAe,OAAO,IAAIC,KAAJ,CAAU,CAACD,QAAX,EAAqBE,IAArB,CAA0B,GAA1B,CAAP,GAAwCH,WAAvD;AACDA,EAAAA,WAAW,CAACI,MAAZ,GAAqBH,QAAQ,GAAG,CAAhC,GAAoCD,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqBJ,QAAQ,GAAG,CAAhC,IAAqC,GAArC,GAA2CD,WAAW,CAACK,KAAZ,CAAkBJ,QAAQ,GAAG,CAA7B,CAA/E;AACAD,EAAAA,WAAW,GAAG,IAAIE,KAAJ,CAAUD,QAAQ,GAAGD,WAAW,CAACI,MAAvB,GAAgC,CAA1C,EAA6CD,IAA7C,CAAkD,GAAlD,CAFpB;AAGD,C,CARD,wB","sourcesContent":["import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n"]},"metadata":{},"sourceType":"module"}