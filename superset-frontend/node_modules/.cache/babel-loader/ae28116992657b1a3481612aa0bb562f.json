{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {\n  return getState().dashboardState.sliceIds.includes(chartId);\n}\n\nexport const ADD_FILTER = 'ADD_FILTER';\nexport function addFilter(chartId, component, form_data) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: ADD_FILTER, chartId, component, form_data });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport function removeFilter(chartId) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: REMOVE_FILTER, chartId });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components });\n\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isValidFilter, \"isValidFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(ADD_FILTER, \"ADD_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(addFilter, \"addFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(REMOVE_FILTER, \"REMOVE_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(removeFilter, \"removeFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(CHANGE_FILTER, \"CHANGE_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(changeFilter, \"changeFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DIRECT_PATH_TO_FILTER, \"UPDATE_DIRECT_PATH_TO_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDirectPathToFilter, \"updateDirectPathToFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_LAYOUT_COMPONENTS, \"UPDATE_LAYOUT_COMPONENTS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateLayoutComponents, \"updateLayoutComponents\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DASHBOARD_FILTERS_SCOPE, \"UPDATE_DASHBOARD_FILTERS_SCOPE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDashboardFiltersScope, \"updateDashboardFiltersScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(isValidFilter, \"isValidFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(ADD_FILTER, \"ADD_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(addFilter, \"addFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(REMOVE_FILTER, \"REMOVE_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(removeFilter, \"removeFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(CHANGE_FILTER, \"CHANGE_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(changeFilter, \"changeFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DIRECT_PATH_TO_FILTER, \"UPDATE_DIRECT_PATH_TO_FILTER\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDirectPathToFilter, \"updateDirectPathToFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_LAYOUT_COMPONENTS, \"UPDATE_LAYOUT_COMPONENTS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateLayoutComponents, \"updateLayoutComponents\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DASHBOARD_FILTERS_SCOPE, \"UPDATE_DASHBOARD_FILTERS_SCOPE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDashboardFiltersScope, \"updateDashboardFiltersScope\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js"],"names":["isValidFilter","getState","ADD_FILTER","addFilter","dispatch","type","REMOVE_FILTER","removeFilter","CHANGE_FILTER","changeFilter","components","UPDATE_DIRECT_PATH_TO_FILTER","updateDirectPathToFilter","UPDATE_LAYOUT_COMPONENTS","updateLayoutComponents","UPDATE_DASHBOARD_FILTERS_SCOPE","updateDashboardFiltersScope"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {\n  return getState().dashboardState.sliceIds.includes(chartId);\n}\n\nexport const ADD_FILTER = 'ADD_FILTER';\nexport function addFilter(chartId, component, form_data) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: ADD_FILTER, chartId, component, form_data });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport function removeFilter(chartId) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: REMOVE_FILTER, chartId });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components,\n      });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return dispatch => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return dispatch => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}