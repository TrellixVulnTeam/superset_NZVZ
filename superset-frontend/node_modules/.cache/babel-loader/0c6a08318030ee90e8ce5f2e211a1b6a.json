{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Alert as AntdAlert } from 'src/common/components';\nimport { useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function Alert(props) {\n  const { type = 'info', description, showIcon = true, closable = true, roomBelow = false, children } = props;\n  const theme = useTheme();\n  const { colors, typography, gridUnit } = theme;\n  const { alert, error, info, success } = colors;\n  let baseColor = info;\n  let AlertIcon = Icons.InfoSolid;\n  if (type === 'error') {\n    baseColor = error;\n    AlertIcon = Icons.ErrorSolid;\n  } else\n  if (type === 'warning') {\n    baseColor = alert;\n    AlertIcon = Icons.AlertSolid;\n  } else\n  if (type === 'success') {\n    baseColor = success;\n    AlertIcon = Icons.CircleCheckSolid;\n  }\n  return ___EmotionJSX(AntdAlert, _extends({ role: \"alert\", showIcon: showIcon, icon: ___EmotionJSX(AlertIcon, { \"aria-label\": `${type} icon` }), closeText: closable && ___EmotionJSX(Icons.XSmall, { \"aria-label\": \"close icon\" }), css: /*#__PURE__*/_css({\n      marginBottom: roomBelow ? gridUnit * 4 : 0,\n      padding: `${gridUnit * 2}px ${gridUnit * 3}px`,\n      alignItems: 'flex-start',\n      border: 0,\n      backgroundColor: baseColor.light2,\n      '& .ant-alert-icon': {\n        marginRight: gridUnit * 2 },\n\n      '& .ant-alert-message': {\n        color: baseColor.dark2,\n        fontSize: typography.sizes.m,\n        fontWeight: description ?\n        typography.weights.bold :\n        typography.weights.normal },\n\n      '& .ant-alert-description': {\n        color: baseColor.dark2,\n        fontSize: typography.sizes.m } }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Alert;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9teV9wbHVnaW4vc3VwZXJzZXQvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvQWxlcnQvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDd0siLCJmaWxlIjoiL2hvbWUvdWJ1bnR1L215X3BsdWdpbi9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9BbGVydC9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWxlcnQgYXMgQW50ZEFsZXJ0LCB9IGZyb20gJ3NyYy9jb21tb24vY29tcG9uZW50cyc7XG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBbGVydChwcm9wcykge1xuICAgIGNvbnN0IHsgdHlwZSA9ICdpbmZvJywgZGVzY3JpcHRpb24sIHNob3dJY29uID0gdHJ1ZSwgY2xvc2FibGUgPSB0cnVlLCByb29tQmVsb3cgPSBmYWxzZSwgY2hpbGRyZW4sIH0gPSBwcm9wcztcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgeyBjb2xvcnMsIHR5cG9ncmFwaHksIGdyaWRVbml0IH0gPSB0aGVtZTtcbiAgICBjb25zdCB7IGFsZXJ0LCBlcnJvciwgaW5mbywgc3VjY2VzcyB9ID0gY29sb3JzO1xuICAgIGxldCBiYXNlQ29sb3IgPSBpbmZvO1xuICAgIGxldCBBbGVydEljb24gPSBJY29ucy5JbmZvU29saWQ7XG4gICAgaWYgKHR5cGUgPT09ICdlcnJvcicpIHtcbiAgICAgICAgYmFzZUNvbG9yID0gZXJyb3I7XG4gICAgICAgIEFsZXJ0SWNvbiA9IEljb25zLkVycm9yU29saWQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICd3YXJuaW5nJykge1xuICAgICAgICBiYXNlQ29sb3IgPSBhbGVydDtcbiAgICAgICAgQWxlcnRJY29uID0gSWNvbnMuQWxlcnRTb2xpZDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ3N1Y2Nlc3MnKSB7XG4gICAgICAgIGJhc2VDb2xvciA9IHN1Y2Nlc3M7XG4gICAgICAgIEFsZXJ0SWNvbiA9IEljb25zLkNpcmNsZUNoZWNrU29saWQ7XG4gICAgfVxuICAgIHJldHVybiAoPEFudGRBbGVydCByb2xlPVwiYWxlcnRcIiBzaG93SWNvbj17c2hvd0ljb259IGljb249ezxBbGVydEljb24gYXJpYS1sYWJlbD17YCR7dHlwZX0gaWNvbmB9Lz59IGNsb3NlVGV4dD17Y2xvc2FibGUgJiYgPEljb25zLlhTbWFsbCBhcmlhLWxhYmVsPVwiY2xvc2UgaWNvblwiLz59IGNzcz17e1xuICAgICAgICAgICAgbWFyZ2luQm90dG9tOiByb29tQmVsb3cgPyBncmlkVW5pdCAqIDQgOiAwLFxuICAgICAgICAgICAgcGFkZGluZzogYCR7Z3JpZFVuaXQgKiAyfXB4ICR7Z3JpZFVuaXQgKiAzfXB4YCxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAgICAgICAgICAgIGJvcmRlcjogMCxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYmFzZUNvbG9yLmxpZ2h0MixcbiAgICAgICAgICAgICcmIC5hbnQtYWxlcnQtaWNvbic6IHtcbiAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogZ3JpZFVuaXQgKiAyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICcmIC5hbnQtYWxlcnQtbWVzc2FnZSc6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogYmFzZUNvbG9yLmRhcmsyLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiB0eXBvZ3JhcGh5LnNpemVzLm0sXG4gICAgICAgICAgICAgICAgZm9udFdlaWdodDogZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgPyB0eXBvZ3JhcGh5LndlaWdodHMuYm9sZFxuICAgICAgICAgICAgICAgICAgICA6IHR5cG9ncmFwaHkud2VpZ2h0cy5ub3JtYWwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJyYgLmFudC1hbGVydC1kZXNjcmlwdGlvbic6IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogYmFzZUNvbG9yLmRhcmsyLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiB0eXBvZ3JhcGh5LnNpemVzLm0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9fSB7Li4ucHJvcHN9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQW50ZEFsZXJ0Pik7XG59XG4iXX0= */\") },\n\n  props),\n  children);\n\n}","map":null,"metadata":{},"sourceType":"module"}