{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { Tree } from 'src/common/components';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { useFilterScopeTree } from './state';\nimport { findFilterScope, getTreeCheckedItems } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst buildTreeLeafTitle = (label, hasTooltip, tooltipTitle) => {\n  let title = ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 27, columnNumber: 17 } }, label);\n  if (hasTooltip) {\n    title = ___EmotionJSX(React.Fragment, null,\n    title, \"\\xA0\",\n    ___EmotionJSX(Tooltip, { title: tooltipTitle, __self: this, __source: { fileName: _jsxFileName, lineNumber: 31, columnNumber: 9 } },\n    ___EmotionJSX(Icons.Info, { iconSize: \"m\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 32, columnNumber: 11 } })));\n\n\n  }\n  return title;\n};\nconst ScopingTree = ({ formScope, initialScope, forceUpdate, updateFormValues, chartId, initiallyExcludedCharts = [] }) => {\n  const [expandedKeys, setExpandedKeys] = useState([\n  DASHBOARD_ROOT_ID]);\n\n  const { treeData, layout } = useFilterScopeTree(chartId, initiallyExcludedCharts, buildTreeLeafTitle);\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n  const handleExpand = (expandedKeys) => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n  const handleCheck = (checkedKeys) => {\n    forceUpdate();\n    const scope = findFilterScope(checkedKeys, layout);\n    if (chartId !== undefined) {\n      scope.excluded = [...new Set([...scope.excluded, chartId])];\n    }\n    updateFormValues({\n      scope });\n\n  };\n  const checkedKeys = useMemo(() => getTreeCheckedItems({ ...(formScope || initialScope) }, layout), [formScope, initialScope, layout]);\n  return ___EmotionJSX(Tree, { checkable: true, selectable: false, onExpand: handleExpand, expandedKeys: expandedKeys, autoExpandParent: autoExpandParent, onCheck: handleCheck, checkedKeys: checkedKeys, treeData: treeData, __self: this, __source: { fileName: _jsxFileName, lineNumber: 59, columnNumber: 13 } });\n};__signature__(ScopingTree, \"useState{[expandedKeys, setExpandedKeys]([\\n        DASHBOARD_ROOT_ID,\\n    ])}\\nuseFilterScopeTree{{ treeData, layout }}\\nuseState{[autoExpandParent, setAutoExpandParent](true)}\\nuseMemo{checkedKeys}\", () => [useFilterScopeTree]);const _default =\nScopingTree;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildTreeLeafTitle, \"buildTreeLeafTitle\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");reactHotLoader.register(ScopingTree, \"ScopingTree\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx"],"names":[],"mappings":"udAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,IAAoB,OAApB,EAA6B,QAA7B,QAA6C,OAA7C;AACA,SAAS,IAAT,QAAqB,uBAArB;AACA,SAAS,iBAAT,QAAkC,8BAAlC;AACA,SAAS,OAAT,QAAwB,wBAAxB;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SAAS,kBAAT,QAAmC,SAAnC;AACA,SAAS,eAAT,EAA0B,mBAA1B,QAAqD,SAArD,C;AAYA,MAAM,kBAAkB,GAAG,CACzB,KADyB,EAEzB,UAFyB,EAGzB,YAHyB,KAIvB;AACF,MAAI,KAAK,GAAG,gHAAO,KAAP,CAAZ;AACA,MAAI,UAAJ,EAAgB;AACd,IAAA,KAAK,GACH;AACG,IAAA,KADH;AAEE,kBAAC,OAAD,IAAS,KAAK,EAAE,YAAhB;AACE,kBAAC,KAAD,CAAO,IAAP,IAAY,QAAQ,EAAC,GAArB,yFADF,CAFF,CADF;;;AAQD;AACD,SAAO,KAAP;AACD,CAjBD;AAmBA,MAAM,WAAW,GAAyB,CAAC,EACzC,SADyC,EAEzC,YAFyC,EAGzC,WAHyC,EAIzC,gBAJyC,EAKzC,OALyC,EAMzC,uBAAuB,GAAG,EANe,EAAD,KAOrC;AACH,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAW;AACzD,EAAA,iBADyD,CAAX,CAAhD;;AAIA,QAAM,EAAE,QAAF,EAAY,MAAZ,KAAuB,kBAAkB,CAC7C,OAD6C,EAE7C,uBAF6C,EAG7C,kBAH6C,CAA/C;AAKA,QAAM,CAAC,gBAAD,EAAmB,mBAAnB,IAA0C,QAAQ,CAAU,IAAV,CAAxD;AAEA,QAAM,YAAY,GAAG,CAAC,YAAD,KAA2B;AAC9C,IAAA,eAAe,CAAC,YAAD,CAAf;AACA,IAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAHD;AAKA,QAAM,WAAW,GAAG,CAAC,WAAD,KAA0B;AAC5C,IAAA,WAAW;AACX,UAAM,KAAK,GAAG,eAAe,CAAC,WAAD,EAAc,MAAd,CAA7B;AACA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,KAAK,CAAC,QAAN,GAAiB,CAAC,GAAG,IAAI,GAAJ,CAAQ,CAAC,GAAG,KAAK,CAAC,QAAV,EAAoB,OAApB,CAAR,CAAJ,CAAjB;AACD;AACD,IAAA,gBAAgB,CAAC;AACf,MAAA,KADe,EAAD,CAAhB;;AAGD,GATD;AAWA,QAAM,WAAW,GAAG,OAAO,CACzB,MAAM,mBAAmB,CAAC,EAAE,IAAI,SAAS,IAAI,YAAjB,CAAF,EAAD,EAAqC,MAArC,CADA,EAEzB,CAAC,SAAD,EAAY,YAAZ,EAA0B,MAA1B,CAFyB,CAA3B;AAKA,SACE,cAAC,IAAD,IACE,SAAS,MADX,EAEE,UAAU,EAAE,KAFd,EAGE,QAAQ,EAAE,YAHZ,EAIE,YAAY,EAAE,YAJhB,EAKE,gBAAgB,EAAE,gBALpB,EAME,OAAO,EAAE,WANX,EAOE,WAAW,EAAE,WAPf,EAQE,QAAQ,EAAE,QARZ,yFADF;AAYD,CApDD,C,cAAM,W,qNAYyB,kB;AA0ChB,W,CAAf,wB,iLAzEM,kB,6MAmBA,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useMemo, useState } from 'react';\nimport { Tree } from 'src/common/components';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { useFilterScopeTree } from './state';\nimport { findFilterScope, getTreeCheckedItems } from './utils';\nimport { Scope } from '../../../types';\n\ntype ScopingTreeProps = {\n  forceUpdate: Function;\n  updateFormValues: (values: any) => void;\n  formScope?: Scope;\n  initialScope: Scope;\n  chartId?: number;\n  initiallyExcludedCharts?: number[];\n};\n\nconst buildTreeLeafTitle = (\n  label: string,\n  hasTooltip: boolean,\n  tooltipTitle?: string,\n) => {\n  let title = <span>{label}</span>;\n  if (hasTooltip) {\n    title = (\n      <>\n        {title}&nbsp;\n        <Tooltip title={tooltipTitle}>\n          <Icons.Info iconSize=\"m\" />\n        </Tooltip>\n      </>\n    );\n  }\n  return title;\n};\n\nconst ScopingTree: FC<ScopingTreeProps> = ({\n  formScope,\n  initialScope,\n  forceUpdate,\n  updateFormValues,\n  chartId,\n  initiallyExcludedCharts = [],\n}) => {\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([\n    DASHBOARD_ROOT_ID,\n  ]);\n\n  const { treeData, layout } = useFilterScopeTree(\n    chartId,\n    initiallyExcludedCharts,\n    buildTreeLeafTitle,\n  );\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n\n  const handleExpand = (expandedKeys: string[]) => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  const handleCheck = (checkedKeys: string[]) => {\n    forceUpdate();\n    const scope = findFilterScope(checkedKeys, layout);\n    if (chartId !== undefined) {\n      scope.excluded = [...new Set([...scope.excluded, chartId])];\n    }\n    updateFormValues({\n      scope,\n    });\n  };\n\n  const checkedKeys = useMemo(\n    () => getTreeCheckedItems({ ...(formScope || initialScope) }, layout),\n    [formScope, initialScope, layout],\n  );\n\n  return (\n    <Tree\n      checkable\n      selectable={false}\n      onExpand={handleExpand}\n      expandedKeys={expandedKeys}\n      autoExpandParent={autoExpandParent}\n      onCheck={handleCheck}\n      checkedKeys={checkedKeys}\n      treeData={treeData}\n    />\n  );\n};\n\nexport default ScopingTree;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}