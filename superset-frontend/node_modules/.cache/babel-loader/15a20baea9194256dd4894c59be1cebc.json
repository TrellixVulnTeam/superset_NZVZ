{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { AppSection, ensureIsArray, smartDateDetailedFormatter, t, tn } from '@superset-ui/core';\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { Select } from 'src/components';\nimport debounce from 'lodash/debounce';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { useImmerReducer } from 'use-immer';\nimport { StyledFormItem, FilterPluginStyle, StatusMessage } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction reducer(draft, action) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState };\n\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;}\n\n}\nexport default function PluginFilterSelect(props) {\n  const { coltypeMap, data, filterState, formData, height, isRefreshing, width, setDataMask, setFocusedFilter, unsetFocusedFilter, appSection } = props;\n  const { enableEmptyFilter, multiSelect, showSearch, inverseSelection, inputRef, defaultToFirstItem, searchAllOptions } = formData;\n  const groupby = ensureIsArray(formData.groupby);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState });\n\n  const datatype = coltypeMap[col];\n  const labelFormatter = useMemo(() => getDataRecordFormatter({\n    timeFormatter: smartDateDetailedFormatter }),\n  []);\n  const updateDataMask = useCallback((values) => {\n    const emptyFilter = enableEmptyFilter && !inverseSelection && !(values != null && values.length);\n    const suffix = inverseSelection && values != null && values.length ? ` (${t('excluded')})` : '';\n    dispatchDataMask({\n      type: 'filterState',\n      __cache: filterState,\n      extraFormData: getSelectExtraFormData(col, values, emptyFilter, inverseSelection),\n      filterState: {\n        ...filterState,\n        label: values != null && values.length ?\n        `${(values || []).\n        map((value) => labelFormatter(value, datatype)).\n        join(', ')}${suffix}` :\n        undefined,\n        value: appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem ?\n        undefined :\n        values } });\n\n\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [\n  appSection,\n  col,\n  datatype,\n  defaultToFirstItem,\n  dispatchDataMask,\n  enableEmptyFilter,\n  inverseSelection,\n  JSON.stringify(filterState),\n  labelFormatter]);\n\n  useEffect(() => {\n    updateDataMask(filterState.value);\n  }, [JSON.stringify(filterState.value)]);\n  const isDisabled = appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n  const debouncedOwnStateFunc = useCallback(debounce((val) => {\n    dispatchDataMask({\n      type: 'ownState',\n      ownState: {\n        coltypeMap: initialColtypeMap,\n        search: val } });\n\n\n  }, SLOW_DEBOUNCE), []);\n  const searchWrapper = (val) => {\n    if (searchAllOptions) {\n      debouncedOwnStateFunc(val);\n    }\n  };\n  const clearSuggestionSearch = () => {\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null } });\n\n\n    }\n  };\n  const handleBlur = () => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n  };\n  const handleChange = (value) => {\n    const values = ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else\n    {\n      updateDataMask(values);\n    }\n  };\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem = data[0] ?\n      groupby.map((col) => data[0][col]) :\n      null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem && firstItem[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else\n    if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else\n    {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n  col,\n  isDisabled,\n  defaultToFirstItem,\n  enableEmptyFilter,\n  inverseSelection,\n  updateDataMask,\n  data,\n  groupby,\n  JSON.stringify(filterState)]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n  const placeholderText = data.length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  const formItemData = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = ___EmotionJSX(StatusMessage, { status: filterState.validateStatus, __self: this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 31 } },\n    filterState.validateMessage);\n\n  }\n  const options = useMemo(() => {\n    const options = [];\n    data.forEach((row) => {\n      const [value] = groupby.map((col) => row[col]);\n      options.push({\n        label: labelFormatter(value, datatype),\n        value });\n\n    });\n    return options;\n  }, [data, datatype, groupby, labelFormatter]);\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width, __self: this, __source: { fileName: _jsxFileName, lineNumber: 188, columnNumber: 13 } },\n  ___EmotionJSX(StyledFormItem, _extends({ validateStatus: filterState.validateStatus }, formItemData, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 189, columnNumber: 7 } }),\n  ___EmotionJSX(Select, { allowClear: true, allowNewOptions: true\n    // @ts-ignore\n    , value: filterState.value || [], disabled: isDisabled, showSearch: showSearch, mode: multiSelect ? 'multiple' : 'single', placeholder: placeholderText, onSearch: searchWrapper, onSelect: clearSuggestionSearch, onBlur: handleBlur, onMouseEnter: setFocusedFilter, onMouseLeave: unsetFocusedFilter\n    // @ts-ignore\n    , onChange: handleChange, ref: inputRef, loading: isRefreshing, maxTagCount: 5, invertSelection: inverseSelection\n    // @ts-ignore\n    , options: options, __self: this, __source: { fileName: _jsxFileName, lineNumber: 190, columnNumber: 9 } })));\n\n\n}__signature__(PluginFilterSelect, \"useState{[initialColtypeMap](coltypeMap)}\\nuseImmerReducer{[dataMask, dispatchDataMask]}\\nuseMemo{labelFormatter}\\nuseCallback{updateDataMask}\\nuseEffect{}\\nuseCallback{debouncedOwnStateFunc}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{options}\", () => [useImmerReducer]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reducer, \"reducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(PluginFilterSelect, \"PluginFilterSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport {\n  AppSection,\n  DataMask,\n  DataRecordValue,\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  JsonObject,\n  smartDateDetailedFormatter,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { Select } from 'src/components';\nimport debounce from 'lodash/debounce';\nimport { SLOW_DEBOUNCE } from 'src/constants';\nimport { useImmerReducer } from 'use-immer';\nimport { FormItemProps } from 'antd/lib/form';\nimport { PluginFilterSelectProps, SelectValue } from './types';\nimport { StyledFormItem, FilterPluginStyle, StatusMessage } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';\n\ntype DataMaskAction =\n  | { type: 'ownState'; ownState: JsonObject }\n  | {\n      type: 'filterState';\n      __cache: JsonObject;\n      extraFormData: ExtraFormData;\n      filterState: { value: SelectValue; label?: string };\n    };\n\nfunction reducer(\n  draft: DataMask & { __cache?: JsonObject },\n  action: DataMaskAction,\n) {\n  switch (action.type) {\n    case 'ownState':\n      draft.ownState = {\n        ...draft.ownState,\n        ...action.ownState,\n      };\n      return draft;\n    case 'filterState':\n      draft.extraFormData = action.extraFormData;\n      // eslint-disable-next-line no-underscore-dangle\n      draft.__cache = action.__cache;\n      draft.filterState = { ...draft.filterState, ...action.filterState };\n      return draft;\n    default:\n      return draft;\n  }\n}\n\nexport default function PluginFilterSelect(props: PluginFilterSelectProps) {\n  const {\n    coltypeMap,\n    data,\n    filterState,\n    formData,\n    height,\n    isRefreshing,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    appSection,\n  } = props;\n  const {\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    inverseSelection,\n    inputRef,\n    defaultToFirstItem,\n    searchAllOptions,\n  } = formData;\n  const groupby = ensureIsArray<string>(formData.groupby);\n  const [col] = groupby;\n  const [initialColtypeMap] = useState(coltypeMap);\n  const [dataMask, dispatchDataMask] = useImmerReducer(reducer, {\n    extraFormData: {},\n    filterState,\n  });\n  const datatype: GenericDataType = coltypeMap[col];\n  const labelFormatter = useMemo(\n    () =>\n      getDataRecordFormatter({\n        timeFormatter: smartDateDetailedFormatter,\n      }),\n    [],\n  );\n\n  const updateDataMask = useCallback(\n    (values: SelectValue) => {\n      const emptyFilter =\n        enableEmptyFilter && !inverseSelection && !values?.length;\n\n      const suffix =\n        inverseSelection && values?.length ? ` (${t('excluded')})` : '';\n\n      dispatchDataMask({\n        type: 'filterState',\n        __cache: filterState,\n        extraFormData: getSelectExtraFormData(\n          col,\n          values,\n          emptyFilter,\n          inverseSelection,\n        ),\n        filterState: {\n          ...filterState,\n          label: values?.length\n            ? `${(values || [])\n                .map(value => labelFormatter(value, datatype))\n                .join(', ')}${suffix}`\n            : undefined,\n          value:\n            appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem\n              ? undefined\n              : values,\n        },\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      appSection,\n      col,\n      datatype,\n      defaultToFirstItem,\n      dispatchDataMask,\n      enableEmptyFilter,\n      inverseSelection,\n      JSON.stringify(filterState),\n      labelFormatter,\n    ],\n  );\n\n  useEffect(() => {\n    updateDataMask(filterState.value);\n  }, [JSON.stringify(filterState.value)]);\n\n  const isDisabled =\n    appSection === AppSection.FILTER_CONFIG_MODAL && defaultToFirstItem;\n\n  const debouncedOwnStateFunc = useCallback(\n    debounce((val: string) => {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: val,\n        },\n      });\n    }, SLOW_DEBOUNCE),\n    [],\n  );\n\n  const searchWrapper = (val: string) => {\n    if (searchAllOptions) {\n      debouncedOwnStateFunc(val);\n    }\n  };\n\n  const clearSuggestionSearch = () => {\n    if (searchAllOptions) {\n      dispatchDataMask({\n        type: 'ownState',\n        ownState: {\n          coltypeMap: initialColtypeMap,\n          search: null,\n        },\n      });\n    }\n  };\n\n  const handleBlur = () => {\n    clearSuggestionSearch();\n    unsetFocusedFilter();\n  };\n\n  const handleChange = (value?: SelectValue | number | string) => {\n    const values = ensureIsArray(value);\n    if (values.length === 0) {\n      updateDataMask(null);\n    } else {\n      updateDataMask(values);\n    }\n  };\n\n  useEffect(() => {\n    if (defaultToFirstItem && filterState.value === undefined) {\n      // initialize to first value if set to default to first item\n      const firstItem: SelectValue = data[0]\n        ? (groupby.map(col => data[0][col]) as string[])\n        : null;\n      // firstItem[0] !== undefined for a case when groupby changed but new data still not fetched\n      // TODO: still need repopulate default value in config modal when column changed\n      if (firstItem && firstItem[0] !== undefined) {\n        updateDataMask(firstItem);\n      }\n    } else if (isDisabled) {\n      // empty selection if filter is disabled\n      updateDataMask(null);\n    } else {\n      // reset data mask based on filter state\n      updateDataMask(filterState.value);\n    }\n  }, [\n    col,\n    isDisabled,\n    defaultToFirstItem,\n    enableEmptyFilter,\n    inverseSelection,\n    updateDataMask,\n    data,\n    groupby,\n    JSON.stringify(filterState),\n  ]);\n\n  useEffect(() => {\n    setDataMask(dataMask);\n  }, [JSON.stringify(dataMask)]);\n\n  const placeholderText =\n    data.length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = useMemo(() => {\n    const options: { label: string; value: DataRecordValue }[] = [];\n    data.forEach(row => {\n      const [value] = groupby.map(col => row[col]);\n      options.push({\n        label: labelFormatter(value, datatype),\n        value,\n      });\n    });\n    return options;\n  }, [data, datatype, groupby, labelFormatter]);\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          allowNewOptions\n          // @ts-ignore\n          value={filterState.value || []}\n          disabled={isDisabled}\n          showSearch={showSearch}\n          mode={multiSelect ? 'multiple' : 'single'}\n          placeholder={placeholderText}\n          onSearch={searchWrapper}\n          onSelect={clearSuggestionSearch}\n          onBlur={handleBlur}\n          onMouseEnter={setFocusedFilter}\n          onMouseLeave={unsetFocusedFilter}\n          // @ts-ignore\n          onChange={handleChange}\n          ref={inputRef}\n          loading={isRefreshing}\n          maxTagCount={5}\n          invertSelection={inverseSelection}\n          // @ts-ignore\n          options={options}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}