{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { t } from '@superset-ui/core';\n\nimport { getDashboardFilterKey } from './getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from './constants';\nimport { DASHBOARD_ROOT_TYPE } from './componentTypes';\n\nexport default function getFilterFieldNodesTree({ dashboardFilters = {} }) {\n  const allFilters = Object.values(dashboardFilters).map((dashboardFilter) => {\n    const { chartId, filterName, columns, labels } = dashboardFilter;\n    const children = Object.keys(columns).map((column) => ({\n      value: getDashboardFilterKey({ chartId, column }),\n      label: labels[column] || column }));\n\n    return {\n      value: chartId,\n      label: filterName,\n      children,\n      showCheckbox: true };\n\n  });\n\n  return [\n  {\n    value: ALL_FILTERS_ROOT,\n    type: DASHBOARD_ROOT_TYPE,\n    label: t('All filters'),\n    children: allFilters }];\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getFilterFieldNodesTree, \"getFilterFieldNodesTree\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js\");reactHotLoader.register(getFilterFieldNodesTree, \"getFilterFieldNodesTree\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js"],"names":["getFilterFieldNodesTree","dashboardFilters","allFilters","children","Object","value","getDashboardFilterKey","label","labels","showCheckbox","type","t"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,CAAA,QAAA,mBAAA;;AAEA,SAAA,qBAAA,QAAA,yBAAA;AACA,SAAA,gBAAA,QAAA,aAAA;AACA,SAAA,mBAAA,QAAA,kBAAA;;AAEA,eAAe,SAAA,uBAAA,CAAiC,EAAEC,gBAAgB,GAAnD,EAAiC,EAAjC,EAA4D;AACzE,QAAMC,UAAU,GAAG,MAAM,CAAN,MAAA,CAAA,gBAAA,EAAA,GAAA,CAAoC,CAAA,eAAA,KAAmB;AACxE,UAAM,EAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA,MAAA,KAAN,eAAA;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAAAA,GAAAA,CAAyB,CAAA,MAAA,MAAW;AACnDC,MAAAA,KAAK,EAAEC,qBAAqB,CAAC,EAAA,OAAA,EADsB,MACtB,EAAD,CADuB;AAEnDC,MAAAA,KAAK,EAAEC,MAAM,CAANA,MAAM,CAANA,IAFT,MAAqD,EAAX,CAAzBJ,CAAjB;;AAIA,WAAO;AACLC,MAAAA,KAAK,EADA,OAAA;AAELE,MAAAA,KAAK,EAFA,UAAA;AAAA,MAAA,QAAA;AAILE,MAAAA,YAAY,EAJd,IAAO,EAAP;;AANF,GAAmB,CAAnB;;AAcA,SAAO;AACL;AACEJ,IAAAA,KAAK,EADP,gBAAA;AAEEK,IAAAA,IAAI,EAFN,mBAAA;AAGEH,IAAAA,KAAK,EAAEI,CAAC,CAHV,aAGU,CAHV;AAIER,IAAAA,QAAQ,EALZ,UACE,EADK,CAAP;;;kLAfsBH,uB,qnBAAT,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nimport { getDashboardFilterKey } from './getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from './constants';\nimport { DASHBOARD_ROOT_TYPE } from './componentTypes';\n\nexport default function getFilterFieldNodesTree({ dashboardFilters = {} }) {\n  const allFilters = Object.values(dashboardFilters).map(dashboardFilter => {\n    const { chartId, filterName, columns, labels } = dashboardFilter;\n    const children = Object.keys(columns).map(column => ({\n      value: getDashboardFilterKey({ chartId, column }),\n      label: labels[column] || column,\n    }));\n    return {\n      value: chartId,\n      label: filterName,\n      children,\n      showCheckbox: true,\n    };\n  });\n\n  return [\n    {\n      value: ALL_FILTERS_ROOT,\n      type: DASHBOARD_ROOT_TYPE,\n      label: t('All filters'),\n      children: allFilters,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}