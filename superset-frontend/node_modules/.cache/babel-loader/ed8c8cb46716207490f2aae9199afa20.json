{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import \"core-js/modules/es.string.replace.js\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport kebabCase from 'lodash/kebabCase';\n/**\n * @remark\n * same as https://github.com/apache/superset/blob/c53bc4ddf9808a8bb6916bbe3cb31935d33a2420/superset-frontend/src/assets/stylesheets/less/variables.less#L34\n */\n/**\n * generate a consistent file stem from a description and date\n *\n * @param description title or description of content of file\n * @param date date when file was generated\n */\nconst generateFileStem = (description, date = new Date()) => `${kebabCase(description)}-${date.toISOString().replace(/[: ]/g, '-')}`;\n/**\n * Create an event handler for turning an element into an image\n *\n * @param selector css selector of the parent element which should be turned into image\n * @param description name or a short description of what is being printed.\n *   Value will be normalized, and a date as well as a file extension will be added.\n * @param domToImageOptions dom-to-image Options object.\n * @param isExactSelector if false, searches for the closest ancestor that matches selector.\n * @returns event handler\n */\nexport default function downloadAsPdf(selector, description, isExactSelector = false) {\n  return (event) => {\n    const elementToPrint = isExactSelector ?\n    document.querySelector(selector) :\n    event.currentTarget.closest(selector);\n    if (!elementToPrint) {\n      return addWarningToast(t('Image download failed, please refresh and try again.'));\n    }\n    return html2canvas(document.querySelector('.dashboard')).then((canvas) => {\n      const dashboard = document.querySelector('.dashboard');\n      if (dashboard != null) {\n        var { offsetWidth: width, offsetHeight: height } = dashboard;\n      }\n      const imageData = document.body.appendChild(canvas);\n      const pdf = new jsPDF({\n        orientation: 'p',\n        unit: 'px',\n        format: [width, height],\n        putOnlyUsedFonts: true,\n        compress: true });\n\n      pdf.addImage(imageData, 'PNG', 0.5, 0.5, 0, 0);\n      pdf.save(`${generateFileStem(description)}.pdf`);\n      window.open(imageData.toDataURL());\n    });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(generateFileStem, \"generateFileStem\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/downLoadAsPdf.ts\");reactHotLoader.register(downloadAsPdf, \"downloadAsPdf\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/downLoadAsPdf.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/downLoadAsPdf.ts"],"names":[],"mappings":"qVAmBA,SAAS,CAAT,QAAkB,mBAAlB;AACA,SAAS,eAAT,QAAgC,sCAAhC;AACA,SAAS,KAAT,QAAsB,OAAtB;AACA,OAAO,WAAP,MAAwB,aAAxB;AACA,OAAO,SAAP,MAAsB,kBAAtB;AAEA;;;AAGG;AAEH;;;;;AAKG;AACH,MAAM,gBAAgB,GAAG,CAAC,WAAD,EAAsB,IAAI,GAAG,IAAI,IAAJ,EAA7B,KACvB,GAAG,SAAS,CAAC,WAAD,CAAa,IAAI,IAAI,CAAC,WAAL,GAAmB,OAAnB,CAA2B,OAA3B,EAAoC,GAApC,CAAwC,EADvE;AAGA;;;;;;;;;AASG;AACH,eAAc,SAAU,aAAV,CACZ,QADY,EAEZ,WAFY,EAGZ,eAAe,GAAG,KAHN,EAGW;AAEvB,SAAO,CAAC,KAAD,KAA0B;AAC/B,UAAM,cAAc,GAAG,eAAe;AAClC,IAAA,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CADkC;AAElC,IAAA,KAAK,CAAC,aAAN,CAAoB,OAApB,CAA4B,QAA5B,CAFJ;AAIA,QAAI,CAAC,cAAL,EAAqB;AACnB,aAAO,eAAe,CACpB,CAAC,CAAC,sDAAD,CADmB,CAAtB;AAGD;AAED,WAAO,WAAW,CAAE,QAAQ,CAAC,aAAT,CAAuB,YAAvB,CAAF,CAAX,CAAwE,IAAxE,CAA6E,CAAA,MAAM,KAAG;AAC3F,YAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAwB,YAAxB,CAAlB;AACA,UAAG,SAAS,IAAI,IAAhB,EAAsB;AACpB,YAAK,EAAE,WAAW,EAAE,KAAf,EAAsB,YAAY,EAAE,MAApC,KAAgD,SAArD;AACD;AACD,YAAM,SAAS,GAAG,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B,CAAlB;AACA,YAAM,GAAG,GAAG,IAAI,KAAJ,CAAU;AACpB,QAAA,WAAW,EAAE,GADO;AAEpB,QAAA,IAAI,EAAE,IAFc;AAGpB,QAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,CAHY;AAIpB,QAAA,gBAAgB,EAAE,IAJE;AAKpB,QAAA,QAAQ,EAAE,IALU,EAAV,CAAZ;;AAOA,MAAA,GAAG,CAAC,QAAJ,CAAa,SAAb,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,MAAA,GAAG,CAAC,IAAJ,CAAS,GAAG,gBAAgB,CAAC,WAAD,CAAa,MAAzC;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,SAAV,EAAZ;AACD,KAhBM,CAAP;AAiBD,GA5BD;AA6BD,C,iLA/CK,gB,8HAakB,a","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SyntheticEvent } from 'react';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport kebabCase from 'lodash/kebabCase';\n\n/**\n * @remark\n * same as https://github.com/apache/superset/blob/c53bc4ddf9808a8bb6916bbe3cb31935d33a2420/superset-frontend/src/assets/stylesheets/less/variables.less#L34\n */\n\n/**\n * generate a consistent file stem from a description and date\n *\n * @param description title or description of content of file\n * @param date date when file was generated\n */\nconst generateFileStem = (description: string, date = new Date()) =>\n  `${kebabCase(description)}-${date.toISOString().replace(/[: ]/g, '-')}`;\n\n/**\n * Create an event handler for turning an element into an image\n *\n * @param selector css selector of the parent element which should be turned into image\n * @param description name or a short description of what is being printed.\n *   Value will be normalized, and a date as well as a file extension will be added.\n * @param domToImageOptions dom-to-image Options object.\n * @param isExactSelector if false, searches for the closest ancestor that matches selector.\n * @returns event handler\n */\nexport default function downloadAsPdf(\n  selector: string,\n  description: string,\n  isExactSelector = false,\n) {\n  return (event: SyntheticEvent) => {\n    const elementToPrint = isExactSelector\n      ? document.querySelector(selector)\n      : event.currentTarget.closest(selector);\n\n    if (!elementToPrint) {\n      return addWarningToast(\n        t('Image download failed, please refresh and try again.'),\n      );\n    }\n\n    return html2canvas( document.querySelector('.dashboard') as HTMLCanvasElement).then(canvas => {\n      const dashboard = document.querySelector( '.dashboard' ) as HTMLCanvasElement | null;\n      if(dashboard != null) {\n        var  { offsetWidth: width, offsetHeight: height }  = dashboard;\n      }\n      const imageData = document.body.appendChild(canvas);\n      const pdf = new jsPDF({\n        orientation: 'p',\n        unit: 'px',\n        format: [width, height],\n        putOnlyUsedFonts: true,\n        compress: true,\n      });\n      pdf.addImage(imageData, 'PNG', 0.5, 0.5, 0, 0);\n      pdf.save(`${generateFileStem(description)}.pdf`);\n      window.open(imageData.toDataURL());\n    });\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}