{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { Modal } from 'src/common/components';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTabs: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  directPathToChild: [],\n  setActiveTabs() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {} };\n\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${({ theme }) => theme.gridUnit * 12.5}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    showDeleteConfirmModal = (key) => {\n      const { component, deleteComponent } = this.props;\n      Modal.confirm({\n        title: t('Delete dashboard tab?'),\n        content:\n        ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 198, columnNumber: 9 } }, \"Deleting a tab will remove all content within it. You may still reverse this action with the \",\n\n        ___EmotionJSX(\"b\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 200, columnNumber: 40 } }, \"undo\"), \" button (cmd + z) until you save your changes.\"),\n\n\n\n        onOk: () => {\n          deleteComponent(key, component.id);\n          const tabIndex = component.children.indexOf(key);\n          this.handleDeleteTab(tabIndex);\n        },\n        okType: 'danger',\n        okText: 'DELETE',\n        cancelText: 'CANCEL',\n        icon: null });\n\n    };this.\n\n    handleEdit = (key, action) => {\n      const { component, createComponent } = this.props;\n      if (action === 'add') {\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length },\n\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE } });\n\n\n      } else if (action === 'remove') {\n        this.showDeleteConfirmModal(key);\n      }\n    };const _tabIndex = Math.max(0, findTabIndexByComponentId({ currentComponent: props.component, directPathToChild: props.directPathToChild }));const { children: tabIds } = props.component;const activeKey = tabIds[_tabIndex];this.state = { tabIndex: _tabIndex, activeKey };this.handleClickTab = this.handleClickTab.bind(this);this.handleDeleteComponent = this.handleDeleteComponent.bind(this);this.handleDeleteTab = this.handleDeleteTab.bind(this);this.handleDropOnTab = this.handleDropOnTab.bind(this);this.handleDrop = this.handleDrop.bind(this);}componentDidMount() {this.props.setActiveTabs(this.state.activeKey);}componentDidUpdate(prevProps, prevState) {if (prevState.activeKey !== this.state.activeKey) {this.props.setActiveTabs(this.state.activeKey, prevState.activeKey);}}UNSAFE_componentWillReceiveProps(nextProps) {const maxIndex = Math.max(0, nextProps.component.children.length - 1);const currTabsIds = this.props.component.children;const nextTabsIds = nextProps.component.children;if (this.state.tabIndex > maxIndex) {this.setState(() => ({ tabIndex: maxIndex }));}if (nextTabsIds.length) {const lastTabId = nextTabsIds[nextTabsIds.length - 1]; // if a new tab is added focus on it immediately\n      if (nextTabsIds.length > currTabsIds.length) {// a new tab's path may be empty, here also need to set tabIndex\n        this.setState(() => ({ activeKey: lastTabId, tabIndex: maxIndex }));} // if a tab is removed focus on the first\n      if (nextTabsIds.length < currTabsIds.length) {this.setState(() => ({ activeKey: nextTabsIds[0] }));}}if (nextProps.isComponentVisible) {const nextFocusComponent = getLeafComponentIdFromPath(nextProps.directPathToChild);const currentFocusComponent = getLeafComponentIdFromPath(this.props.directPathToChild);if (nextFocusComponent !== currentFocusComponent) {const nextTabIndex = findTabIndexByComponentId({ currentComponent: nextProps.component, directPathToChild: nextProps.directPathToChild }); // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {this.setState(() => ({ tabIndex: nextTabIndex, activeKey: nextTabsIds[nextTabIndex] }));}}}}handleClickTab(tabIndex) {const { component } = this.props;const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex });\n\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    this.handleClickTab(Math.max(0, tabIndex - 1));\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n      destination.id === component.id ?\n      destination.index // dropped ON tabs\n      : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters } =\n    this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    if (nativeFilters != null && nativeFilters.focusedFilterId) {\n      tabsToHighlight =\n      nativeFilters.filters[nativeFilters.focusedFilterId].tabsInScope;\n    }\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: tabsComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: this.handleDrop,\n        editMode: editMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 313, columnNumber: 7 } },\n\n      ({\n        dropIndicatorProps: tabsDropIndicatorProps,\n        dragSourceRef: tabsDragSourceRef }) =>\n\n      ___EmotionJSX(StyledTabsContainer, {\n        className: \"dashboard-component dashboard-component-tabs\",\n        \"data-test\": \"dashboard-component-tabs\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 326, columnNumber: 11 } },\n\n      editMode && renderHoverMenu &&\n      ___EmotionJSX(HoverMenu, { innerRef: tabsDragSourceRef, position: \"left\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 331, columnNumber: 15 } },\n      ___EmotionJSX(DragHandle, { position: \"left\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 332, columnNumber: 17 } }),\n      ___EmotionJSX(DeleteComponentButton, { onDelete: this.handleDeleteComponent, __self: this, __source: { fileName: _jsxFileName, lineNumber: 333, columnNumber: 17 } })),\n\n\n\n      ___EmotionJSX(LineEditableTabs, {\n        id: tabsComponent.id,\n        activeKey: activeKey,\n        onChange: (key) => {\n          this.handleClickTab(tabIds.indexOf(key));\n        },\n        onEdit: this.handleEdit,\n        \"data-test\": \"nav-list\",\n        type: editMode ? 'editable-card' : 'card', __self: this, __source: { fileName: _jsxFileName, lineNumber: 337, columnNumber: 13 } },\n\n      tabIds.map((tabId, tabIndex) => {var _tabsToHighlight;return (\n          ___EmotionJSX(LineEditableTabs.TabPane, {\n            key: tabId,\n            tab:\n            ___EmotionJSX(DashboardComponent, {\n              id: tabId,\n              parentId: tabsComponent.id,\n              depth: depth,\n              index: tabIndex,\n              renderType: RENDER_TAB,\n              availableColumnCount: availableColumnCount,\n              columnWidth: columnWidth,\n              onDropOnTab: this.handleDropOnTab,\n              isFocused: activeKey === tabId,\n              isHighlighted:\n              activeKey !== tabId && ((_tabsToHighlight = tabsToHighlight) == null ? void 0 : _tabsToHighlight.includes(tabId)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 351, columnNumber: 21 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 348, columnNumber: 17 } },\n\n\n\n\n          renderTabContent &&\n          ___EmotionJSX(DashboardComponent, {\n            id: tabId,\n            parentId: tabsComponent.id,\n            depth: depth // see isValidChild.js for why tabs don't increment child depth\n            , index: tabIndex,\n            renderType: RENDER_TAB_CONTENT,\n            availableColumnCount: availableColumnCount,\n            columnWidth: columnWidth,\n            onResizeStart: onResizeStart,\n            onResize: onResize,\n            onResizeStop: onResizeStop,\n            onDropOnTab: this.handleDropOnTab,\n            isComponentVisible:\n            selectedTabIndex === tabIndex && isCurrentTabVisible, __self: this, __source: { fileName: _jsxFileName, lineNumber: 368, columnNumber: 21 } })));})),\n\n\n\n\n\n\n\n\n      tabsDropIndicatorProps &&\n      parentComponent.id !== DASHBOARD_ROOT_ID &&\n      ___EmotionJSX(\"div\", _extends({}, tabsDropIndicatorProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 392, columnNumber: 17 } })))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    directPathToChild: state.dashboardState.directPathToChild };\n\n}const _default =\nconnect(mapStateToProps)(Tabs);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(StyledTabsContainer, \"StyledTabsContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(Tabs, \"Tabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx"],"names":["React","PropTypes","styled","t","connect","LineEditableTabs","LOG_ACTIONS_SELECT_DASHBOARD_TAB","Modal","DragDroppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","componentShape","NEW_TAB_ID","DASHBOARD_ROOT_ID","RENDER_TAB","RENDER_TAB_CONTENT","TABS_TYPE","TAB_TYPE","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","renderTabContent","bool","editMode","renderHoverMenu","directPathToChild","arrayOf","logEvent","func","setActiveTabs","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","createComponent","handleComponentDrop","onChangeTab","deleteComponent","updateComponents","defaultProps","StyledTabsContainer","div","theme","colors","grayscale","light5","gridUnit","Tabs","PureComponent","constructor","props","showDeleteConfirmModal","key","confirm","title","content","onOk","tabIndex","children","indexOf","handleDeleteTab","okType","okText","cancelText","icon","handleEdit","action","destination","type","length","dragging","Math","max","currentComponent","tabIds","activeKey","state","handleClickTab","bind","handleDeleteComponent","handleDropOnTab","handleDrop","componentDidMount","componentDidUpdate","prevProps","prevState","UNSAFE_componentWillReceiveProps","nextProps","maxIndex","currTabsIds","nextTabsIds","setState","lastTabId","isComponentVisible","nextFocusComponent","currentFocusComponent","nextTabIndex","pathToTabIndex","targetTabId","target_id","dropResult","dropTabIndex","setTimeout","render","tabsComponent","isCurrentTabVisible","nativeFilters","selectedTabIndex","tabsToHighlight","focusedFilterId","filters","tabsInScope","dropIndicatorProps","tabsDropIndicatorProps","dragSourceRef","tabsDragSourceRef","map","tabId","includes","mapStateToProps","dashboardState"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { Modal } from 'src/common/components';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTabs: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  directPathToChild: [],\n  setActiveTabs() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${({ theme }) => theme.gridUnit * 12.5}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild: props.directPathToChild,\n      }),\n    );\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    this.state = {\n      tabIndex,\n      activeKey,\n    };\n    this.handleClickTab = this.handleClickTab.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleDeleteTab = this.handleDeleteTab.bind(this);\n    this.handleDropOnTab = this.handleDropOnTab.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setActiveTabs(this.state.activeKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeKey !== this.state.activeKey) {\n      this.props.setActiveTabs(this.state.activeKey, prevState.activeKey);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const maxIndex = Math.max(0, nextProps.component.children.length - 1);\n    const currTabsIds = this.props.component.children;\n    const nextTabsIds = nextProps.component.children;\n\n    if (this.state.tabIndex > maxIndex) {\n      this.setState(() => ({ tabIndex: maxIndex }));\n    }\n\n    if (nextTabsIds.length) {\n      const lastTabId = nextTabsIds[nextTabsIds.length - 1];\n      // if a new tab is added focus on it immediately\n      if (nextTabsIds.length > currTabsIds.length) {\n        // a new tab's path may be empty, here also need to set tabIndex\n        this.setState(() => ({\n          activeKey: lastTabId,\n          tabIndex: maxIndex,\n        }));\n      }\n      // if a tab is removed focus on the first\n      if (nextTabsIds.length < currTabsIds.length) {\n        this.setState(() => ({ activeKey: nextTabsIds[0] }));\n      }\n    }\n\n    if (nextProps.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(\n        nextProps.directPathToChild,\n      );\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        this.props.directPathToChild,\n      );\n\n      if (nextFocusComponent !== currentFocusComponent) {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: nextProps.component,\n          directPathToChild: nextProps.directPathToChild,\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {\n          this.setState(() => ({\n            tabIndex: nextTabIndex,\n            activeKey: nextTabsIds[nextTabIndex],\n          }));\n        }\n      }\n    }\n  }\n\n  showDeleteConfirmModal = key => {\n    const { component, deleteComponent } = this.props;\n    Modal.confirm({\n      title: t('Delete dashboard tab?'),\n      content: (\n        <span>\n          Deleting a tab will remove all content within it. You may still\n          reverse this action with the <b>undo</b> button (cmd + z) until you\n          save your changes.\n        </span>\n      ),\n      onOk: () => {\n        deleteComponent(key, component.id);\n        const tabIndex = component.children.indexOf(key);\n        this.handleDeleteTab(tabIndex);\n      },\n      okType: 'danger',\n      okText: 'DELETE',\n      cancelText: 'CANCEL',\n      icon: null,\n    });\n  };\n\n  handleEdit = (key, action) => {\n    const { component, createComponent } = this.props;\n    if (action === 'add') {\n      createComponent({\n        destination: {\n          id: component.id,\n          type: component.type,\n          index: component.children.length,\n        },\n        dragging: {\n          id: NEW_TAB_ID,\n          type: TAB_TYPE,\n        },\n      });\n    } else if (action === 'remove') {\n      this.showDeleteConfirmModal(key);\n    }\n  };\n\n  handleClickTab(tabIndex) {\n    const { component } = this.props;\n    const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex,\n      });\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    this.handleClickTab(Math.max(0, tabIndex - 1));\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n        destination.id === component.id\n          ? destination.index // dropped ON tabs\n          : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters,\n    } = this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    if (nativeFilters?.focusedFilterId) {\n      tabsToHighlight =\n        nativeFilters.filters[nativeFilters.focusedFilterId].tabsInScope;\n    }\n    return (\n      <DragDroppable\n        component={tabsComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={this.handleDrop}\n        editMode={editMode}\n      >\n        {({\n          dropIndicatorProps: tabsDropIndicatorProps,\n          dragSourceRef: tabsDragSourceRef,\n        }) => (\n          <StyledTabsContainer\n            className=\"dashboard-component dashboard-component-tabs\"\n            data-test=\"dashboard-component-tabs\"\n          >\n            {editMode && renderHoverMenu && (\n              <HoverMenu innerRef={tabsDragSourceRef} position=\"left\">\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n              </HoverMenu>\n            )}\n\n            <LineEditableTabs\n              id={tabsComponent.id}\n              activeKey={activeKey}\n              onChange={key => {\n                this.handleClickTab(tabIds.indexOf(key));\n              }}\n              onEdit={this.handleEdit}\n              data-test=\"nav-list\"\n              type={editMode ? 'editable-card' : 'card'}\n            >\n              {tabIds.map((tabId, tabIndex) => (\n                <LineEditableTabs.TabPane\n                  key={tabId}\n                  tab={\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth}\n                      index={tabIndex}\n                      renderType={RENDER_TAB}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onDropOnTab={this.handleDropOnTab}\n                      isFocused={activeKey === tabId}\n                      isHighlighted={\n                        activeKey !== tabId && tabsToHighlight?.includes(tabId)\n                      }\n                    />\n                  }\n                >\n                  {renderTabContent && (\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth} // see isValidChild.js for why tabs don't increment child depth\n                      index={tabIndex}\n                      renderType={RENDER_TAB_CONTENT}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onResizeStart={onResizeStart}\n                      onResize={onResize}\n                      onResizeStop={onResizeStop}\n                      onDropOnTab={this.handleDropOnTab}\n                      isComponentVisible={\n                        selectedTabIndex === tabIndex && isCurrentTabVisible\n                      }\n                    />\n                  )}\n                </LineEditableTabs.TabPane>\n              ))}\n            </LineEditableTabs>\n\n            {/* don't indicate that a drop on root is allowed when tabs already exist */}\n            {tabsDropIndicatorProps &&\n              parentComponent.id !== DASHBOARD_ROOT_ID && (\n                <div {...tabsDropIndicatorProps} />\n              )}\n          </StyledTabsContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    directPathToChild: state.dashboardState.directPathToChild,\n  };\n}\nexport default connect(mapStateToProps)(Tabs);\n"]},"metadata":{},"sourceType":"module"}