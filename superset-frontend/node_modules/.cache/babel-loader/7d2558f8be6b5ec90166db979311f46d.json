{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Icons from 'src/components/Icons';\nimport {\nCategoricalColorNamespace,\nSupersetClient,\nstyled,\nt } from\n'@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ReportModal from 'src/components/ReportModal';\nimport {\nfetchUISpecificReport,\ntoggleActive,\ndeleteActiveReport } from\n'src/reports/actions/reports';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport HeaderReportActionsDropdown from 'src/components/ReportModal/HeaderReportActionsDropdown';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport EditableTitle from 'src/components/EditableTitle';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport FaveStar from 'src/components/FaveStar';\nimport Timer from 'src/components/Timer';\nimport CachedLabel from 'src/components/CachedLabel';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport CertifiedIcon from 'src/components/CertifiedIcon';\nimport ExploreActionButtons from './ExploreActionButtons';\nimport RowCountLabel from './RowCountLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst CHART_STATUS_MAP = {\n  failed: 'danger',\n  loading: 'warning',\n  success: 'success' };\n\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape };\n\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n\n    > .btn-group {\n      flex: 0 0 auto;\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  .action-button {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    margin: 0 ${({ theme }) => theme.gridUnit * 1.5}px 0\n      ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledButtons = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport class ExploreChartHeader extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPropertiesModalOpen: false,\n      showingReportModal: false };\n\n    this.openPropertiesModal = this.openPropertiesModal.bind(this);\n    this.closePropertiesModal = this.closePropertiesModal.bind(this);\n    this.showReportModal = this.showReportModal.bind(this);\n    this.hideReportModal = this.hideReportModal.bind(this);\n    this.renderReportModal = this.renderReportModal.bind(this);\n    this.fetchChartDashboardData = this.fetchChartDashboardData.bind(this);\n  }\n\n  componentDidMount() {\n    const { dashboardId } = this.props;\n    if (this.canAddReports()) {\n      const { user, chart } = this.props;\n      // this is in the case that there is an anonymous user.\n      this.props.fetchUISpecificReport(\n      user.userId,\n      'chart_id',\n      'charts',\n      chart.id);\n\n    }\n    if (dashboardId) {\n      this.fetchChartDashboardData();\n    }\n  }\n\n  async fetchChartDashboardData() {\n    const { dashboardId, slice } = this.props;\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/chart/${slice.slice_id}` });\n\n    const chart = response.json.result;\n    const dashboards = chart.dashboards || [];\n    const dashboard =\n    dashboardId &&\n    dashboards.length &&\n    dashboards.find((d) => d.id === dashboardId);\n\n    if (dashboard && dashboard.json_metadata) {\n      // setting the chart to use the dashboard custom label colors if any\n      const labelColors =\n      JSON.parse(dashboard.json_metadata).label_colors || {};\n      const categoricalNamespace = CategoricalColorNamespace.getNamespace();\n\n      Object.keys(labelColors).forEach((label) => {\n        categoricalNamespace.setColor(label, labelColors[label]);\n      });\n    }\n  }\n\n  getSliceName() {\n    const { sliceName, table_name: tableName } = this.props;\n    const title = sliceName || t('%s - untitled', tableName);\n\n    return title;\n  }\n\n  postChartFormData() {\n    this.props.actions.postChartFormData(\n    this.props.form_data,\n    true,\n    this.props.timeout,\n    this.props.chart.id,\n    this.props.ownState);\n\n  }\n\n  openPropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: true });\n\n  }\n\n  closePropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: false });\n\n  }\n\n  showReportModal() {\n    this.setState({ showingReportModal: true });\n  }\n\n  hideReportModal() {\n    this.setState({ showingReportModal: false });\n  }\n\n  renderReportModal() {\n    const attachedReportExists = !!Object.keys(this.props.reports).length;\n    return attachedReportExists ?\n    ___EmotionJSX(HeaderReportActionsDropdown, {\n      showReportModal: this.showReportModal,\n      hideReportModal: this.hideReportModal,\n      toggleActive: this.props.toggleActive,\n      deleteActiveReport: this.props.deleteActiveReport, __self: this, __source: { fileName: _jsxFileName, lineNumber: 208, columnNumber: 7 } }) :\n\n\n    ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"span\", {\n      role: \"button\",\n      title: t('Schedule email report'),\n      tabIndex: 0,\n      className: \"action-button\",\n      onClick: this.showReportModal, __self: this, __source: { fileName: _jsxFileName, lineNumber: 216, columnNumber: 9 } },\n\n    ___EmotionJSX(Icons.Calendar, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 223, columnNumber: 11 } })));\n\n\n\n  }\n\n  canAddReports() {\n    if (!isFeatureEnabled(FeatureFlag.ALERT_REPORTS)) {\n      return false;\n    }\n    const { user } = this.props;\n    if (!user) {\n      // this is in the case that there is an anonymous user.\n      return false;\n    }\n    const roles = Object.keys(user.roles || []);\n    const permissions = roles.map((key) =>\n    user.roles[key].filter(\n    (perms) => perms[0] === 'menu_access' && perms[1] === 'Manage'));\n\n\n    return permissions[0].length > 0;\n  }\n\n  render() {\n    const { user, form_data: formData, slice } = this.props;\n    const {\n      chartStatus,\n      chartUpdateEndTime,\n      chartUpdateStartTime,\n      latestQueryFormData,\n      queriesResponse } =\n    this.props.chart;\n    // TODO: when will get appropriate design for multi queries use all results and not first only\n    const queryResponse = queriesResponse == null ? void 0 : queriesResponse[0];\n    const chartFinished = ['failed', 'rendered', 'success'].includes(\n    this.props.chart.chartStatus);\n\n    return (\n      ___EmotionJSX(StyledHeader, { id: \"slice-header\", className: \"panel-title-large\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 262, columnNumber: 7 } },\n      ___EmotionJSX(\"div\", { className: \"title-panel\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 263, columnNumber: 9 } },\n      (slice == null ? void 0 : slice.certified_by) &&\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(CertifiedIcon, {\n        certifiedBy: slice.certified_by,\n        details: slice.certification_details, __self: this, __source: { fileName: _jsxFileName, lineNumber: 266, columnNumber: 15 } }),\n      ' '),\n\n\n      ___EmotionJSX(EditableTitle, {\n        title: this.getSliceName(),\n        canEdit: !this.props.slice || this.props.can_overwrite,\n        onSaveTitle: this.props.actions.updateChartTitle, __self: this, __source: { fileName: _jsxFileName, lineNumber: 272, columnNumber: 11 } }),\n\n\n      this.props.slice &&\n      ___EmotionJSX(StyledButtons, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 279, columnNumber: 13 } },\n      user.userId &&\n      ___EmotionJSX(FaveStar, {\n        itemId: this.props.slice.slice_id,\n        fetchFaveStar: this.props.actions.fetchFaveStar,\n        saveFaveStar: this.props.actions.saveFaveStar,\n        isStarred: this.props.isStarred,\n        showTooltip: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 281, columnNumber: 17 } }),\n\n\n      ___EmotionJSX(PropertiesModal, {\n        show: this.state.isPropertiesModalOpen,\n        onHide: this.closePropertiesModal,\n        onSave: this.props.sliceUpdated,\n        slice: this.props.slice, __self: this, __source: { fileName: _jsxFileName, lineNumber: 289, columnNumber: 15 } }),\n\n      ___EmotionJSX(Tooltip, {\n        id: \"edit-desc-tooltip\",\n        title: t('Edit chart properties'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 295, columnNumber: 15 } },\n\n      ___EmotionJSX(\"span\", {\n        role: \"button\",\n        tabIndex: 0,\n        className: \"edit-desc-icon\",\n        onClick: this.openPropertiesModal, __self: this, __source: { fileName: _jsxFileName, lineNumber: 299, columnNumber: 17 } },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-edit\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 305, columnNumber: 19 } }))),\n\n\n      this.props.chart.sliceFormData &&\n      ___EmotionJSX(AlteredSliceTag, {\n        className: \"altered\",\n        origFormData: this.props.chart.sliceFormData,\n        currentFormData: formData, __self: this, __source: { fileName: _jsxFileName, lineNumber: 309, columnNumber: 17 } }))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"right-button-panel\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 318, columnNumber: 9 } },\n      chartFinished && queryResponse &&\n      ___EmotionJSX(RowCountLabel, {\n        rowcount: Number(queryResponse.rowcount) || 0,\n        limit: Number(formData.row_limit) || 0, __self: this, __source: { fileName: _jsxFileName, lineNumber: 320, columnNumber: 13 } }),\n\n\n      chartFinished && queryResponse && queryResponse.is_cached &&\n      ___EmotionJSX(CachedLabel, {\n        onClick: this.postChartFormData.bind(this),\n        cachedTimestamp: queryResponse.cached_dttm, __self: this, __source: { fileName: _jsxFileName, lineNumber: 326, columnNumber: 13 } }),\n\n\n      ___EmotionJSX(Timer, {\n        startTime: chartUpdateStartTime,\n        endTime: chartUpdateEndTime,\n        isRunning: chartStatus === 'loading',\n        status: CHART_STATUS_MAP[chartStatus], __self: this, __source: { fileName: _jsxFileName, lineNumber: 331, columnNumber: 11 } }),\n\n      this.canAddReports() && this.renderReportModal(),\n      ___EmotionJSX(ReportModal, {\n        show: this.state.showingReportModal,\n        onHide: this.hideReportModal,\n        props: {\n          userId: this.props.user.userId,\n          userEmail: this.props.user.email,\n          chart: this.props.chart,\n          creationMethod: 'charts' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 338, columnNumber: 11 } }),\n\n\n      ___EmotionJSX(ExploreActionButtons, {\n        actions: {\n          ...this.props.actions,\n          openPropertiesModal: this.openPropertiesModal },\n\n        slice: this.props.slice,\n        canDownloadCSV: this.props.can_download,\n        chartStatus: chartStatus,\n        latestQueryFormData: latestQueryFormData,\n        queryResponse: queryResponse, __self: this, __source: { fileName: _jsxFileName, lineNumber: 348, columnNumber: 11 } }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nExploreChartHeader.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  { sliceUpdated, fetchUISpecificReport, toggleActive, deleteActiveReport },\n  dispatch);\n\n}const _default =\n\nconnect(null, mapDispatchToProps)(ExploreChartHeader);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_STATUS_MAP, \"CHART_STATUS_MAP\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(StyledHeader, \"StyledHeader\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(StyledButtons, \"StyledButtons\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(ExploreChartHeader, \"ExploreChartHeader\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/ExploreChartHeader.jsx"],"names":["React","connect","bindActionCreators","PropTypes","Icons","CategoricalColorNamespace","SupersetClient","styled","t","Tooltip","ReportModal","fetchUISpecificReport","toggleActive","deleteActiveReport","isFeatureEnabled","FeatureFlag","HeaderReportActionsDropdown","chartPropShape","EditableTitle","AlteredSliceTag","FaveStar","Timer","CachedLabel","PropertiesModal","sliceUpdated","CertifiedIcon","ExploreActionButtons","RowCountLabel","CHART_STATUS_MAP","failed","loading","success","propTypes","actions","object","isRequired","addHistory","func","can_overwrite","bool","can_download","dashboardId","number","isStarred","slice","sliceName","string","table_name","form_data","ownState","timeout","chart","StyledHeader","div","theme","gridUnit","colors","grayscale","base","StyledButtons","span","ExploreChartHeader","PureComponent","constructor","props","state","isPropertiesModalOpen","showingReportModal","openPropertiesModal","bind","closePropertiesModal","showReportModal","hideReportModal","renderReportModal","fetchChartDashboardData","componentDidMount","canAddReports","user","userId","id","response","get","endpoint","slice_id","json","result","dashboards","dashboard","length","find","d","json_metadata","labelColors","JSON","parse","label_colors","categoricalNamespace","getNamespace","Object","keys","forEach","label","setColor","getSliceName","tableName","title","postChartFormData","setState","attachedReportExists","reports","ALERT_REPORTS","roles","permissions","map","key","filter","perms","render","formData","chartStatus","chartUpdateEndTime","chartUpdateStartTime","latestQueryFormData","queriesResponse","queryResponse","chartFinished","includes","certified_by","certification_details","updateChartTitle","fetchFaveStar","saveFaveStar","sliceFormData","Number","rowcount","row_limit","is_cached","cached_dttm","userEmail","email","creationMethod","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Icons from 'src/components/Icons';\nimport {\n  CategoricalColorNamespace,\n  SupersetClient,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ReportModal from 'src/components/ReportModal';\nimport {\n  fetchUISpecificReport,\n  toggleActive,\n  deleteActiveReport,\n} from 'src/reports/actions/reports';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport HeaderReportActionsDropdown from 'src/components/ReportModal/HeaderReportActionsDropdown';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport EditableTitle from 'src/components/EditableTitle';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport FaveStar from 'src/components/FaveStar';\nimport Timer from 'src/components/Timer';\nimport CachedLabel from 'src/components/CachedLabel';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport CertifiedIcon from 'src/components/CertifiedIcon';\nimport ExploreActionButtons from './ExploreActionButtons';\nimport RowCountLabel from './RowCountLabel';\n\nconst CHART_STATUS_MAP = {\n  failed: 'danger',\n  loading: 'warning',\n  success: 'success',\n};\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n};\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n\n    > .btn-group {\n      flex: 0 0 auto;\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  .action-button {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    margin: 0 ${({ theme }) => theme.gridUnit * 1.5}px 0\n      ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst StyledButtons = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport class ExploreChartHeader extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPropertiesModalOpen: false,\n      showingReportModal: false,\n    };\n    this.openPropertiesModal = this.openPropertiesModal.bind(this);\n    this.closePropertiesModal = this.closePropertiesModal.bind(this);\n    this.showReportModal = this.showReportModal.bind(this);\n    this.hideReportModal = this.hideReportModal.bind(this);\n    this.renderReportModal = this.renderReportModal.bind(this);\n    this.fetchChartDashboardData = this.fetchChartDashboardData.bind(this);\n  }\n\n  componentDidMount() {\n    const { dashboardId } = this.props;\n    if (this.canAddReports()) {\n      const { user, chart } = this.props;\n      // this is in the case that there is an anonymous user.\n      this.props.fetchUISpecificReport(\n        user.userId,\n        'chart_id',\n        'charts',\n        chart.id,\n      );\n    }\n    if (dashboardId) {\n      this.fetchChartDashboardData();\n    }\n  }\n\n  async fetchChartDashboardData() {\n    const { dashboardId, slice } = this.props;\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/chart/${slice.slice_id}`,\n    });\n    const chart = response.json.result;\n    const dashboards = chart.dashboards || [];\n    const dashboard =\n      dashboardId &&\n      dashboards.length &&\n      dashboards.find(d => d.id === dashboardId);\n\n    if (dashboard && dashboard.json_metadata) {\n      // setting the chart to use the dashboard custom label colors if any\n      const labelColors =\n        JSON.parse(dashboard.json_metadata).label_colors || {};\n      const categoricalNamespace = CategoricalColorNamespace.getNamespace();\n\n      Object.keys(labelColors).forEach(label => {\n        categoricalNamespace.setColor(label, labelColors[label]);\n      });\n    }\n  }\n\n  getSliceName() {\n    const { sliceName, table_name: tableName } = this.props;\n    const title = sliceName || t('%s - untitled', tableName);\n\n    return title;\n  }\n\n  postChartFormData() {\n    this.props.actions.postChartFormData(\n      this.props.form_data,\n      true,\n      this.props.timeout,\n      this.props.chart.id,\n      this.props.ownState,\n    );\n  }\n\n  openPropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: true,\n    });\n  }\n\n  closePropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: false,\n    });\n  }\n\n  showReportModal() {\n    this.setState({ showingReportModal: true });\n  }\n\n  hideReportModal() {\n    this.setState({ showingReportModal: false });\n  }\n\n  renderReportModal() {\n    const attachedReportExists = !!Object.keys(this.props.reports).length;\n    return attachedReportExists ? (\n      <HeaderReportActionsDropdown\n        showReportModal={this.showReportModal}\n        hideReportModal={this.hideReportModal}\n        toggleActive={this.props.toggleActive}\n        deleteActiveReport={this.props.deleteActiveReport}\n      />\n    ) : (\n      <>\n        <span\n          role=\"button\"\n          title={t('Schedule email report')}\n          tabIndex={0}\n          className=\"action-button\"\n          onClick={this.showReportModal}\n        >\n          <Icons.Calendar />\n        </span>\n      </>\n    );\n  }\n\n  canAddReports() {\n    if (!isFeatureEnabled(FeatureFlag.ALERT_REPORTS)) {\n      return false;\n    }\n    const { user } = this.props;\n    if (!user) {\n      // this is in the case that there is an anonymous user.\n      return false;\n    }\n    const roles = Object.keys(user.roles || []);\n    const permissions = roles.map(key =>\n      user.roles[key].filter(\n        perms => perms[0] === 'menu_access' && perms[1] === 'Manage',\n      ),\n    );\n    return permissions[0].length > 0;\n  }\n\n  render() {\n    const { user, form_data: formData, slice } = this.props;\n    const {\n      chartStatus,\n      chartUpdateEndTime,\n      chartUpdateStartTime,\n      latestQueryFormData,\n      queriesResponse,\n    } = this.props.chart;\n    // TODO: when will get appropriate design for multi queries use all results and not first only\n    const queryResponse = queriesResponse?.[0];\n    const chartFinished = ['failed', 'rendered', 'success'].includes(\n      this.props.chart.chartStatus,\n    );\n    return (\n      <StyledHeader id=\"slice-header\" className=\"panel-title-large\">\n        <div className=\"title-panel\">\n          {slice?.certified_by && (\n            <>\n              <CertifiedIcon\n                certifiedBy={slice.certified_by}\n                details={slice.certification_details}\n              />{' '}\n            </>\n          )}\n          <EditableTitle\n            title={this.getSliceName()}\n            canEdit={!this.props.slice || this.props.can_overwrite}\n            onSaveTitle={this.props.actions.updateChartTitle}\n          />\n\n          {this.props.slice && (\n            <StyledButtons>\n              {user.userId && (\n                <FaveStar\n                  itemId={this.props.slice.slice_id}\n                  fetchFaveStar={this.props.actions.fetchFaveStar}\n                  saveFaveStar={this.props.actions.saveFaveStar}\n                  isStarred={this.props.isStarred}\n                  showTooltip\n                />\n              )}\n              <PropertiesModal\n                show={this.state.isPropertiesModalOpen}\n                onHide={this.closePropertiesModal}\n                onSave={this.props.sliceUpdated}\n                slice={this.props.slice}\n              />\n              <Tooltip\n                id=\"edit-desc-tooltip\"\n                title={t('Edit chart properties')}\n              >\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"edit-desc-icon\"\n                  onClick={this.openPropertiesModal}\n                >\n                  <i className=\"fa fa-edit\" />\n                </span>\n              </Tooltip>\n              {this.props.chart.sliceFormData && (\n                <AlteredSliceTag\n                  className=\"altered\"\n                  origFormData={this.props.chart.sliceFormData}\n                  currentFormData={formData}\n                />\n              )}\n            </StyledButtons>\n          )}\n        </div>\n        <div className=\"right-button-panel\">\n          {chartFinished && queryResponse && (\n            <RowCountLabel\n              rowcount={Number(queryResponse.rowcount) || 0}\n              limit={Number(formData.row_limit) || 0}\n            />\n          )}\n          {chartFinished && queryResponse && queryResponse.is_cached && (\n            <CachedLabel\n              onClick={this.postChartFormData.bind(this)}\n              cachedTimestamp={queryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={chartStatus === 'loading'}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n          {this.canAddReports() && this.renderReportModal()}\n          <ReportModal\n            show={this.state.showingReportModal}\n            onHide={this.hideReportModal}\n            props={{\n              userId: this.props.user.userId,\n              userEmail: this.props.user.email,\n              chart: this.props.chart,\n              creationMethod: 'charts',\n            }}\n          />\n          <ExploreActionButtons\n            actions={{\n              ...this.props.actions,\n              openPropertiesModal: this.openPropertiesModal,\n            }}\n            slice={this.props.slice}\n            canDownloadCSV={this.props.can_download}\n            chartStatus={chartStatus}\n            latestQueryFormData={latestQueryFormData}\n            queryResponse={queryResponse}\n          />\n        </div>\n      </StyledHeader>\n    );\n  }\n}\n\nExploreChartHeader.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { sliceUpdated, fetchUISpecificReport, toggleActive, deleteActiveReport },\n    dispatch,\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(ExploreChartHeader);\n"]},"metadata":{},"sourceType":"module"}