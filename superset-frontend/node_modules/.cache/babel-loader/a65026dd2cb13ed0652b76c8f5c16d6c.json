{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// TODO: refactor this with `import { AsyncSelect } from src/components/Select`\nimport { Select } from 'src/components/Select';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  dataEndpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  mutator: PropTypes.func.isRequired,\n  onAsyncError: PropTypes.func,\n  value: PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.arrayOf(PropTypes.number)]),\n\n  valueRenderer: PropTypes.func,\n  placeholder: PropTypes.string,\n  autoSelect: PropTypes.bool };\n\n\nconst defaultProps = {\n  placeholder: t('Select ...'),\n  onAsyncError: () => {} };\n\n\nclass AsyncSelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      options: [] };\n\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchOptions();\n  }\n\n  onChange(option) {\n    this.props.onChange(option);\n  }\n\n  fetchOptions() {\n    this.setState({ isLoading: true });\n    const { mutator, dataEndpoint } = this.props;\n\n    return SupersetClient.get({ endpoint: dataEndpoint }).\n    then(({ json }) => {\n      const options = mutator ? mutator(json) : json;\n\n      this.setState({ options, isLoading: false });\n\n      if (!this.props.value && this.props.autoSelect && options.length > 0) {\n        this.onChange(options[0]);\n      }\n    }).\n    catch((response) =>\n    getClientErrorObject(response).then((error) => {\n      this.props.onAsyncError(error.error || error.statusText || error);\n      this.setState({ isLoading: false });\n    }));\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(Select, _extends({\n        placeholder: this.props.placeholder,\n        options: this.state.options,\n        value: this.props.value,\n        isLoading: this.state.isLoading,\n        onChange: this.onChange,\n        valueRenderer: this.props.valueRenderer },\n      this.props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 88, columnNumber: 7 } })));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAsyncSelect.propTypes = propTypes;\nAsyncSelect.defaultProps = defaultProps;const _default =\n\nAsyncSelect;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx\");reactHotLoader.register(AsyncSelect, \"AsyncSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/AsyncSelect/index.jsx"],"names":["React","PropTypes","Select","t","SupersetClient","getClientErrorObject","propTypes","dataEndpoint","string","isRequired","onChange","func","mutator","onAsyncError","value","oneOfType","number","arrayOf","valueRenderer","placeholder","autoSelect","bool","defaultProps","AsyncSelect","PureComponent","constructor","props","state","isLoading","options","bind","componentDidMount","fetchOptions","option","setState","get","endpoint","then","json","length","catch","response","error","statusText","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// TODO: refactor this with `import { AsyncSelect } from src/components/Select`\nimport { Select } from 'src/components/Select';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\n\nconst propTypes = {\n  dataEndpoint: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  mutator: PropTypes.func.isRequired,\n  onAsyncError: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  valueRenderer: PropTypes.func,\n  placeholder: PropTypes.string,\n  autoSelect: PropTypes.bool,\n};\n\nconst defaultProps = {\n  placeholder: t('Select ...'),\n  onAsyncError: () => {},\n};\n\nclass AsyncSelect extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      options: [],\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchOptions();\n  }\n\n  onChange(option) {\n    this.props.onChange(option);\n  }\n\n  fetchOptions() {\n    this.setState({ isLoading: true });\n    const { mutator, dataEndpoint } = this.props;\n\n    return SupersetClient.get({ endpoint: dataEndpoint })\n      .then(({ json }) => {\n        const options = mutator ? mutator(json) : json;\n\n        this.setState({ options, isLoading: false });\n\n        if (!this.props.value && this.props.autoSelect && options.length > 0) {\n          this.onChange(options[0]);\n        }\n      })\n      .catch(response =>\n        getClientErrorObject(response).then(error => {\n          this.props.onAsyncError(error.error || error.statusText || error);\n          this.setState({ isLoading: false });\n        }),\n      );\n  }\n\n  render() {\n    return (\n      <Select\n        placeholder={this.props.placeholder}\n        options={this.state.options}\n        value={this.props.value}\n        isLoading={this.state.isLoading}\n        onChange={this.onChange}\n        valueRenderer={this.props.valueRenderer}\n        {...this.props}\n      />\n    );\n  }\n}\n\nAsyncSelect.propTypes = propTypes;\nAsyncSelect.defaultProps = defaultProps;\n\nexport default AsyncSelect;\n"]},"metadata":{},"sourceType":"module"}