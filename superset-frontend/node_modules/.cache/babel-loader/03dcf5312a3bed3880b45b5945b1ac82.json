{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/DeleteModal/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useState } from 'react';\nimport { Input } from 'src/common/components';\nimport Modal from 'src/components/Modal';\nimport { FormLabel } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledDiv = styled.div`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    text-transform: uppercase;\n  }\n`;\nconst DescriptionContainer = styled.div`\n  line-height: 40px;\n  padding-top: 16px;\n`;\nexport default function DeleteModal({ description, onConfirm, onHide, open, title }) {\n  const [disableChange, setDisableChange] = useState(true);\n  const [confirmation, setConfirmation] = useState('');\n  const hide = () => {\n    setConfirmation('');\n    onHide();\n  };\n  const confirm = () => {\n    setConfirmation('');\n    onConfirm();\n  };\n  const onChange = (event) => {var _event$target$value;\n    const targetValue = (_event$target$value = event.target.value) != null ? _event$target$value : '';\n    setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n    setConfirmation(targetValue);\n  };\n  const onPressEnter = () => {\n    if (!disableChange) {\n      confirm();\n    }\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableChange, onHide: hide, onHandledPrimaryAction: confirm, primaryButtonName: t('delete'), primaryButtonType: \"danger\", show: open, title: title, __self: this, __source: { fileName: _jsxFileName, lineNumber: 57, columnNumber: 13 } },\n  ___EmotionJSX(DescriptionContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 58, columnNumber: 7 } }, description),\n  ___EmotionJSX(StyledDiv, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 59, columnNumber: 7 } },\n  ___EmotionJSX(FormLabel, { htmlFor: \"delete\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 60, columnNumber: 9 } },\n  t('Type \"%s\" to confirm', t('DELETE'))),\n\n  ___EmotionJSX(Input, { \"data-test\": \"delete-modal-input\", type: \"text\", id: \"delete\", autoComplete: \"off\", value: confirmation, onChange: onChange, onPressEnter: onPressEnter, __self: this, __source: { fileName: _jsxFileName, lineNumber: 63, columnNumber: 9 } })));\n\n\n}__signature__(DeleteModal, \"useState{[disableChange, setDisableChange](true)}\\nuseState{[confirmation, setConfirmation]('')}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledDiv, \"StyledDiv\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/DeleteModal/index.tsx\");reactHotLoader.register(DescriptionContainer, \"DescriptionContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/DeleteModal/index.tsx\");reactHotLoader.register(DeleteModal, \"DeleteModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/DeleteModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/DeleteModal/index.tsx"],"names":[],"mappings":"oZAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,CAAT,EAAY,MAAZ,QAA0B,mBAA1B;AACA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,KAAT,QAAsB,uBAAtB;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SAAS,SAAT,QAA0B,qBAA1B,C;AAEA,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG;;;;aAIf,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;;AAGxD,CAPD;AASA,MAAM,oBAAoB,GAAG,MAAM,CAAC,GAAG;;;AAGtC,CAHD;AAaA,eAAc,SAAU,WAAV,CAAsB,EAClC,WADkC,EAElC,SAFkC,EAGlC,MAHkC,EAIlC,IAJkC,EAKlC,KALkC,EAAtB,EAMK;AACjB,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAS,EAAT,CAAhD;AAEA,QAAM,IAAI,GAAG,MAAK;AAChB,IAAA,eAAe,CAAC,EAAD,CAAf;AACA,IAAA,MAAM;AACP,GAHD;AAKA,QAAM,OAAO,GAAG,MAAK;AACnB,IAAA,eAAe,CAAC,EAAD,CAAf;AACA,IAAA,SAAS;AACV,GAHD;AAKA,QAAM,QAAQ,GAAG,CAAC,KAAD,KAA+C;AAC9D,UAAM,WAAW,0BAAG,KAAK,CAAC,MAAN,CAAa,KAAhB,kCAAyB,EAA1C;AACA,IAAA,gBAAgB,CAAC,WAAW,CAAC,WAAZ,OAA8B,CAAC,CAAC,QAAD,CAAhC,CAAhB;AACA,IAAA,eAAe,CAAC,WAAD,CAAf;AACD,GAJD;AAMA,QAAM,YAAY,GAAG,MAAK;AACxB,QAAI,CAAC,aAAL,EAAoB;AAClB,MAAA,OAAO;AACR;AACF,GAJD;AAMA,SACE,cAAC,KAAD,IACE,oBAAoB,EAAE,aADxB,EAEE,MAAM,EAAE,IAFV,EAGE,sBAAsB,EAAE,OAH1B,EAIE,iBAAiB,EAAE,CAAC,CAAC,QAAD,CAJtB,EAKE,iBAAiB,EAAC,QALpB,EAME,IAAI,EAAE,IANR,EAOE,KAAK,EAAE,KAPT;AASE,gBAAC,oBAAD,2FAAuB,WAAvB,CATF;AAUE,gBAAC,SAAD;AACE,gBAAC,SAAD,IAAW,OAAO,EAAC,QAAnB;AACG,EAAA,CAAC,CAAC,sBAAD,EAAyB,CAAC,CAAC,QAAD,CAA1B,CADJ,CADF;;AAIE,gBAAC,KAAD,IACE,aAAU,oBADZ,EAEE,IAAI,EAAC,MAFP,EAGE,EAAE,EAAC,QAHL,EAIE,YAAY,EAAC,KAJf,EAKE,KAAK,EAAE,YALT,EAME,QAAQ,EAAE,QANZ,EAOE,YAAY,EAAE,YAPhB,wFAJF,CAVF,CADF;;;AA2BD,C,cA3DuB,W,uRAtBlB,S,iIASA,oB,4IAakB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useState } from 'react';\nimport { Input } from 'src/common/components';\nimport Modal from 'src/components/Modal';\nimport { FormLabel } from 'src/components/Form';\n\nconst StyledDiv = styled.div`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    text-transform: uppercase;\n  }\n`;\n\nconst DescriptionContainer = styled.div`\n  line-height: 40px;\n  padding-top: 16px;\n`;\n\ninterface DeleteModalProps {\n  description: React.ReactNode;\n  onConfirm: () => void;\n  onHide: () => void;\n  open: boolean;\n  title: React.ReactNode;\n}\n\nexport default function DeleteModal({\n  description,\n  onConfirm,\n  onHide,\n  open,\n  title,\n}: DeleteModalProps) {\n  const [disableChange, setDisableChange] = useState(true);\n  const [confirmation, setConfirmation] = useState<string>('');\n\n  const hide = () => {\n    setConfirmation('');\n    onHide();\n  };\n\n  const confirm = () => {\n    setConfirmation('');\n    onConfirm();\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = event.target.value ?? '';\n    setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n    setConfirmation(targetValue);\n  };\n\n  const onPressEnter = () => {\n    if (!disableChange) {\n      confirm();\n    }\n  };\n\n  return (\n    <Modal\n      disablePrimaryButton={disableChange}\n      onHide={hide}\n      onHandledPrimaryAction={confirm}\n      primaryButtonName={t('delete')}\n      primaryButtonType=\"danger\"\n      show={open}\n      title={title}\n    >\n      <DescriptionContainer>{description}</DescriptionContainer>\n      <StyledDiv>\n        <FormLabel htmlFor=\"delete\">\n          {t('Type \"%s\" to confirm', t('DELETE'))}\n        </FormLabel>\n        <Input\n          data-test=\"delete-modal-input\"\n          type=\"text\"\n          id=\"delete\"\n          autoComplete=\"off\"\n          value={confirmation}\n          onChange={onChange}\n          onPressEnter={onPressEnter}\n        />\n      </StyledDiv>\n    </Modal>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}