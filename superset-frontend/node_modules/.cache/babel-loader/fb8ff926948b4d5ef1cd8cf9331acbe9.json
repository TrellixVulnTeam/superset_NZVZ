{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined ?\n      ascending(value, minValue) < 0 :\n      ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined ?\n      compare(value, min) < 0 :\n      compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(least, \"least\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-array/src/least.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-array/src/least.js"],"names":["ascending","least","values","compare","min","defined","length","minValue","element","value"],"mappings":"uSAAA,OAAOA,SAAP,MAAsB,gBAAtB;;AAEA,eAAe,SAASC,KAAT,CAAeC,MAAf,EAAuBC,OAAO,GAAGH,SAAjC,EAA4C;AACzD,MAAII,GAAJ;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;AACxB,QAAIC,QAAJ;AACA,SAAK,MAAMC,OAAX,IAAsBN,MAAtB,EAA8B;AAC5B,YAAMO,KAAK,GAAGN,OAAO,CAACK,OAAD,CAArB;AACA,UAAIH,OAAO;AACLL,MAAAA,SAAS,CAACS,KAAD,EAAQF,QAAR,CAAT,GAA6B,CADxB;AAELP,MAAAA,SAAS,CAACS,KAAD,EAAQA,KAAR,CAAT,KAA4B,CAFlC,EAEqC;AACnCL,QAAAA,GAAG,GAAGI,OAAN;AACAD,QAAAA,QAAQ,GAAGE,KAAX;AACAJ,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,GAZD,MAYO;AACL,SAAK,MAAMI,KAAX,IAAoBP,MAApB,EAA4B;AAC1B,UAAIG,OAAO;AACLF,MAAAA,OAAO,CAACM,KAAD,EAAQL,GAAR,CAAP,GAAsB,CADjB;AAELD,MAAAA,OAAO,CAACM,KAAD,EAAQA,KAAR,CAAP,KAA0B,CAFhC,EAEmC;AACjCL,QAAAA,GAAG,GAAGK,KAAN;AACAJ,QAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF;AACD,SAAOD,GAAP;AACD,C,iLA1BuBH,K","sourcesContent":["import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n"]},"metadata":{},"sourceType":"module"}