{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { areObjectsEqual } from '../../../reduxUtils';\nexport const arrayDiff = (a, b) => [\n...a.filter((x) => !b.includes(x)),\n...b.filter((x) => !a.includes(x))];\n\nexport const getAffectedOwnDataCharts = (ownDataCharts, appliedOwnDataCharts) => {\n  const chartIds = Object.keys(ownDataCharts);\n  const appliedChartIds = Object.keys(appliedOwnDataCharts);\n  const affectedIds = arrayDiff(chartIds, appliedChartIds).filter((id) => ownDataCharts[id] || appliedOwnDataCharts[id]);\n  const checkForUpdateIds = new Set([...chartIds, ...appliedChartIds]);\n  checkForUpdateIds.forEach((chartId) => {\n    if (!areObjectsEqual(ownDataCharts[chartId], appliedOwnDataCharts[chartId])) {\n      affectedIds.push(chartId);\n    }\n  });\n  return [...new Set(affectedIds)];\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(arrayDiff, \"arrayDiff\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/charts/getOwnDataCharts.ts\");reactHotLoader.register(getAffectedOwnDataCharts, \"getAffectedOwnDataCharts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/charts/getOwnDataCharts.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/charts/getOwnDataCharts.ts"],"names":[],"mappings":"uSAmBA,SAAS,eAAT,QAAgC,qBAAhC;AAEA,OAAO,MAAM,SAAS,GAAG,CAAC,CAAD,EAAc,CAAd,KAA8B;AACrD,GAAG,CAAC,CAAC,MAAF,CAAS,CAAA,CAAC,KAAI,CAAC,CAAC,CAAC,QAAF,CAAW,CAAX,CAAf,CADkD;AAErD,GAAG,CAAC,CAAC,MAAF,CAAS,CAAA,CAAC,KAAI,CAAC,CAAC,CAAC,QAAF,CAAW,CAAX,CAAf,CAFkD,CAAhD;;AAKP,OAAO,MAAM,wBAAwB,GAAG,CACtC,aADsC,EAEtC,oBAFsC,KAGpC;AACF,QAAM,QAAQ,GAAG,MAAM,CAAC,IAAP,CAAY,aAAZ,CAAjB;AACA,QAAM,eAAe,GAAG,MAAM,CAAC,IAAP,CAAY,oBAAZ,CAAxB;AACA,QAAM,WAAW,GAAa,SAAS,CAAC,QAAD,EAAW,eAAX,CAAT,CAAqC,MAArC,CAC5B,CAAA,EAAE,KAAI,aAAa,CAAC,EAAD,CAAb,IAAqB,oBAAoB,CAAC,EAAD,CADnB,CAA9B;AAGA,QAAM,iBAAiB,GAAG,IAAI,GAAJ,CAAgB,CAAC,GAAG,QAAJ,EAAc,GAAG,eAAjB,CAAhB,CAA1B;AACA,EAAA,iBAAiB,CAAC,OAAlB,CAA0B,CAAA,OAAO,KAAG;AAClC,QACE,CAAC,eAAe,CAAC,aAAa,CAAC,OAAD,CAAd,EAAyB,oBAAoB,CAAC,OAAD,CAA7C,CADlB,EAEE;AACA,MAAA,WAAW,CAAC,IAAZ,CAAiB,OAAjB;AACD;AACF,GAND;AAOA,SAAO,CAAC,GAAG,IAAI,GAAJ,CAAQ,WAAR,CAAJ,CAAP;AACD,CAlBM,C,iLALM,S,0IAKA,wB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { areObjectsEqual } from '../../../reduxUtils';\n\nexport const arrayDiff = (a: string[], b: string[]) => [\n  ...a.filter(x => !b.includes(x)),\n  ...b.filter(x => !a.includes(x)),\n];\n\nexport const getAffectedOwnDataCharts = (\n  ownDataCharts: JsonObject,\n  appliedOwnDataCharts: JsonObject,\n) => {\n  const chartIds = Object.keys(ownDataCharts);\n  const appliedChartIds = Object.keys(appliedOwnDataCharts);\n  const affectedIds: string[] = arrayDiff(chartIds, appliedChartIds).filter(\n    id => ownDataCharts[id] || appliedOwnDataCharts[id],\n  );\n  const checkForUpdateIds = new Set<string>([...chartIds, ...appliedChartIds]);\n  checkForUpdateIds.forEach(chartId => {\n    if (\n      !areObjectsEqual(ownDataCharts[chartId], appliedOwnDataCharts[chartId])\n    ) {\n      affectedIds.push(chartId);\n    }\n  });\n  return [...new Set(affectedIds)];\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}