{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _debounce from \"lodash/debounce\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { max as d3Max } from 'd3-array';\nimport { AsyncCreatableSelect, CreatableSelect } from 'src/components/Select';\nimport Button from 'src/components/Button';\nimport { t, SupersetClient, ensureIsArray } from '@superset-ui/core';\n\nimport {\nBOOL_FALSE_DISPLAY,\nBOOL_TRUE_DISPLAY,\nSLOW_DEBOUNCE } from\n'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\nimport {\nFILTER_CONFIG_ATTRIBUTES,\nFILTER_OPTIONS_LIMIT,\nTIME_FILTER_LABELS,\nTIME_FILTER_MAP } from\n'src/explore/constants';\n\nimport './FilterBox.less';\n\n// a shortcut to a map key, used by many components\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";export const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n  PropTypes.shape({\n    field: PropTypes.string,\n    label: PropTypes.string })),\n\n\n  filtersChoices: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    filter: PropTypes.string,\n    metric: PropTypes.number }))),\n\n\n\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool };\n\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false };\n\n\nclass FilterBox extends React.PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);this.state = { selectedValues: props.origSelectedValues, // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false };this.debouncerCache = {};this.maxValueCache = {};this.changeFilter = this.changeFilter.bind(this);this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);this.onFilterMenuClose = this.onFilterMenuClose.bind(this);}onFilterMenuOpen(column) {return this.props.onFilterMenuOpen(this.props.chartId, column);}onFilterMenuClose(column) {return this.props.onFilterMenuClose(this.props.chartId, column);}onOpenDateFilterControl() {return this.onFilterMenuOpen(TIME_RANGE);}\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter } };\n\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n    this.maxValueCache[key] || 0,\n    d3Max(choices || this.props.filtersChoices[key] || [], (x) => x.metric));\n\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (Array.isArray(options)) {\n        vals = options.map((opt) => typeof opt === 'string' ? opt : opt.value);\n      } else if (Object.values(TIME_FILTER_MAP).includes(fltr)) {var _options$value;\n        vals = (_options$value = options.value) != null ? _options$value : options;\n      } else {var _options$value2;\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray((_options$value2 = options.value) != null ? _options$value2 : options);\n      }\n    }\n\n    this.setState(\n    (prevState) => ({\n      selectedValues: {\n        ...prevState.selectedValues,\n        [fltr]: vals },\n\n      hasChanged: true }),\n\n    () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = _debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, (x) => x.metric) : max;\n    return options.map((opt) => {\n      const perc = Math.round(opt.metric / maxValue * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue = '') {var _json$data;\n    const input = inputValue.toLowerCase();\n    const sortAsc = this.props.filtersFields.find((x) => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue ?\n      [\n      {\n        clause: 'WHERE',\n        expressionType: 'SIMPLE',\n        subject: key,\n        operator: 'ILIKE',\n        comparator: `%${input}%` }] :\n\n\n      null };\n\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET' }) });\n\n\n    const options = ((json == null ? void 0 : (_json$data = json.data) == null ? void 0 : _json$data[key]) || []).filter((x) => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      options.sort((a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = labelB.startsWith(input) - labelA.startsWith(input);\n        return textOrder === 0 ?\n        (a.metric - b.metric) * (sortAsc ? 1 : -1) :\n        textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        ___EmotionJSX(\"div\", { className: \"row space-1\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 265, columnNumber: 9 } },\n        ___EmotionJSX(\"div\", {\n          className: \"col-lg-12 col-xs-12\",\n          \"data-test\": \"date-filter-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 266, columnNumber: 11 } },\n\n        ___EmotionJSX(DateFilterControl, {\n          name: TIME_RANGE,\n          label: label,\n          description: t('Select start and end date'),\n          onChange: (newValue) => {\n            this.changeFilter(TIME_RANGE, newValue);\n          },\n          onOpenDateFilterControl: this.onOpenDateFilterControl,\n          onCloseDateFilterControl: this.onCloseDateFilterControl,\n          value: this.state.selectedValues[TIME_RANGE] || 'No filter', __self: this, __source: { fileName: _jsxFileName, lineNumber: 270, columnNumber: 13 } }))));\n\n\n\n\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin } =\n    this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"sqla-filters\",\n        controls: sqlaFilters.map((control) =>\n        ___EmotionJSX(Control, _extends({}, this.getControlData(control), { __self: this, __source: { fileName: _jsxFileName, lineNumber: 307, columnNumber: 13 } }))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 304, columnNumber: 9 } }));\n\n\n\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"druid-filters\",\n        controls: druidFilters.map((control) =>\n        ___EmotionJSX(Control, _extends({}, this.getControlData(control), { __self: this, __source: { fileName: _jsxFileName, lineNumber: 317, columnNumber: 13 } }))), __self: this, __source: { fileName: _jsxFileName, lineNumber: 314, columnNumber: 9 } }));\n\n\n\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues).\n    filter((key) => key in filtersChoices).\n    forEach((key) => {\n      // empty values are ignored\n      if (!selectedValues[key]) {\n        return;\n      }\n      const choices = filtersChoices[key] || (filtersChoices[key] = []);\n      const choiceIds = new Set(choices.map((f) => f.id));\n      const selectedValuesForKey = Array.isArray(selectedValues[key]) ?\n      selectedValues[key] :\n      [selectedValues[key]];\n      selectedValuesForKey.\n      filter((value) => value !== null && !choiceIds.has(value)).\n      forEach((value) => {\n        choices.unshift({\n          filter: key,\n          id: value,\n          text: value,\n          metric: 0 });\n\n      });\n    });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions } =\n    filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      ___EmotionJSX(OnPasteSelect, {\n        cacheOptions: true,\n        loadOptions: this.debounceLoadOptions(key),\n        defaultOptions: this.transformOptions(data),\n        key: key,\n        placeholder: t('Type or Select [%s]', label),\n        isMulti: isMultiple,\n        isClearable: isClearable,\n        value: value,\n        options: this.transformOptions(data),\n        onChange: (newValue) => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        , onMenuOpen: () => this.onFilterMenuOpen(key),\n        onBlur: () => this.onFilterMenuClose(key),\n        onMenuClose: () => this.onFilterMenuClose(key),\n        selectWrap:\n        searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT ?\n        AsyncCreatableSelect :\n        CreatableSelect,\n\n        noResultsText: t('No results found'),\n        forceOverflow: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 374, columnNumber: 7 } }));\n\n\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return filtersFields.map((filterConfig) => {\n      const { label, key } = filterConfig;\n      return (\n        ___EmotionJSX(\"div\", { key: key, className: \"m-b-5 filter-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 411, columnNumber: 9 } },\n        ___EmotionJSX(FormLabel, { htmlFor: `LABEL-${key}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 412, columnNumber: 11 } }, label),\n        this.renderSelect(filterConfig)));\n\n\n    });\n  }\n\n  render() {\n    const { instantFiltering, width, height } = this.props;\n    return (\n      ___EmotionJSX(\"div\", { style: { width, height, overflow: 'auto' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 422, columnNumber: 7 } },\n      this.renderDateFilter(),\n      this.renderDatasourceFilters(),\n      this.renderFilters(),\n      !instantFiltering &&\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        onClick: this.clickApply.bind(this),\n        disabled: !this.state.hasChanged, __self: this, __source: { fileName: _jsxFileName, lineNumber: 427, columnNumber: 11 } },\n\n      t('Apply'))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;const _default =\n\nFilterBox;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_RANGE, \"TIME_RANGE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(FilterBox, \"FilterBox\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx"],"names":["React","PropTypes","max","d3Max","AsyncCreatableSelect","CreatableSelect","Button","t","SupersetClient","ensureIsArray","BOOL_FALSE_DISPLAY","BOOL_TRUE_DISPLAY","SLOW_DEBOUNCE","FormLabel","DateFilterControl","ControlRow","Control","controls","getExploreUrl","OnPasteSelect","FILTER_CONFIG_ATTRIBUTES","FILTER_OPTIONS_LIMIT","TIME_FILTER_LABELS","TIME_FILTER_MAP","TIME_RANGE","time_range","propTypes","chartId","number","isRequired","origSelectedValues","object","datasource","instantFiltering","bool","filtersFields","arrayOf","shape","field","string","label","filtersChoices","objectOf","id","text","filter","metric","onChange","func","onFilterMenuOpen","onFilterMenuClose","showDateFilter","showSqlaTimeGrain","showSqlaTimeColumn","showDruidTimeGrain","showDruidTimeOrigin","defaultProps","FilterBox","PureComponent","constructor","props","onCloseDateFilterControl","state","selectedValues","hasChanged","debouncerCache","maxValueCache","changeFilter","bind","onOpenDateFilterControl","column","getControlData","controlName","control","name","key","value","actions","setControlValue","mapFunc","mapStateToProps","getKnownMax","choices","Math","x","clickApply","setState","options","fltr","vals","Array","isArray","map","opt","Object","values","includes","prevState","debounceLoadOptions","input","callback","loadOptions","then","transformOptions","maxValue","undefined","perc","round","color","backgroundImage","style","inputValue","toLowerCase","sortAsc","find","asc","formData","rawFormData","adhoc_filters","clause","expressionType","subject","operator","comparator","json","get","url","endpointType","method","data","length","sort","a","b","labelA","labelB","textOrder","startsWith","renderDateFilter","newValue","renderDatasourceFilters","datasourceFilters","sqlaFilters","druidFilters","push","renderSelect","filterConfig","keys","forEach","choiceIds","Set","f","selectedValuesForKey","has","unshift","MULTIPLE","isMultiple","DEFAULT_VALUE","defaultValue","CLEARABLE","isClearable","SEARCH_ALL_OPTIONS","searchAllOptions","split","renderFilters","render","width","height","overflow"],"mappings":"ggBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,GAAG,IAAIC,KAAhB,QAA6B,UAA7B;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,uBAAtD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,CAAT,EAAYC,cAAZ,EAA4BC,aAA5B,QAAiD,mBAAjD;;AAEA;AACEC,kBADF;AAEEC,iBAFF;AAGEC,aAHF;AAIO,eAJP;AAKA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,mDAA9B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA;AACEC,wBADF;AAEEC,oBAFF;AAGEC,kBAHF;AAIEC,eAJF;AAKO,uBALP;;AAOA,OAAO,kBAAP;;AAEA;sDACA,OAAO,MAAMC,UAAU,GAAGD,eAAe,CAACE,UAAnC;;AAEP,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBC,UADV;AAEhBC,EAAAA,kBAAkB,EAAE7B,SAAS,CAAC8B,MAFd;AAGhBC,EAAAA,UAAU,EAAE/B,SAAS,CAAC8B,MAAV,CAAiBF,UAHb;AAIhBI,EAAAA,gBAAgB,EAAEhC,SAAS,CAACiC,IAJZ;AAKhBC,EAAAA,aAAa,EAAElC,SAAS,CAACmC,OAAV;AACbnC,EAAAA,SAAS,CAACoC,KAAV,CAAgB;AACdC,IAAAA,KAAK,EAAErC,SAAS,CAACsC,MADH;AAEdC,IAAAA,KAAK,EAAEvC,SAAS,CAACsC,MAFH,EAAhB,CADa,CALC;;;AAWhBE,EAAAA,cAAc,EAAExC,SAAS,CAACyC,QAAV;AACdzC,EAAAA,SAAS,CAACmC,OAAV;AACEnC,EAAAA,SAAS,CAACoC,KAAV,CAAgB;AACdM,IAAAA,EAAE,EAAE1C,SAAS,CAACsC,MADA;AAEdK,IAAAA,IAAI,EAAE3C,SAAS,CAACsC,MAFF;AAGdM,IAAAA,MAAM,EAAE5C,SAAS,CAACsC,MAHJ;AAIdO,IAAAA,MAAM,EAAE7C,SAAS,CAAC2B,MAJJ,EAAhB,CADF,CADc,CAXA;;;;AAqBhBmB,EAAAA,QAAQ,EAAE9C,SAAS,CAAC+C,IArBJ;AAsBhBC,EAAAA,gBAAgB,EAAEhD,SAAS,CAAC+C,IAtBZ;AAuBhBE,EAAAA,iBAAiB,EAAEjD,SAAS,CAAC+C,IAvBb;AAwBhBG,EAAAA,cAAc,EAAElD,SAAS,CAACiC,IAxBV;AAyBhBkB,EAAAA,iBAAiB,EAAEnD,SAAS,CAACiC,IAzBb;AA0BhBmB,EAAAA,kBAAkB,EAAEpD,SAAS,CAACiC,IA1Bd;AA2BhBoB,EAAAA,kBAAkB,EAAErD,SAAS,CAACiC,IA3Bd;AA4BhBqB,EAAAA,mBAAmB,EAAEtD,SAAS,CAACiC,IA5Bf,EAAlB;;AA8BA,MAAMsB,YAAY,GAAG;AACnB1B,EAAAA,kBAAkB,EAAE,EADD;AAEnBiB,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFC;AAGnBE,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAHP;AAInBC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CAJR;AAKnBC,EAAAA,cAAc,EAAE,KALG;AAMnBC,EAAAA,iBAAiB,EAAE,KANA;AAOnBC,EAAAA,kBAAkB,EAAE,KAPD;AAQnBC,EAAAA,kBAAkB,EAAE,KARD;AASnBC,EAAAA,mBAAmB,EAAE,KATF;AAUnBtB,EAAAA,gBAAgB,EAAE,KAVC,EAArB;;;AAaA,MAAMwB,SAAN,SAAwBzD,KAAK,CAAC0D,aAA9B,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BnBC,IAAAA,wBA3BmB,GA2BQ,MAAM,KAAKX,iBAAL,CAAuB1B,UAAvB,CA3Bd,CAEjB,KAAKsC,KAAL,GAAa,EACXC,cAAc,EAAEH,KAAK,CAAC9B,kBADX,EAEX;AACAkC,MAAAA,UAAU,EAAE,KAHD,EAAb,CAKA,KAAKC,cAAL,GAAsB,EAAtB,CACA,KAAKC,aAAL,GAAqB,EAArB,CACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CACA,KAAKnB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBmB,IAAtB,CAA2B,IAA3B,CAAxB,CACA,KAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B,CACA,KAAKlB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBkB,IAAvB,CAA4B,IAA5B,CAAzB,CACD,CAEDnB,gBAAgB,CAACqB,MAAD,EAAS,CACvB,OAAO,KAAKV,KAAL,CAAWX,gBAAX,CAA4B,KAAKW,KAAL,CAAWjC,OAAvC,EAAgD2C,MAAhD,CAAP,CACD,CAEDpB,iBAAiB,CAACoB,MAAD,EAAS,CACxB,OAAO,KAAKV,KAAL,CAAWV,iBAAX,CAA6B,KAAKU,KAAL,CAAWjC,OAAxC,EAAiD2C,MAAjD,CAAP,CACD,CAEDD,uBAAuB,GAAG,CACxB,OAAO,KAAKpB,gBAAL,CAAsBzB,UAAtB,CAAP,CACD;AAID+C,EAAAA,cAAc,CAACC,WAAD,EAAc;AAC1B,UAAM,EAAET,cAAF,KAAqB,KAAKD,KAAhC;AACA,UAAMW,OAAO,GAAG;AACd,SAAGxD,QAAQ,CAACuD,WAAD,CADG,EACY;AAC1BE,MAAAA,IAAI,EAAEF,WAFQ;AAGdG,MAAAA,GAAG,EAAG,WAAUH,WAAY,EAHd;AAIdI,MAAAA,KAAK,EAAEb,cAAc,CAACxC,eAAe,CAACiD,WAAD,CAAhB,CAJP;AAKdK,MAAAA,OAAO,EAAE,EAAEC,eAAe,EAAE,KAAKX,YAAxB,EALK,EAAhB;;AAOA,UAAMY,OAAO,GAAGN,OAAO,CAACO,eAAxB;AACA,WAAOD,OAAO,GAAG,EAAE,GAAGN,OAAL,EAAc,GAAGM,OAAO,CAAC,KAAKnB,KAAN,CAAxB,EAAH,GAA4Ca,OAA1D;AACD;;AAED;AACF;AACA;AACEQ,EAAAA,WAAW,CAACN,GAAD,EAAMO,OAAN,EAAe;AACxB,SAAKhB,aAAL,CAAmBS,GAAnB,IAA0BQ,IAAI,CAACjF,GAAL;AACxB,SAAKgE,aAAL,CAAmBS,GAAnB,KAA2B,CADH;AAExBxE,IAAAA,KAAK,CAAC+E,OAAO,IAAI,KAAKtB,KAAL,CAAWnB,cAAX,CAA0BkC,GAA1B,CAAX,IAA6C,EAA9C,EAAkD,CAAAS,CAAC,KAAIA,CAAC,CAACtC,MAAzD,CAFmB,CAA1B;;AAIA,WAAO,KAAKoB,aAAL,CAAmBS,GAAnB,CAAP;AACD;;AAEDU,EAAAA,UAAU,GAAG;AACX,UAAM,EAAEtB,cAAF,KAAqB,KAAKD,KAAhC;AACA,SAAKwB,QAAL,CAAc,EAAEtB,UAAU,EAAE,KAAd,EAAd,EAAqC,MAAM;AACzC,WAAKJ,KAAL,CAAWb,QAAX,CAAoBgB,cAApB,EAAoC,KAApC;AACD,KAFD;AAGD;;AAEDI,EAAAA,YAAY,CAACtB,MAAD,EAAS0C,OAAT,EAAkB;AAC5B,UAAMC,IAAI,GAAGjE,eAAe,CAACsB,MAAD,CAAf,IAA2BA,MAAxC;AACA,QAAI4C,IAAI,GAAG,IAAX;AACA,QAAIF,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAIG,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAJ,EAA4B;AAC1BE,QAAAA,IAAI,GAAGF,OAAO,CAACK,GAAR,CAAY,CAAAC,GAAG,KAAK,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACjB,KAAxD,CAAP;AACD,OAFD,MAEO,IAAIkB,MAAM,CAACC,MAAP,CAAcxE,eAAd,EAA+ByE,QAA/B,CAAwCR,IAAxC,CAAJ,EAAmD;AACxDC,QAAAA,IAAI,qBAAGF,OAAO,CAACX,KAAX,6BAAoBW,OAAxB;AACD,OAFM,MAEA;AACL;AACAE,QAAAA,IAAI,GAAGhF,aAAa,oBAAC8E,OAAO,CAACX,KAAT,8BAAkBW,OAAlB,CAApB;AACD;AACF;;AAED,SAAKD,QAAL;AACE,KAAAW,SAAS,MAAK;AACZlC,MAAAA,cAAc,EAAE;AACd,WAAGkC,SAAS,CAAClC,cADC;AAEd,SAACyB,IAAD,GAAQC,IAFM,EADJ;;AAKZzB,MAAAA,UAAU,EAAE,IALA,EAAL,CADX;;AAQE,UAAM;AACJ,UAAI,KAAKJ,KAAL,CAAW3B,gBAAf,EAAiC;AAC/B,aAAK2B,KAAL,CAAWb,QAAX,CAAoB,EAAE,CAACyC,IAAD,GAAQC,IAAV,EAApB,EAAsC,KAAtC;AACD;AACF,KAZH;;AAcD;;AAED;AACF;AACA;AACES,EAAAA,mBAAmB,CAACvB,GAAD,EAAM;AACvB,QAAI,EAAEA,GAAG,IAAI,KAAKV,cAAd,CAAJ,EAAmC;AACjC,WAAKA,cAAL,CAAoBU,GAApB,IAA2B,UAAS,CAACwB,KAAD,EAAQC,QAAR,KAAqB;AACvD,aAAKC,WAAL,CAAiB1B,GAAjB,EAAsBwB,KAAtB,EAA6BG,IAA7B,CAAkCF,QAAlC;AACD,OAF0B,EAExBxF,aAFwB,CAA3B;AAGD;AACD,WAAO,KAAKqD,cAAL,CAAoBU,GAApB,CAAP;AACD;;AAED;AACF;AACA;AACE4B,EAAAA,gBAAgB,CAAChB,OAAD,EAAUrF,GAAV,EAAe;AAC7B,UAAMsG,QAAQ,GAAGtG,GAAG,KAAKuG,SAAR,GAAoBtG,KAAK,CAACoF,OAAD,EAAU,CAAAH,CAAC,KAAIA,CAAC,CAACtC,MAAjB,CAAzB,GAAoD5C,GAArE;AACA,WAAOqF,OAAO,CAACK,GAAR,CAAY,CAAAC,GAAG,KAAI;AACxB,YAAMa,IAAI,GAAGvB,IAAI,CAACwB,KAAL,CAAYd,GAAG,CAAC/C,MAAJ,GAAa0D,QAAd,GAA0B,GAArC,CAAb;AACA,YAAMI,KAAK,GAAG,WAAd;AACA,YAAMC,eAAe,GAAI,6BAA4BD,KAAM,KAAIA,KAAM,IAAGF,IAAK,oBAAmBA,IAAK,GAArG;AACA,YAAMI,KAAK,GAAG,EAAED,eAAF,EAAd;AACA,UAAIrE,KAAK,GAAGqD,GAAG,CAAClD,EAAhB;AACA,UAAIH,KAAK,KAAK,IAAd,EAAoB;AAClBA,QAAAA,KAAK,GAAG7B,iBAAR;AACD,OAFD,MAEO,IAAI6B,KAAK,KAAK,KAAd,EAAqB;AAC1BA,QAAAA,KAAK,GAAG9B,kBAAR;AACD;AACD,aAAO,EAAEkE,KAAK,EAAEiB,GAAG,CAAClD,EAAb,EAAiBH,KAAjB,EAAwBsE,KAAxB,EAAP;AACD,KAZM,CAAP;AAaD;;AAEgB,QAAXT,WAAW,CAAC1B,GAAD,EAAMoC,UAAU,GAAG,EAAnB,EAAuB;AACtC,UAAMZ,KAAK,GAAGY,UAAU,CAACC,WAAX,EAAd;AACA,UAAMC,OAAO,GAAG,KAAKrD,KAAL,CAAWzB,aAAX,CAAyB+E,IAAzB,CAA8B,CAAA9B,CAAC,KAAIA,CAAC,CAACT,GAAF,KAAUA,GAA7C,EAAkDwC,GAAlE;AACA,UAAMC,QAAQ,GAAG;AACf,SAAG,KAAKxD,KAAL,CAAWyD,WADC;AAEfC,MAAAA,aAAa,EAAEP,UAAU;AACrB;AACE;AACEQ,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,cAAc,EAAE,QAFlB;AAGEC,QAAAA,OAAO,EAAE9C,GAHX;AAIE+C,QAAAA,QAAQ,EAAE,OAJZ;AAKEC,QAAAA,UAAU,EAAG,IAAGxB,KAAM,GALxB,EADF,CADqB;;;AAUrB,UAZW,EAAjB;;;AAeA,UAAM,EAAEyB,IAAF,KAAW,MAAMpH,cAAc,CAACqH,GAAf,CAAmB;AACxCC,MAAAA,GAAG,EAAE5G,aAAa,CAAC;AACjBkG,QAAAA,QADiB;AAEjBW,QAAAA,YAAY,EAAE,MAFG;AAGjBC,QAAAA,MAAM,EAAE,KAHS,EAAD,CADsB,EAAnB,CAAvB;;;AAOA,UAAMzC,OAAO,GAAG,CAAC,CAAAqC,IAAI,QAAJ,0BAAAA,IAAI,CAAEK,IAAN,gCAAatD,GAAb,MAAqB,EAAtB,EAA0B9B,MAA1B,CAAiC,CAAAuC,CAAC,KAAIA,CAAC,CAACzC,EAAxC,CAAhB;AACA,QAAI,CAAC4C,OAAD,IAAYA,OAAO,CAAC2C,MAAR,KAAmB,CAAnC,EAAsC;AACpC,aAAO,EAAP;AACD;AACD,QAAI/B,KAAJ,EAAW;AACT;AACAZ,MAAAA,OAAO,CAAC4C,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,cAAMC,MAAM,GAAGF,CAAC,CAACzF,EAAF,CAAKqE,WAAL,EAAf;AACA,cAAMuB,MAAM,GAAGF,CAAC,CAAC1F,EAAF,CAAKqE,WAAL,EAAf;AACA,cAAMwB,SAAS,GAAGD,MAAM,CAACE,UAAP,CAAkBtC,KAAlB,IAA2BmC,MAAM,CAACG,UAAP,CAAkBtC,KAAlB,CAA7C;AACA,eAAOqC,SAAS,KAAK,CAAd;AACH,SAACJ,CAAC,CAACtF,MAAF,GAAWuF,CAAC,CAACvF,MAAd,KAAyBmE,OAAO,GAAG,CAAH,GAAO,CAAC,CAAxC,CADG;AAEHuB,QAAAA,SAFJ;AAGD,OAPD;AAQD;AACD,WAAO,KAAKjC,gBAAL,CAAsBhB,OAAtB,EAA+B,KAAKN,WAAL,CAAiBN,GAAjB,EAAsBY,OAAtB,CAA/B,CAAP;AACD;;AAEDmD,EAAAA,gBAAgB,GAAG;AACjB,UAAM,EAAEvF,cAAF,KAAqB,KAAKS,KAAhC;AACA,UAAMpB,KAAK,GAAGlB,kBAAkB,CAACG,UAAjC;AACA,QAAI0B,cAAJ,EAAoB;AAClB;AACE,+BAAK,SAAS,EAAC,aAAf;AACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,uBAAU,uBAFZ;;AAIE,sBAAC,iBAAD;AACE,UAAA,IAAI,EAAE3B,UADR;AAEE,UAAA,KAAK,EAAEgB,KAFT;AAGE,UAAA,WAAW,EAAEjC,CAAC,CAAC,2BAAD,CAHhB;AAIE,UAAA,QAAQ,EAAE,CAAAoI,QAAQ,KAAI;AACpB,iBAAKxE,YAAL,CAAkB3C,UAAlB,EAA8BmH,QAA9B;AACD,WANH;AAOE,UAAA,uBAAuB,EAAE,KAAKtE,uBAPhC;AAQE,UAAA,wBAAwB,EAAE,KAAKR,wBARjC;AASE,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,cAAX,CAA0BvC,UAA1B,KAAyC,WATlD,0FAJF,CADF,CADF;;;;;AAoBD;AACD,WAAO,IAAP;AACD;;AAEDoH,EAAAA,uBAAuB,GAAG;AACxB,UAAM;AACJxF,MAAAA,iBADI;AAEJC,MAAAA,kBAFI;AAGJC,MAAAA,kBAHI;AAIJC,MAAAA,mBAJI;AAKF,SAAKK,KALT;AAMA,UAAMiF,iBAAiB,GAAG,EAA1B;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,QAAI3F,iBAAJ,EAAuB0F,WAAW,CAACE,IAAZ,CAAiB,iBAAjB;AACvB,QAAI3F,kBAAJ,EAAwByF,WAAW,CAACE,IAAZ,CAAiB,kBAAjB;AACxB,QAAI1F,kBAAJ,EAAwByF,YAAY,CAACC,IAAb,CAAkB,aAAlB;AACxB,QAAIzF,mBAAJ,EAAyBwF,YAAY,CAACC,IAAb,CAAkB,mBAAlB;AACzB,QAAIF,WAAW,CAACZ,MAAhB,EAAwB;AACtBW,MAAAA,iBAAiB,CAACG,IAAlB;AACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAC,cADN;AAEE,QAAA,QAAQ,EAAEF,WAAW,CAAClD,GAAZ,CAAgB,CAAAnB,OAAO;AAC/B,sBAAC,OAAD,eAAa,KAAKF,cAAL,CAAoBE,OAApB,CAAb,6FADQ,CAFZ,yFADF;;;;AAQD;AACD,QAAIsE,YAAY,CAACb,MAAjB,EAAyB;AACvBW,MAAAA,iBAAiB,CAACG,IAAlB;AACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAC,eADN;AAEE,QAAA,QAAQ,EAAED,YAAY,CAACnD,GAAb,CAAiB,CAAAnB,OAAO;AAChC,sBAAC,OAAD,eAAa,KAAKF,cAAL,CAAoBE,OAApB,CAAb,6FADQ,CAFZ,yFADF;;;;AAQD;AACD,WAAOoE,iBAAP;AACD;;AAEDI,EAAAA,YAAY,CAACC,YAAD,EAAe;AACzB,UAAM,EAAEzG,cAAF,KAAqB,KAAKmB,KAAhC;AACA,UAAM,EAAEG,cAAF,KAAqB,KAAKD,KAAhC;AACA,SAAKG,cAAL,GAAsB,EAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;;AAEA;AACA;AACA4B,IAAAA,MAAM,CAACqD,IAAP,CAAYpF,cAAZ;AACGlB,IAAAA,MADH,CACU,CAAA8B,GAAG,KAAIA,GAAG,IAAIlC,cADxB;AAEG2G,IAAAA,OAFH,CAEW,CAAAzE,GAAG,KAAI;AACd;AACA,UAAI,CAACZ,cAAc,CAACY,GAAD,CAAnB,EAA0B;AACxB;AACD;AACD,YAAMO,OAAO,GAAGzC,cAAc,CAACkC,GAAD,CAAd,KAAwBlC,cAAc,CAACkC,GAAD,CAAd,GAAsB,EAA9C,CAAhB;AACA,YAAM0E,SAAS,GAAG,IAAIC,GAAJ,CAAQpE,OAAO,CAACU,GAAR,CAAY,CAAA2D,CAAC,KAAIA,CAAC,CAAC5G,EAAnB,CAAR,CAAlB;AACA,YAAM6G,oBAAoB,GAAG9D,KAAK,CAACC,OAAN,CAAc5B,cAAc,CAACY,GAAD,CAA5B;AACzBZ,MAAAA,cAAc,CAACY,GAAD,CADW;AAEzB,OAACZ,cAAc,CAACY,GAAD,CAAf,CAFJ;AAGA6E,MAAAA,oBAAoB;AACjB3G,MAAAA,MADH,CACU,CAAA+B,KAAK,KAAIA,KAAK,KAAK,IAAV,IAAkB,CAACyE,SAAS,CAACI,GAAV,CAAc7E,KAAd,CADtC;AAEGwE,MAAAA,OAFH,CAEW,CAAAxE,KAAK,KAAI;AAChBM,QAAAA,OAAO,CAACwE,OAAR,CAAgB;AACd7G,UAAAA,MAAM,EAAE8B,GADM;AAEdhC,UAAAA,EAAE,EAAEiC,KAFU;AAGdhC,UAAAA,IAAI,EAAEgC,KAHQ;AAId9B,UAAAA,MAAM,EAAE,CAJM,EAAhB;;AAMD,OATH;AAUD,KAtBH;AAuBA,UAAM;AACJ6B,MAAAA,GADI;AAEJnC,MAAAA,KAFI;AAGJ,OAACpB,wBAAwB,CAACuI,QAA1B,GAAqCC,UAHjC;AAIJ,OAACxI,wBAAwB,CAACyI,aAA1B,GAA0CC,YAJtC;AAKJ,OAAC1I,wBAAwB,CAAC2I,SAA1B,GAAsCC,WALlC;AAMJ,OAAC5I,wBAAwB,CAAC6I,kBAA1B,GAA+CC,gBAN3C;AAOFhB,IAAAA,YAPJ;AAQA,UAAMjB,IAAI,GAAGxF,cAAc,CAACkC,GAAD,CAAd,IAAuB,EAApC;AACA,QAAIC,KAAK,GAAGb,cAAc,CAACY,GAAD,CAAd,IAAuB,IAAnC;;AAEA;AACA,QAAIC,KAAK,KAAK6B,SAAV,IAAuBqD,YAA3B,EAAyC;AACvC;AACAlF,MAAAA,KAAK,GAAGgF,UAAU,GAAGE,YAAY,CAACK,KAAb,CAAmB,GAAnB,CAAH,GAA6BL,YAA/C;AACD;;AAED;AACE,oBAAC,aAAD;AACE,QAAA,YAAY,MADd;AAEE,QAAA,WAAW,EAAE,KAAK5D,mBAAL,CAAyBvB,GAAzB,CAFf;AAGE,QAAA,cAAc,EAAE,KAAK4B,gBAAL,CAAsB0B,IAAtB,CAHlB;AAIE,QAAA,GAAG,EAAEtD,GAJP;AAKE,QAAA,WAAW,EAAEpE,CAAC,CAAC,qBAAD,EAAwBiC,KAAxB,CALhB;AAME,QAAA,OAAO,EAAEoH,UANX;AAOE,QAAA,WAAW,EAAEI,WAPf;AAQE,QAAA,KAAK,EAAEpF,KART;AASE,QAAA,OAAO,EAAE,KAAK2B,gBAAL,CAAsB0B,IAAtB,CATX;AAUE,QAAA,QAAQ,EAAE,CAAAU,QAAQ,KAAI;AACpB;AACA,cAAIA,QAAQ,KAAK/D,KAAjB,EAAwB;AACtB,iBAAKT,YAAL,CAAkBQ,GAAlB,EAAuBgE,QAAvB;AACD;AACF;AACD;AACA;AAjBF,UAkBE,UAAU,EAAE,MAAM,KAAK1F,gBAAL,CAAsB0B,GAAtB,CAlBpB;AAmBE,QAAA,MAAM,EAAE,MAAM,KAAKzB,iBAAL,CAAuByB,GAAvB,CAnBhB;AAoBE,QAAA,WAAW,EAAE,MAAM,KAAKzB,iBAAL,CAAuByB,GAAvB,CApBrB;AAqBE,QAAA,UAAU;AACRuF,QAAAA,gBAAgB,IAAIjC,IAAI,CAACC,MAAL,IAAe7G,oBAAnC;AACIjB,QAAAA,oBADJ;AAEIC,QAAAA,eAxBR;;AA0BE,QAAA,aAAa,EAAEE,CAAC,CAAC,kBAAD,CA1BlB;AA2BE,QAAA,aAAa,MA3Bf,yFADF;;;AA+BD;;AAED6J,EAAAA,aAAa,GAAG;AACd,UAAM,EAAEjI,aAAa,GAAG,EAAlB,KAAyB,KAAKyB,KAApC;AACA,WAAOzB,aAAa,CAACyD,GAAd,CAAkB,CAAAsD,YAAY,KAAI;AACvC,YAAM,EAAE1G,KAAF,EAASmC,GAAT,KAAiBuE,YAAvB;AACA;AACE,+BAAK,GAAG,EAAEvE,GAAV,EAAe,SAAS,EAAC,wBAAzB;AACE,sBAAC,SAAD,IAAW,OAAO,EAAG,SAAQA,GAAI,EAAjC,2FAAqCnC,KAArC,CADF;AAEG,aAAKyG,YAAL,CAAkBC,YAAlB,CAFH,CADF;;;AAMD,KARM,CAAP;AASD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEpI,gBAAF,EAAoBqI,KAApB,EAA2BC,MAA3B,KAAsC,KAAK3G,KAAjD;AACA;AACE,6BAAK,KAAK,EAAE,EAAE0G,KAAF,EAASC,MAAT,EAAiBC,QAAQ,EAAE,MAA3B,EAAZ;AACG,WAAK9B,gBAAL,EADH;AAEG,WAAKE,uBAAL,EAFH;AAGG,WAAKwB,aAAL,EAHH;AAIG,OAACnI,gBAAD;AACC,oBAAC,MAAD;AACE,QAAA,UAAU,EAAC,OADb;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,OAAO,EAAE,KAAKoD,UAAL,CAAgBjB,IAAhB,CAAqB,IAArB,CAHX;AAIE,QAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWE,UAJxB;;AAMGzD,MAAAA,CAAC,CAAC,OAAD,CANJ,CALJ,CADF;;;;;AAiBD,GAxVyC;AAAA;AAAA;AA2V5CkD,SAAS,CAAC/B,SAAV,GAAsBA,SAAtB;AACA+B,SAAS,CAACD,YAAV,GAAyBA,YAAzB,C;;AAEeC,S,CAAf,wB,iLA3YajC,U,wIAEPE,S,uIA8BA8B,Y,0IAaAC,S","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { max as d3Max } from 'd3-array';\nimport { AsyncCreatableSelect, CreatableSelect } from 'src/components/Select';\nimport Button from 'src/components/Button';\nimport { t, SupersetClient, ensureIsArray } from '@superset-ui/core';\n\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport { FormLabel } from 'src/components/Form';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport ControlRow from 'src/explore/components/ControlRow';\nimport Control from 'src/explore/components/Control';\nimport { controls } from 'src/explore/controls';\nimport { getExploreUrl } from 'src/explore/exploreUtils';\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\nimport {\n  FILTER_CONFIG_ATTRIBUTES,\n  FILTER_OPTIONS_LIMIT,\n  TIME_FILTER_LABELS,\n  TIME_FILTER_MAP,\n} from 'src/explore/constants';\n\nimport './FilterBox.less';\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ),\n  filtersChoices: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        text: PropTypes.string,\n        filter: PropTypes.string,\n        metric: PropTypes.number,\n      }),\n    ),\n  ),\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool,\n};\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false,\n};\n\nclass FilterBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false,\n    };\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n    this.changeFilter = this.changeFilter.bind(this);\n    this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);\n    this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);\n    this.onFilterMenuClose = this.onFilterMenuClose.bind(this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onFilterMenuClose(column) {\n    return this.props.onFilterMenuClose(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onCloseDateFilterControl = () => this.onFilterMenuClose(TIME_RANGE);\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter },\n    };\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  /**\n   * Get known max value of a column\n   */\n  getKnownMax(key, choices) {\n    this.maxValueCache[key] = Math.max(\n      this.maxValueCache[key] || 0,\n      d3Max(choices || this.props.filtersChoices[key] || [], x => x.metric),\n    );\n    return this.maxValueCache[key];\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (Array.isArray(options)) {\n        vals = options.map(opt => (typeof opt === 'string' ? opt : opt.value));\n      } else if (Object.values(TIME_FILTER_MAP).includes(fltr)) {\n        vals = options.value ?? options;\n      } else {\n        // must use array member for legacy extra_filters's value\n        vals = ensureIsArray(options.value ?? options);\n      }\n    }\n\n    this.setState(\n      prevState => ({\n        selectedValues: {\n          ...prevState.selectedValues,\n          [fltr]: vals,\n        },\n        hasChanged: true,\n      }),\n      () => {\n        if (this.props.instantFiltering) {\n          this.props.onChange({ [fltr]: vals }, false);\n        }\n      },\n    );\n  }\n\n  /**\n   * Generate a debounce function that loads options for a specific column\n   */\n  debounceLoadOptions(key) {\n    if (!(key in this.debouncerCache)) {\n      this.debouncerCache[key] = debounce((input, callback) => {\n        this.loadOptions(key, input).then(callback);\n      }, SLOW_DEBOUNCE);\n    }\n    return this.debouncerCache[key];\n  }\n\n  /**\n   * Transform select options, add bar background\n   */\n  transformOptions(options, max) {\n    const maxValue = max === undefined ? d3Max(options, x => x.metric) : max;\n    return options.map(opt => {\n      const perc = Math.round((opt.metric / maxValue) * 100);\n      const color = 'lightgrey';\n      const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n      const style = { backgroundImage };\n      let label = opt.id;\n      if (label === true) {\n        label = BOOL_TRUE_DISPLAY;\n      } else if (label === false) {\n        label = BOOL_FALSE_DISPLAY;\n      }\n      return { value: opt.id, label, style };\n    });\n  }\n\n  async loadOptions(key, inputValue = '') {\n    const input = inputValue.toLowerCase();\n    const sortAsc = this.props.filtersFields.find(x => x.key === key).asc;\n    const formData = {\n      ...this.props.rawFormData,\n      adhoc_filters: inputValue\n        ? [\n            {\n              clause: 'WHERE',\n              expressionType: 'SIMPLE',\n              subject: key,\n              operator: 'ILIKE',\n              comparator: `%${input}%`,\n            },\n          ]\n        : null,\n    };\n\n    const { json } = await SupersetClient.get({\n      url: getExploreUrl({\n        formData,\n        endpointType: 'json',\n        method: 'GET',\n      }),\n    });\n    const options = (json?.data?.[key] || []).filter(x => x.id);\n    if (!options || options.length === 0) {\n      return [];\n    }\n    if (input) {\n      // sort those starts with search query to front\n      options.sort((a, b) => {\n        const labelA = a.id.toLowerCase();\n        const labelB = b.id.toLowerCase();\n        const textOrder = labelB.startsWith(input) - labelA.startsWith(input);\n        return textOrder === 0\n          ? (a.metric - b.metric) * (sortAsc ? 1 : -1)\n          : textOrder;\n      });\n    }\n    return this.transformOptions(options, this.getKnownMax(key, options));\n  }\n\n  renderDateFilter() {\n    const { showDateFilter } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        <div className=\"row space-1\">\n          <div\n            className=\"col-lg-12 col-xs-12\"\n            data-test=\"date-filter-container\"\n          >\n            <DateFilterControl\n              name={TIME_RANGE}\n              label={label}\n              description={t('Select start and end date')}\n              onChange={newValue => {\n                this.changeFilter(TIME_RANGE, newValue);\n              }}\n              onOpenDateFilterControl={this.onOpenDateFilterControl}\n              onCloseDateFilterControl={this.onCloseDateFilterControl}\n              value={this.state.selectedValues[TIME_RANGE] || 'No filter'}\n            />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin,\n    } = this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"sqla-filters\"\n          controls={sqlaFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"druid-filters\"\n          controls={druidFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    return datasourceFilters;\n  }\n\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n    this.debouncerCache = {};\n    this.maxValueCache = {};\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues)\n      .filter(key => key in filtersChoices)\n      .forEach(key => {\n        // empty values are ignored\n        if (!selectedValues[key]) {\n          return;\n        }\n        const choices = filtersChoices[key] || (filtersChoices[key] = []);\n        const choiceIds = new Set(choices.map(f => f.id));\n        const selectedValuesForKey = Array.isArray(selectedValues[key])\n          ? selectedValues[key]\n          : [selectedValues[key]];\n        selectedValuesForKey\n          .filter(value => value !== null && !choiceIds.has(value))\n          .forEach(value => {\n            choices.unshift({\n              filter: key,\n              id: value,\n              text: value,\n              metric: 0,\n            });\n          });\n      });\n    const {\n      key,\n      label,\n      [FILTER_CONFIG_ATTRIBUTES.MULTIPLE]: isMultiple,\n      [FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]: defaultValue,\n      [FILTER_CONFIG_ATTRIBUTES.CLEARABLE]: isClearable,\n      [FILTER_CONFIG_ATTRIBUTES.SEARCH_ALL_OPTIONS]: searchAllOptions,\n    } = filterConfig;\n    const data = filtersChoices[key] || [];\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (value === undefined && defaultValue) {\n      // multiple values are separated by semicolons\n      value = isMultiple ? defaultValue.split(';') : defaultValue;\n    }\n\n    return (\n      <OnPasteSelect\n        cacheOptions\n        loadOptions={this.debounceLoadOptions(key)}\n        defaultOptions={this.transformOptions(data)}\n        key={key}\n        placeholder={t('Type or Select [%s]', label)}\n        isMulti={isMultiple}\n        isClearable={isClearable}\n        value={value}\n        options={this.transformOptions(data)}\n        onChange={newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }}\n        // TODO try putting this back once react-select is upgraded\n        // onFocus={() => this.onFilterMenuOpen(key)}\n        onMenuOpen={() => this.onFilterMenuOpen(key)}\n        onBlur={() => this.onFilterMenuClose(key)}\n        onMenuClose={() => this.onFilterMenuClose(key)}\n        selectWrap={\n          searchAllOptions && data.length >= FILTER_OPTIONS_LIMIT\n            ? AsyncCreatableSelect\n            : CreatableSelect\n        }\n        noResultsText={t('No results found')}\n        forceOverflow\n      />\n    );\n  }\n\n  renderFilters() {\n    const { filtersFields = [] } = this.props;\n    return filtersFields.map(filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        <div key={key} className=\"m-b-5 filter-container\">\n          <FormLabel htmlFor={`LABEL-${key}`}>{label}</FormLabel>\n          {this.renderSelect(filterConfig)}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { instantFiltering, width, height } = this.props;\n    return (\n      <div style={{ width, height, overflow: 'auto' }}>\n        {this.renderDateFilter()}\n        {this.renderDatasourceFilters()}\n        {this.renderFilters()}\n        {!instantFiltering && (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            onClick={this.clickApply.bind(this)}\n            disabled={!this.state.hasChanged}\n          >\n            {t('Apply')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;\n\nexport default FilterBox;\n"]},"metadata":{},"sourceType":"module"}