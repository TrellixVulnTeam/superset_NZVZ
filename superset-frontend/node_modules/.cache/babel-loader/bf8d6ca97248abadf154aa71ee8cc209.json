{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { t, styled } from '@superset-ui/core';\n\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\n\nimport { AGGREGATES_OPTIONS } from 'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\nEXPRESSION_TYPES } from\n'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\nStyledMetricOption,\nStyledColumnOption } from\n'src/explore/components/optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasourceType: PropTypes.string };\n\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp };\n\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nconst startingWidth = 320;\nconst startingHeight = 240;\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n  // \"Saved\" is a default tab unless there are no saved metrics for dataset\n\n\n\n\n\n\n\n  constructor(props) {\n    super(props);this.defaultActiveTabKey = (this.props.savedMetric.metric_name || this.props.adhocMetric.isNew) && Array.isArray(this.props.savedMetricsOptions) && this.props.savedMetricsOptions.length > 0 ? SAVED_TAB_KEY : this.props.adhocMetric.expressionType;\n    this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: startingWidth,\n      height: startingHeight };\n\n\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {var _prevState$adhocMetri, _this$state$adhocMetr, _prevState$adhocMetri2, _this$state$adhocMetr2, _prevState$adhocMetri3, _prevState$adhocMetri4, _this$state$adhocMetr3, _this$state$adhocMetr4, _prevState$savedMetri, _this$state$savedMetr;\n    if (\n    ((_prevState$adhocMetri = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri.sqlExpression) !== ((_this$state$adhocMetr =\n    this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr.sqlExpression) ||\n    ((_prevState$adhocMetri2 = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri2.aggregate) !== ((_this$state$adhocMetr2 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr2.aggregate) ||\n    ((_prevState$adhocMetri3 = prevState.adhocMetric) == null ? void 0 : (_prevState$adhocMetri4 = _prevState$adhocMetri3.column) == null ? void 0 : _prevState$adhocMetri4.column_name) !== ((_this$state$adhocMetr3 =\n    this.state.adhocMetric) == null ? void 0 : (_this$state$adhocMetr4 = _this$state$adhocMetr3.column) == null ? void 0 : _this$state$adhocMetr4.column_name) ||\n    ((_prevState$savedMetri = prevState.savedMetric) == null ? void 0 : _prevState$savedMetri.metric_name) !== ((_this$state$savedMetr = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr.metric_name))\n    {var _this$state$savedMetr2, _this$state$savedMetr3, _this$state$adhocMetr5;\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n        ((_this$state$savedMetr2 = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr2.verbose_name) || ((_this$state$savedMetr3 =\n        this.state.savedMetric) == null ? void 0 : _this$state$savedMetr3.metric_name),\n        adhocMetricLabel: (_this$state$adhocMetr5 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr5.getDefaultLabel() });\n\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onSave() {var _this$props$savedMetr;\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric != null && savedMetric.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = (_this$props$savedMetr = this.props.savedMetric) != null && _this$props$savedMetr.metric_name ?\n    this.props.savedMetric :\n    this.props.adhocMetric;\n    this.props.onChange(\n    {\n      ...metric },\n\n    oldMetric);\n\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n    {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric },\n\n    this.props.onClose);\n\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n    (column) => column.column_name === columnName);\n\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n    (metric) => metric.metric_name === savedMetricName);\n\n    this.setState((prevState) => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE }) }));\n\n\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL }),\n\n      savedMetric: undefined }));\n\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n      this.dragStartWidth + (e.clientX - this.dragStartX),\n      startingWidth),\n\n      height: Math.max(\n      this.dragStartHeight + (e.clientY - this.dragStartY) * 2,\n      startingHeight) });\n\n\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return ___EmotionJSX(StyledColumnOption, { column: column, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 264, columnNumber: 12 } });\n  }\n\n  renderMetricOption(savedMetric) {\n    return ___EmotionJSX(StyledMetricOption, { metric: savedMetric, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 268, columnNumber: 12 } });\n  }\n\n  render() {var _savedMetricsOptions$;\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasourceType,\n      ...popoverProps } =\n    this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n    columns.map((column) => ({\n      name: column.column_name,\n      value: column.column_name,\n      score: 50,\n      meta: 'column' })));\n\n\n\n    const columnValue =\n    adhocMetric.column && adhocMetric.column.column_name ||\n    adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue };\n\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue };\n\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', (_savedMetricsOptions$ = savedMetricsOptions == null ? void 0 : savedMetricsOptions.length) != null ? _savedMetricsOptions$ : 0),\n      value: savedMetric == null ? void 0 : savedMetric.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true };\n\n\n    if (this.props.datasourceType === 'druid' && aggregateSelectProps.options) {\n      aggregateSelectProps.options = aggregateSelectProps.options.filter(\n      (aggregate) => aggregate !== 'AVG');\n\n    }\n\n    const stateIsValid = adhocMetric.isValid() || (savedMetric == null ? void 0 : savedMetric.metric_name);\n    const hasUnsavedChanges =\n    !adhocMetric.equals(propsAdhocMetric) ||\n    !(\n    typeof (savedMetric == null ? void 0 : savedMetric.metric_name) === 'undefined' &&\n    typeof (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name) === 'undefined') &&\n\n    (savedMetric == null ? void 0 : savedMetric.metric_name) !== (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name);\n\n    return (\n      ___EmotionJSX(Form, _extends({\n        layout: \"vertical\",\n        id: \"metrics-edit-popover\",\n        \"data-test\": \"metrics-edit-popover\" },\n      popoverProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 341, columnNumber: 7 } }),\n\n      ___EmotionJSX(Tabs, {\n        id: \"adhoc-metric-edit-tabs\",\n        \"data-test\": \"adhoc-metric-edit-tabs\",\n        defaultActiveKey: this.defaultActiveTabKey,\n        className: \"adhoc-metric-edit-tabs\",\n        style: { height: this.state.height, width: this.state.width },\n        onChange: this.onTabChange,\n        allowOverflow: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 347, columnNumber: 9 } },\n\n      ___EmotionJSX(Tabs.TabPane, { key: SAVED_TAB_KEY, tab: t('Saved'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 356, columnNumber: 11 } },\n      ___EmotionJSX(FormItem, { label: t('Saved metric'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 357, columnNumber: 13 } },\n      ___EmotionJSX(StyledSelect, _extends({\n        options:\n        Array.isArray(savedMetricsOptions) ?\n        savedMetricsOptions.map((savedMetric) => ({\n          value: savedMetric.metric_name,\n          label: savedMetric.metric_name,\n          customLabel: this.renderMetricOption(savedMetric),\n          key: savedMetric.id })) :\n\n        [] },\n\n      savedSelectProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 358, columnNumber: 15 } })))),\n\n\n\n      ___EmotionJSX(Tabs.TabPane, { key: EXPRESSION_TYPES.SIMPLE, tab: t('Simple'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 373, columnNumber: 11 } },\n      ___EmotionJSX(FormItem, { label: t('column'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 374, columnNumber: 13 } },\n      ___EmotionJSX(Select, _extends({\n        options: columns.map((column) => ({\n          value: column.column_name,\n          label: column.verbose_name || column.column_name,\n          key: column.id,\n          customLabel: this.renderColumnOption(column) })) },\n\n      columnSelectProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 375, columnNumber: 15 } }))),\n\n\n      ___EmotionJSX(FormItem, { label: t('aggregate'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 385, columnNumber: 13 } },\n      ___EmotionJSX(Select, _extends({\n        options: AGGREGATES_OPTIONS.map((option) => ({\n          value: option,\n          label: option,\n          key: option })) },\n\n      aggregateSelectProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 386, columnNumber: 15 } })))),\n\n\n\n      ___EmotionJSX(Tabs.TabPane, {\n        key: EXPRESSION_TYPES.SQL,\n        tab: t('Custom SQL'),\n        \"data-test\": \"adhoc-metric-edit-tab#custom\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 396, columnNumber: 11 } },\n\n      this.props.datasourceType !== 'druid' ?\n      ___EmotionJSX(SQLEditor, {\n        \"data-test\": \"sql-editor\",\n        showLoadingForImport: true,\n        ref: this.handleAceEditorRef,\n        keywords: keywords,\n        height: `${this.state.height - 80}px`,\n        onChange: this.onSqlExpressionChange,\n        width: \"100%\",\n        showGutter: false,\n        value:\n        adhocMetric.sqlExpression || adhocMetric.translateToSql(),\n\n        editorProps: { $blockScrolling: true },\n        enableLiveAutocompletion: true,\n        className: \"filter-sql-editor\",\n        wrapEnabled: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 402, columnNumber: 15 } }) :\n\n\n      ___EmotionJSX(\"div\", { className: \"custom-sql-disabled-message\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 420, columnNumber: 15 } }, \"Custom SQL Metrics are not available on druid datasources\"))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 426, columnNumber: 9 } },\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        onClick: this.onResetStateAndClose,\n        \"data-test\": \"AdhocMetricEdit#cancel\",\n        cta: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 427, columnNumber: 11 } },\n\n      t('Close')),\n\n      ___EmotionJSX(Button, {\n        disabled: !stateIsValid,\n        buttonStyle:\n        hasUnsavedChanges && stateIsValid ? 'primary' : 'default',\n\n        buttonSize: \"small\",\n        \"data-test\": \"AdhocMetricEdit#save\",\n        onClick: this.onSave,\n        cta: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 435, columnNumber: 11 } },\n\n      t('Save')),\n\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Resize\",\n        tabIndex: 0,\n        onMouseDown: this.onDragDown,\n        className: \"fa fa-expand edit-popover-resize text-muted\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 447, columnNumber: 11 } }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}AdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(SAVED_TAB_KEY, \"SAVED_TAB_KEY\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(startingWidth, \"startingWidth\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(startingHeight, \"startingHeight\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(AdhocMetricEditPopover, \"AdhocMetricEditPopover\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx"],"names":["React","PropTypes","Tabs","Button","Select","t","styled","Form","FormItem","SQLEditor","sqlKeywords","noOp","AGGREGATES_OPTIONS","columnType","savedMetricType","AdhocMetric","EXPRESSION_TYPES","StyledMetricOption","StyledColumnOption","propTypes","onChange","func","isRequired","onClose","onResize","getCurrentTab","getCurrentLabel","adhocMetric","instanceOf","columns","arrayOf","savedMetricsOptions","savedMetric","datasourceType","string","defaultProps","StyledSelect","theme","gridUnit","SAVED_TAB_KEY","startingWidth","startingHeight","AdhocMetricEditPopover","PureComponent","constructor","props","defaultActiveTabKey","metric_name","isNew","Array","isArray","length","expressionType","onSave","bind","onResetStateAndClose","onColumnChange","onAggregateChange","onSavedMetricChange","onSqlExpressionChange","onDragDown","onMouseMove","onMouseUp","onTabChange","handleAceEditorRef","refreshAceEditor","state","width","height","document","addEventListener","componentDidMount","componentDidUpdate","prevProps","prevState","sqlExpression","aggregate","column","column_name","savedMetricLabel","verbose_name","adhocMetricLabel","getDefaultLabel","componentWillUnmount","removeEventListener","metric","oldMetric","setState","columnName","find","duplicateWith","SIMPLE","undefined","savedMetricName","SQL","e","dragStartX","clientX","dragStartY","clientY","dragStartWidth","dragStartHeight","Math","max","tab","ref","aceEditorRef","setTimeout","editor","resize","renderColumnOption","option","renderMetricOption","render","propsAdhocMetric","propsSavedMetric","popoverProps","keywords","concat","map","name","value","score","meta","columnValue","inferSqlExpressionColumn","columnSelectProps","ariaLabel","placeholder","allowClear","autoFocus","aggregateSelectProps","inferSqlExpressionAggregate","savedSelectProps","options","filter","stateIsValid","isValid","hasUnsavedChanges","equals","label","customLabel","key","id","translateToSql","$blockScrolling"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { t, styled } from '@superset-ui/core';\n\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\n\nimport { AGGREGATES_OPTIONS } from 'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\n  EXPRESSION_TYPES,\n} from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\n  StyledMetricOption,\n  StyledColumnOption,\n} from 'src/explore/components/optionRenderers';\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasourceType: PropTypes.string,\n};\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp,\n};\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nconst startingWidth = 320;\nconst startingHeight = 240;\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n  // \"Saved\" is a default tab unless there are no saved metrics for dataset\n  defaultActiveTabKey =\n    (this.props.savedMetric.metric_name || this.props.adhocMetric.isNew) &&\n    Array.isArray(this.props.savedMetricsOptions) &&\n    this.props.savedMetricsOptions.length > 0\n      ? SAVED_TAB_KEY\n      : this.props.adhocMetric.expressionType;\n\n  constructor(props) {\n    super(props);\n    this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: startingWidth,\n      height: startingHeight,\n    };\n\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.adhocMetric?.sqlExpression !==\n        this.state.adhocMetric?.sqlExpression ||\n      prevState.adhocMetric?.aggregate !== this.state.adhocMetric?.aggregate ||\n      prevState.adhocMetric?.column?.column_name !==\n        this.state.adhocMetric?.column?.column_name ||\n      prevState.savedMetric?.metric_name !== this.state.savedMetric?.metric_name\n    ) {\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n          this.state.savedMetric?.verbose_name ||\n          this.state.savedMetric?.metric_name,\n        adhocMetricLabel: this.state.adhocMetric?.getDefaultLabel(),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onSave() {\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric?.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = this.props.savedMetric?.metric_name\n      ? this.props.savedMetric\n      : this.props.adhocMetric;\n    this.props.onChange(\n      {\n        ...metric,\n      },\n      oldMetric,\n    );\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n      {\n        adhocMetric: this.props.adhocMetric,\n        savedMetric: this.props.savedMetric,\n      },\n      this.props.onClose,\n    );\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n      column => column.column_name === columnName,\n    );\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n      metric => metric.metric_name === savedMetricName,\n    );\n    this.setState(prevState => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n    }));\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n        this.dragStartWidth + (e.clientX - this.dragStartX),\n        startingWidth,\n      ),\n      height: Math.max(\n        this.dragStartHeight + (e.clientY - this.dragStartY) * 2,\n        startingHeight,\n      ),\n    });\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return <StyledColumnOption column={column} showType />;\n  }\n\n  renderMetricOption(savedMetric) {\n    return <StyledMetricOption metric={savedMetric} showType />;\n  }\n\n  render() {\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasourceType,\n      ...popoverProps\n    } = this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n      columns.map(column => ({\n        name: column.column_name,\n        value: column.column_name,\n        score: 50,\n        meta: 'column',\n      })),\n    );\n\n    const columnValue =\n      (adhocMetric.column && adhocMetric.column.column_name) ||\n      adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue,\n    };\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue,\n    };\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', savedMetricsOptions?.length ?? 0),\n      value: savedMetric?.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true,\n    };\n\n    if (this.props.datasourceType === 'druid' && aggregateSelectProps.options) {\n      aggregateSelectProps.options = aggregateSelectProps.options.filter(\n        aggregate => aggregate !== 'AVG',\n      );\n    }\n\n    const stateIsValid = adhocMetric.isValid() || savedMetric?.metric_name;\n    const hasUnsavedChanges =\n      !adhocMetric.equals(propsAdhocMetric) ||\n      (!(\n        typeof savedMetric?.metric_name === 'undefined' &&\n        typeof propsSavedMetric?.metric_name === 'undefined'\n      ) &&\n        savedMetric?.metric_name !== propsSavedMetric?.metric_name);\n\n    return (\n      <Form\n        layout=\"vertical\"\n        id=\"metrics-edit-popover\"\n        data-test=\"metrics-edit-popover\"\n        {...popoverProps}\n      >\n        <Tabs\n          id=\"adhoc-metric-edit-tabs\"\n          data-test=\"adhoc-metric-edit-tabs\"\n          defaultActiveKey={this.defaultActiveTabKey}\n          className=\"adhoc-metric-edit-tabs\"\n          style={{ height: this.state.height, width: this.state.width }}\n          onChange={this.onTabChange}\n          allowOverflow\n        >\n          <Tabs.TabPane key={SAVED_TAB_KEY} tab={t('Saved')}>\n            <FormItem label={t('Saved metric')}>\n              <StyledSelect\n                options={\n                  Array.isArray(savedMetricsOptions)\n                    ? savedMetricsOptions.map(savedMetric => ({\n                        value: savedMetric.metric_name,\n                        label: savedMetric.metric_name,\n                        customLabel: this.renderMetricOption(savedMetric),\n                        key: savedMetric.id,\n                      }))\n                    : []\n                }\n                {...savedSelectProps}\n              />\n            </FormItem>\n          </Tabs.TabPane>\n          <Tabs.TabPane key={EXPRESSION_TYPES.SIMPLE} tab={t('Simple')}>\n            <FormItem label={t('column')}>\n              <Select\n                options={columns.map(column => ({\n                  value: column.column_name,\n                  label: column.verbose_name || column.column_name,\n                  key: column.id,\n                  customLabel: this.renderColumnOption(column),\n                }))}\n                {...columnSelectProps}\n              />\n            </FormItem>\n            <FormItem label={t('aggregate')}>\n              <Select\n                options={AGGREGATES_OPTIONS.map(option => ({\n                  value: option,\n                  label: option,\n                  key: option,\n                }))}\n                {...aggregateSelectProps}\n              />\n            </FormItem>\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            key={EXPRESSION_TYPES.SQL}\n            tab={t('Custom SQL')}\n            data-test=\"adhoc-metric-edit-tab#custom\"\n          >\n            {this.props.datasourceType !== 'druid' ? (\n              <SQLEditor\n                data-test=\"sql-editor\"\n                showLoadingForImport\n                ref={this.handleAceEditorRef}\n                keywords={keywords}\n                height={`${this.state.height - 80}px`}\n                onChange={this.onSqlExpressionChange}\n                width=\"100%\"\n                showGutter={false}\n                value={\n                  adhocMetric.sqlExpression || adhocMetric.translateToSql()\n                }\n                editorProps={{ $blockScrolling: true }}\n                enableLiveAutocompletion\n                className=\"filter-sql-editor\"\n                wrapEnabled\n              />\n            ) : (\n              <div className=\"custom-sql-disabled-message\">\n                Custom SQL Metrics are not available on druid datasources\n              </div>\n            )}\n          </Tabs.TabPane>\n        </Tabs>\n        <div>\n          <Button\n            buttonSize=\"small\"\n            onClick={this.onResetStateAndClose}\n            data-test=\"AdhocMetricEdit#cancel\"\n            cta\n          >\n            {t('Close')}\n          </Button>\n          <Button\n            disabled={!stateIsValid}\n            buttonStyle={\n              hasUnsavedChanges && stateIsValid ? 'primary' : 'default'\n            }\n            buttonSize=\"small\"\n            data-test=\"AdhocMetricEdit#save\"\n            onClick={this.onSave}\n            cta\n          >\n            {t('Save')}\n          </Button>\n          <i\n            role=\"button\"\n            aria-label=\"Resize\"\n            tabIndex={0}\n            onMouseDown={this.onDragDown}\n            className=\"fa fa-expand edit-popover-resize text-muted\"\n          />\n        </div>\n      </Form>\n    );\n  }\n}\nAdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}