{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { ADD_TOAST, REMOVE_TOAST } from './actions';\n\nexport default function messageToastsReducer(toasts = [], action) {\n  switch (action.type) {\n    case ADD_TOAST:{\n        const { payload: toast } = action;\n        const result = toasts.slice();\n        if (!toast.noDuplicate || !result.find((x) => x.text === toast.text)) {\n          return [toast, ...toasts];\n        }\n        return toasts;\n      }\n\n    case REMOVE_TOAST:{\n        const {\n          payload: { id } } =\n        action;\n        return [...toasts].filter((toast) => toast.id !== id);\n      }\n\n    default:\n      return toasts;}\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(messageToastsReducer, \"messageToastsReducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/MessageToasts/reducers.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/MessageToasts/reducers.js\");reactHotLoader.register(messageToastsReducer, \"messageToastsReducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/MessageToasts/reducers.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/MessageToasts/reducers.js"],"names":["messageToastsReducer","toasts","action","payload","result","toast","x"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,SAAA,EAAA,YAAA,QAAA,WAAA;;AAEA,eAAe,SAAA,oBAAA,CAA8BC,MAAM,GAApC,EAAA,EAAA,MAAA,EAAmD;AAChE,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,SAAA,CAAgB;AACd,cAAM,EAAEC,OAAO,EAAT,KAAA,KAAN,MAAA;AACA,cAAMC,MAAM,GAAGH,MAAM,CAArB,KAAeA,EAAf;AACA,YAAI,CAACI,KAAK,CAAN,WAAA,IAAsB,CAACD,MAAM,CAANA,IAAAA,CAAY,CAAA,CAAA,KAAKE,CAAC,CAADA,IAAAA,KAAWD,KAAK,CAA5D,IAA2BD,CAA3B,EAAoE;AAClE,iBAAO,CAAA,KAAA,EAAQ,GAAf,MAAO,CAAP;AACD;AACD,eAAA,MAAA;AACD;;AAED,SAAA,YAAA,CAAmB;AACjB,cAAM;AACJD,UAAAA,OAAO,EAAE,EADL,EACK,EADL;AAAN,QAAA,MAAA;AAGA,eAAO,CAAC,GAAD,MAAA,EAAA,MAAA,CAAmB,CAAA,KAAA,KAASE,KAAK,CAALA,EAAAA,KAAnC,EAAO,CAAP;AACD;;AAED;AACE,aAlBJ,MAkBI,CAlBJ;;kLADsBL,oB,wmBAAT,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ADD_TOAST, REMOVE_TOAST } from './actions';\n\nexport default function messageToastsReducer(toasts = [], action) {\n  switch (action.type) {\n    case ADD_TOAST: {\n      const { payload: toast } = action;\n      const result = toasts.slice();\n      if (!toast.noDuplicate || !result.find(x => x.text === toast.text)) {\n        return [toast, ...toasts];\n      }\n      return toasts;\n    }\n\n    case REMOVE_TOAST: {\n      const {\n        payload: { id },\n      } = action;\n      return [...toasts].filter(toast => toast.id !== id);\n    }\n\n    default:\n      return toasts;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}