{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/OptionWrapper.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { DragContainer } from 'src/explore/components/controls/OptionControls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { StyledColumnOption } from 'src/explore/components/optionRenderers';\nimport { styled } from '@superset-ui/core';\nimport Option from './Option';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const OptionLabel = styled.div`\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nexport default function OptionWrapper(props) {\n  const { index, label, tooltipTitle, column, type, onShiftOptions, clickClose, withCaret, isExtra, canDelete = true, ...rest } = props;\n  const ref = useRef(null);\n  const labelRef = useRef(null);\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type,\n      dragIndex: index },\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging() }) });\n\n\n  const [, drop] = useDrop({\n    accept: type,\n    hover: (item, monitor) => {var _ref$current;\n      if (!ref.current) {\n        return;\n      }\n      const { dragIndex } = item;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = (_ref$current = ref.current) == null ? void 0 : _ref$current.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset ?\n      clientOffset.y - hoverBoundingRect.top :\n      0;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      onShiftOptions(dragIndex, hoverIndex);\n      // eslint-disable-next-line no-param-reassign\n      item.dragIndex = hoverIndex;\n    } });\n\n  const shouldShowTooltip = !isDragging && tooltipTitle && label && tooltipTitle !== label ||\n  !isDragging &&\n  labelRef &&\n  labelRef.current &&\n  labelRef.current.scrollWidth > labelRef.current.clientWidth;\n  const LabelContent = () => {\n    if (!shouldShowTooltip) {\n      return ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 91, columnNumber: 20 } }, label);\n    }\n    return ___EmotionJSX(Tooltip, { title: tooltipTitle || label, __self: this, __source: { fileName: _jsxFileName, lineNumber: 93, columnNumber: 17 } },\n    ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 94, columnNumber: 9 } }, label));\n\n  };\n  const ColumnOption = () => ___EmotionJSX(StyledColumnOption, { column: column, labelRef: labelRef, showTooltip: !!shouldShowTooltip, showType: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 97, columnNumber: 33 } });\n  const Label = () => {\n    if (label) {\n      return ___EmotionJSX(OptionLabel, { ref: labelRef, __self: this, __source: { fileName: _jsxFileName, lineNumber: 100, columnNumber: 21 } },\n      ___EmotionJSX(LabelContent, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 101, columnNumber: 11 } }));\n\n    }\n    if (column) {\n      return ___EmotionJSX(OptionLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 105, columnNumber: 21 } },\n      ___EmotionJSX(ColumnOption, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 106, columnNumber: 11 } }));\n\n    }\n    return null;\n  };\n  drag(drop(ref));\n  return ___EmotionJSX(DragContainer, _extends({ ref: ref }, rest, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 112, columnNumber: 13 } }),\n  ___EmotionJSX(Option, { index: index, clickClose: clickClose, withCaret: withCaret, isExtra: isExtra, canDelete: canDelete, __self: this, __source: { fileName: _jsxFileName, lineNumber: 113, columnNumber: 7 } },\n  ___EmotionJSX(Label, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 114, columnNumber: 9 } })));\n\n\n}__signature__(OptionWrapper, \"useRef{ref}\\nuseRef{labelRef}\\nuseDrag{[{ isDragging }, drag]}\\nuseDrop{[, drop]}\", () => [useDrag, useDrop]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OptionLabel, \"OptionLabel\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/OptionWrapper.tsx\");reactHotLoader.register(OptionWrapper, \"OptionWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/OptionWrapper.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/OptionWrapper.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef } from 'react';\nimport {\n  useDrag,\n  useDrop,\n  DropTargetMonitor,\n  DragSourceMonitor,\n} from 'react-dnd';\nimport { DragContainer } from 'src/explore/components/controls/OptionControls';\nimport {\n  OptionProps,\n  OptionItemInterface,\n} from 'src/explore/components/controls/DndColumnSelectControl/types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { StyledColumnOption } from 'src/explore/components/optionRenderers';\nimport { styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport Option from './Option';\n\nexport const OptionLabel = styled.div`\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport default function OptionWrapper(\n  props: OptionProps & {\n    type: string;\n    onShiftOptions: (dragIndex: number, hoverIndex: number) => void;\n  },\n) {\n  const {\n    index,\n    label,\n    tooltipTitle,\n    column,\n    type,\n    onShiftOptions,\n    clickClose,\n    withCaret,\n    isExtra,\n    canDelete = true,\n    ...rest\n  } = props;\n  const ref = useRef<HTMLDivElement>(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type,\n      dragIndex: index,\n    },\n    collect: (monitor: DragSourceMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: type,\n\n    hover: (item: OptionItemInterface, monitor: DropTargetMonitor) => {\n      if (!ref.current) {\n        return;\n      }\n      const { dragIndex } = item;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset\n        ? clientOffset.y - hoverBoundingRect.top\n        : 0;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      onShiftOptions(dragIndex, hoverIndex);\n      // eslint-disable-next-line no-param-reassign\n      item.dragIndex = hoverIndex;\n    },\n  });\n\n  const shouldShowTooltip =\n    (!isDragging && tooltipTitle && label && tooltipTitle !== label) ||\n    (!isDragging &&\n      labelRef &&\n      labelRef.current &&\n      labelRef.current.scrollWidth > labelRef.current.clientWidth);\n\n  const LabelContent = () => {\n    if (!shouldShowTooltip) {\n      return <span>{label}</span>;\n    }\n    return (\n      <Tooltip title={tooltipTitle || label}>\n        <span>{label}</span>\n      </Tooltip>\n    );\n  };\n\n  const ColumnOption = () => (\n    <StyledColumnOption\n      column={column as ColumnMeta}\n      labelRef={labelRef}\n      showTooltip={!!shouldShowTooltip}\n      showType\n    />\n  );\n\n  const Label = () => {\n    if (label) {\n      return (\n        <OptionLabel ref={labelRef}>\n          <LabelContent />\n        </OptionLabel>\n      );\n    }\n    if (column) {\n      return (\n        <OptionLabel>\n          <ColumnOption />\n        </OptionLabel>\n      );\n    }\n    return null;\n  };\n\n  drag(drop(ref));\n\n  return (\n    <DragContainer ref={ref} {...rest}>\n      <Option\n        index={index}\n        clickClose={clickClose}\n        withCaret={withCaret}\n        isExtra={isExtra}\n        canDelete={canDelete}\n      >\n        <Label />\n      </Option>\n    </DragContainer>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}