{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import ascending from \"./ascending.js\";\nimport group, { rollup } from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length === 1 ?\n  sort(rollup(values, reduce, key), ([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)) :\n  sort(group(values, key), ([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))).\n  map(([key]) => key);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(groupSort, \"groupSort\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-array/src/groupSort.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/format/node_modules/d3-array/src/groupSort.js"],"names":["ascending","group","rollup","sort","groupSort","values","reduce","key","length","ak","av","bk","bv","map"],"mappings":"uSAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,IAAeC,MAAf,QAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwC;AACrD,SAAO,CAACD,MAAM,CAACE,MAAP,KAAkB,CAAlB;AACJL,EAAAA,IAAI,CAACD,MAAM,CAACG,MAAD,EAASC,MAAT,EAAiBC,GAAjB,CAAP,EAA+B,CAAC,CAACE,EAAD,EAAKC,EAAL,CAAD,EAAW,CAACC,EAAD,EAAKC,EAAL,CAAX,KAAwBZ,SAAS,CAACU,EAAD,EAAKE,EAAL,CAAT,IAAqBZ,SAAS,CAACS,EAAD,EAAKE,EAAL,CAArF,CADA;AAEJR,EAAAA,IAAI,CAACF,KAAK,CAACI,MAAD,EAASE,GAAT,CAAN,EAAsB,CAAC,CAACE,EAAD,EAAKC,EAAL,CAAD,EAAW,CAACC,EAAD,EAAKC,EAAL,CAAX,KAAwBN,MAAM,CAACI,EAAD,EAAKE,EAAL,CAAN,IAAkBZ,SAAS,CAACS,EAAD,EAAKE,EAAL,CAAzE,CAFD;AAGJE,EAAAA,GAHI,CAGA,CAAC,CAACN,GAAD,CAAD,KAAWA,GAHX,CAAP;AAID,C,iLALuBH,S","sourcesContent":["import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n"]},"metadata":{},"sourceType":"module"}