{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CompactPicker } from 'react-color';\nimport Button from 'src/components/Button';\nimport {\nt,\nSupersetClient,\ngetCategoricalSchemeRegistry,\ngetChartMetadataRegistry,\nvalidateNonEmpty,\nisValidExpression } from\n'@superset-ui/core';\n\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport CheckboxControl from 'src/explore/components/controls/CheckboxControl';\nimport {\nANNOTATION_SOURCE_TYPES,\nANNOTATION_TYPES,\nANNOTATION_TYPES_METADATA,\nDEFAULT_ANNOTATION_TYPE,\nrequiresQuery,\nANNOTATION_SOURCE_TYPES_METADATA } from\n'src/modules/AnnotationTypes';\nimport PopoverSection from 'src/components/PopoverSection';\nimport ControlHeader from 'src/explore/components/ControlHeader';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: PropTypes.string,\n  annotationType: PropTypes.string,\n  sourceType: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  style: PropTypes.string,\n  width: PropTypes.number,\n  showMarkers: PropTypes.bool,\n  hideLine: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overrides: PropTypes.object,\n  show: PropTypes.bool,\n  titleColumn: PropTypes.string,\n  descriptionColumns: PropTypes.arrayOf(PropTypes.string),\n  timeColumn: PropTypes.string,\n  intervalEndColumn: PropTypes.string,\n  vizType: PropTypes.string,\n\n  error: PropTypes.string,\n  colorScheme: PropTypes.string,\n\n  addAnnotationLayer: PropTypes.func,\n  removeAnnotationLayer: PropTypes.func,\n  close: PropTypes.func };\n\n\nconst defaultProps = {\n  name: '',\n  annotationType: DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {} };var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1h52dri\", styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap\" } : { name: \"1jn9azd-AnnotationLayer\", styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap;label:AnnotationLayer;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nexport default class AnnotationLayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      vizType } =\n    props;\n\n    // Only allow override whole time_range\n    if ('since' in overrides || 'until' in overrides) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    // Check if annotationType is supported by this chart\n    const metadata = getChartMetadataRegistry().get(vizType);\n    const supportedAnnotationTypes = (metadata == null ? void 0 : metadata.supportedAnnotationTypes) || [];\n    const validAnnotationType = supportedAnnotationTypes.includes(\n    annotationType) ?\n\n    annotationType :\n    supportedAnnotationTypes[0];\n\n    this.state = {\n      // base\n      name,\n      annotationType: validAnnotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !name,\n      isLoadingOptions: true,\n      valueOptions: [] };\n\n    this.submitAnnotation = this.submitAnnotation.bind(this);\n    this.deleteAnnotation = this.deleteAnnotation.bind(this);\n    this.applyAnnotation = this.applyAnnotation.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.handleAnnotationType = this.handleAnnotationType.bind(this);\n    this.handleAnnotationSourceType = this.handleAnnotationSourceType.bind(\n    this);\n\n    this.handleValue = this.handleValue.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {var _ANNOTATION_TYPES_MET;\n    // Get vis types that can be source.\n    const sources = getChartMetadataRegistry().\n    entries().\n    filter(({ value: chartMetadata }) =>\n    chartMetadata.canBeAnnotationType(annotationType)).\n\n    map(({ key, value: chartMetadata }) => ({\n      value: key,\n      label: chartMetadata.name }));\n\n    // Prepend native source if applicable\n    if ((_ANNOTATION_TYPES_MET = ANNOTATION_TYPES_METADATA[annotationType]) != null && _ANNOTATION_TYPES_MET.supportNativeSource) {\n      sources.unshift(ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormulaAnnotation(expression, annotationType) {\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return isValidExpression(expression);\n    }\n    return true;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn } =\n    this.state;\n    const errors = [\n    validateNonEmpty(name),\n    validateNonEmpty(annotationType),\n    validateNonEmpty(value)];\n\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === ANNOTATION_TYPES.EVENT) {\n        errors.push(validateNonEmpty(timeColumn));\n      }\n      if (annotationType === ANNOTATION_TYPES.INTERVAL) {\n        errors.push(validateNonEmpty(timeColumn));\n        errors.push(validateNonEmpty(intervalEndColumn));\n      }\n    }\n    errors.push(!this.isValidFormulaAnnotation(value, annotationType));\n    return !errors.filter((x) => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      value: null });\n\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({ sourceType, value: null, isLoadingOptions: true });\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: [],\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null } });\n\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        SupersetClient.get({\n          endpoint: '/annotationlayermodelview/api/read?' }).\n        then(({ json }) => {\n          const layers = json ?\n          json.result.map((layer) => ({\n            value: layer.id,\n            label: layer.name })) :\n\n          [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers });\n\n        });\n      } else if (requiresQuery(sourceType)) {\n        SupersetClient.get({ endpoint: '/superset/user_slices' }).then(\n        ({ json }) => {\n          const registry = getChartMetadataRegistry();\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: json.\n            filter((x) => {\n              const metadata = registry.get(x.viz_type);\n              return (\n                metadata && metadata.canBeAnnotationType(annotationType));\n\n            }).\n            map((x) => ({ value: x.id, label: x.title, slice: x })) });\n\n        });\n\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: [] });\n\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.removeAnnotationLayer();\n    this.props.close();\n  }\n\n  applyAnnotation() {\n    if (this.isValidForm()) {\n      const annotationFields = [\n      'name',\n      'annotationType',\n      'sourceType',\n      'color',\n      'opacity',\n      'style',\n      'width',\n      'showMarkers',\n      'hideLine',\n      'value',\n      'overrides',\n      'show',\n      'titleColumn',\n      'descriptionColumns',\n      'timeColumn',\n      'intervalEndColumn'];\n\n      const newAnnotation = {};\n      annotationFields.forEach((field) => {\n        if (this.state[field] !== null) {\n          newAnnotation[field] = this.state[field];\n        }\n      });\n\n      if (newAnnotation.color === AUTOMATIC_COLOR) {\n        newAnnotation.color = null;\n      }\n\n      this.props.addAnnotationLayer(newAnnotation);\n      this.setState({ isNew: false });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      ___EmotionJSX(\"span\", {\n        css: _ref,\n\n\n\n\n        title: option.label, __self: this, __source: { fileName: _jsxFileName, lineNumber: 355, columnNumber: 7 } },\n\n      option.label));\n\n\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions } =\n    this.state;\n    let label = '';\n    let description = '';\n    if (requiresQuery(sourceType)) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = 'Annotation layer';\n        description = 'Select the Annotation Layer you would like to use.';\n      } else {\n        label = t('Chart');\n        description = `Use a pre defined Superset Chart as a source for annotations and overlays.\n        your chart must be one of these visualization types:\n        [${this.getSupportedSourceTypes(annotationType).\n        map((x) => x.label).\n        join(', ')}]`;\n      }\n    } else if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      label = 'Formula';\n      description = `Expects a formula with depending time parameter 'x'\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\n        Example: '2x+5'`;\n    }\n    if (requiresQuery(sourceType)) {\n      return (\n        ___EmotionJSX(SelectControl, {\n          ariaLabel: t('Annotation layer value'),\n          name: \"annotation-layer-value\",\n          showHeader: true,\n          hovered: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          options: valueOptions,\n          isLoading: isLoadingOptions,\n          value: value,\n          onChange: this.handleValue,\n          validationErrors: !value ? ['Mandatory'] : [],\n          optionRenderer: this.renderOption, __self: this, __source: { fileName: _jsxFileName, lineNumber: 398, columnNumber: 9 } }));\n\n\n    }\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return (\n        ___EmotionJSX(TextControl, {\n          name: \"annotation-layer-value\",\n          hovered: true,\n          showHeader: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          value: value,\n          onChange: this.handleValue,\n          validationErrors:\n          !this.isValidFormulaAnnotation(value, annotationType) ?\n          ['Bad formula.'] :\n          [], __self: this, __source: { fileName: _jsxFileName, lineNumber: 417, columnNumber: 9 } }));\n\n\n\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns } =\n    this.state;\n    const { slice } = valueOptions.find((x) => x.value === value) || {};\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE && slice) {\n      const columns = (slice.data.groupby || []).\n      concat(slice.data.all_columns || []).\n      map((x) => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time ?\n      [{ value: '__timestamp', label: '__timestamp' }].concat(columns) :\n      columns;\n      return (\n        ___EmotionJSX(\"div\", { style: { marginRight: '2rem' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 458, columnNumber: 9 } },\n        ___EmotionJSX(PopoverSection, {\n          isSelected: true,\n          title: t('Annotation Slice Configuration'),\n          info: t(`This section allows you to configure how to use the slice\n               to generate annotations.`), __self: this, __source: { fileName: _jsxFileName, lineNumber: 459, columnNumber: 11 } },\n\n        (annotationType === ANNOTATION_TYPES.EVENT ||\n        annotationType === ANNOTATION_TYPES.INTERVAL) &&\n        ___EmotionJSX(SelectControl, {\n          ariaLabel: t('Annotation layer time column'),\n          hovered: true,\n          name: \"annotation-layer-time-column\",\n          label:\n          annotationType === ANNOTATION_TYPES.INTERVAL ?\n          t('Interval start column') :\n          t('Event time column'),\n\n          description: t(\n          'This column must contain date/time information.'),\n\n          validationErrors: !timeColumn ? ['Mandatory'] : [],\n          clearable: false,\n          options: timeColumnOptions,\n          value: timeColumn,\n          onChange: (v) => this.setState({ timeColumn: v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 467, columnNumber: 15 } }),\n\n\n        annotationType === ANNOTATION_TYPES.INTERVAL &&\n        ___EmotionJSX(SelectControl, {\n          ariaLabel: t('Annotation layer interval end'),\n          hovered: true,\n          name: \"annotation-layer-intervalEnd\",\n          label: t('Interval End column'),\n          description: t(\n          'This column must contain date/time information.'),\n\n          validationErrors: !intervalEndColumn ? ['Mandatory'] : [],\n          options: columns,\n          value: intervalEndColumn,\n          onChange: (value) => this.setState({ intervalEndColumn: value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 487, columnNumber: 15 } }),\n\n\n        ___EmotionJSX(SelectControl, {\n          ariaLabel: t('Annotation layer title column'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: t('Title Column'),\n          description: t('Pick a title for you annotation.'),\n          options: [{ value: '', label: 'None' }].concat(columns),\n          value: titleColumn,\n          onChange: (value) => this.setState({ titleColumn: value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 501, columnNumber: 13 } }),\n\n        annotationType !== ANNOTATION_TYPES.TIME_SERIES &&\n        ___EmotionJSX(SelectControl, {\n          ariaLabel: t('Annotation layer description columns'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: t('Description Columns'),\n          description: t(\n          \"Pick one or more columns that should be shown in the annotation. If you don't select a column all of them will be shown.\"),\n\n          multi: true,\n          options: columns,\n          value: descriptionColumns,\n          onChange: (value) => this.setState({ descriptionColumns: value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 512, columnNumber: 15 } }),\n\n\n        ___EmotionJSX(\"div\", { style: { marginTop: '1rem' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 526, columnNumber: 13 } },\n        ___EmotionJSX(CheckboxControl, {\n          hovered: true,\n          name: \"annotation-override-time_range\",\n          label: \"Override time range\",\n          description: `This controls whether the \"time_range\" field from the current\n                  view should be passed down to the chart containing the annotation data.`,\n          value: 'time_range' in overrides,\n          onChange: (v) => {\n            delete overrides.time_range;\n            if (v) {\n              this.setState({\n                overrides: { ...overrides, time_range: null } });\n\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 527, columnNumber: 15 } }),\n\n        ___EmotionJSX(CheckboxControl, {\n          hovered: true,\n          name: \"annotation-override-timegrain\",\n          label: \"Override time grain\",\n          description: `This controls whether the time grain field from the current\n                  view should be passed down to the chart containing the annotation data.`,\n          value: 'time_grain_sqla' in overrides,\n          onChange: (v) => {\n            delete overrides.time_grain_sqla;\n            delete overrides.granularity;\n            if (v) {\n              this.setState({\n                overrides: {\n                  ...overrides,\n                  time_grain_sqla: null,\n                  granularity: null } });\n\n\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 545, columnNumber: 15 } }),\n\n        ___EmotionJSX(TextControl, {\n          hovered: true,\n          name: \"annotation-layer-timeshift\",\n          label: \"Time Shift\",\n          description: `Time delta in natural language\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)`,\n          placeholder: \"\",\n          value: overrides.time_shift,\n          onChange: (v) =>\n          this.setState({ overrides: { ...overrides, time_shift: v } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 568, columnNumber: 15 } })))));\n\n\n\n\n\n\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType } =\n    this.state;\n    const colorScheme = getCategoricalSchemeRegistry().\n    get(this.props.colorScheme).\n    colors.concat();\n    if (\n    color &&\n    color !== AUTOMATIC_COLOR &&\n    !colorScheme.find((x) => x.toLowerCase() === color.toLowerCase()))\n    {\n      colorScheme.push(color);\n    }\n    return (\n      ___EmotionJSX(PopoverSection, {\n        isSelected: true,\n        title: t('Display configuration'),\n        info: t('Configure your how you overlay is displayed here.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 609, columnNumber: 7 } },\n\n      ___EmotionJSX(SelectControl, {\n        ariaLabel: t('Annotation layer stroke'),\n        name: \"annotation-layer-stroke\",\n        label: t('Style')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: 'solid', label: 'Solid' },\n        { value: 'dashed', label: 'Dashed' },\n        { value: 'longDashed', label: 'Long dashed' },\n        { value: 'dotted', label: 'Dotted' }],\n\n        value: style,\n        clearable: false,\n        onChange: (v) => this.setState({ style: v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 614, columnNumber: 9 } }),\n\n      ___EmotionJSX(SelectControl, {\n        ariaLabel: t('Annotation layer opacity'),\n        name: \"annotation-layer-opacity\",\n        label: t('Opacity')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: '', label: 'Solid' },\n        { value: 'opacityLow', label: '0.2' },\n        { value: 'opacityMedium', label: '0.5' },\n        { value: 'opacityHigh', label: '0.8' }],\n\n        value: opacity,\n        onChange: (value) => this.setState({ opacity: value }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 629, columnNumber: 9 } }),\n\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 643, columnNumber: 9 } },\n      ___EmotionJSX(ControlHeader, { label: t('Color'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 644, columnNumber: 11 } }),\n      ___EmotionJSX(\"div\", { style: { display: 'flex', flexDirection: 'column' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 645, columnNumber: 11 } },\n      ___EmotionJSX(CompactPicker, {\n        color: color,\n        colors: colorScheme,\n        onChangeComplete: (v) => this.setState({ color: v.hex }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 646, columnNumber: 13 } }),\n\n      ___EmotionJSX(Button, {\n        style: { marginTop: '0.5rem', marginBottom: '0.5rem' },\n        buttonStyle: color === AUTOMATIC_COLOR ? 'success' : 'default',\n        buttonSize: \"xsmall\",\n        onClick: () => this.setState({ color: AUTOMATIC_COLOR }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 651, columnNumber: 13 } }, \"Automatic Color\"))),\n\n\n\n\n\n      ___EmotionJSX(TextControl, {\n        name: \"annotation-layer-stroke-width\",\n        label: t('Line width'),\n        isInt: true,\n        value: width,\n        onChange: (v) => this.setState({ width: v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 661, columnNumber: 9 } }),\n\n      annotationType === ANNOTATION_TYPES.TIME_SERIES &&\n      ___EmotionJSX(CheckboxControl, {\n        hovered: true,\n        name: \"annotation-layer-show-markers\",\n        label: \"Show Markers\",\n        description: \"Shows or hides markers for the time series\",\n        value: showMarkers,\n        onChange: (v) => this.setState({ showMarkers: v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 669, columnNumber: 11 } }),\n\n\n      annotationType === ANNOTATION_TYPES.TIME_SERIES &&\n      ___EmotionJSX(CheckboxControl, {\n        hovered: true,\n        name: \"annotation-layer-hide-line\",\n        label: \"Hide Line\",\n        description: \"Hides the Line for the time series\",\n        value: hideLine,\n        onChange: (v) => this.setState({ hideLine: v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 679, columnNumber: 11 } })));\n\n\n\n\n  }\n\n  render() {\n    const { isNew, name, annotationType, sourceType, show } = this.state;\n    const isValid = this.isValidForm();\n    const metadata = getChartMetadataRegistry().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata ?\n    metadata.supportedAnnotationTypes.map(\n    (type) => ANNOTATION_TYPES_METADATA[type]) :\n\n    [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      this.props.error &&\n      ___EmotionJSX(\"span\", { style: { color: 'red' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 706, columnNumber: 11 } }, \"ERROR: \", this.props.error),\n\n      ___EmotionJSX(\"div\", { style: { display: 'flex', flexDirection: 'row' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 708, columnNumber: 9 } },\n      ___EmotionJSX(\"div\", { style: { marginRight: '2rem' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 709, columnNumber: 11 } },\n      ___EmotionJSX(PopoverSection, {\n        isSelected: true,\n        title: t('Layer configuration'),\n        info: t('Configure the basics of your Annotation Layer.'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 710, columnNumber: 13 } },\n\n      ___EmotionJSX(TextControl, {\n        name: \"annotation-layer-name\",\n        label: t('Name'),\n        placeholder: \"\",\n        value: name,\n        onChange: (v) => this.setState({ name: v }),\n        validationErrors: !name ? [t('Mandatory')] : [], __self: this, __source: { fileName: _jsxFileName, lineNumber: 715, columnNumber: 15 } }),\n\n      ___EmotionJSX(CheckboxControl, {\n        name: \"annotation-layer-hide\",\n        label: t('Hide layer'),\n        value: !show,\n        onChange: (v) => this.setState({ show: !v }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 723, columnNumber: 15 } }),\n\n      ___EmotionJSX(SelectControl, {\n        ariaLabel: t('Annotation layer type'),\n        hovered: true,\n        description: t('Choose the annotation layer type'),\n        label: t('Annotation layer type'),\n        name: \"annotation-layer-type\",\n        clearable: false,\n        options: supportedAnnotationTypes,\n        value: annotationType,\n        onChange: this.handleAnnotationType, __self: this, __source: { fileName: _jsxFileName, lineNumber: 729, columnNumber: 15 } }),\n\n      supportedSourceTypes.length > 0 &&\n      ___EmotionJSX(SelectControl, {\n        ariaLabel: t('Annotation source type'),\n        hovered: true,\n        description: t('Choose the source of your annotations'),\n        label: t('Annotation Source'),\n        name: \"annotation-source-type\",\n        options: supportedSourceTypes,\n        value: sourceType,\n        onChange: this.handleAnnotationSourceType,\n        validationErrors: !sourceType ? [t('Mandatory')] : [], __self: this, __source: { fileName: _jsxFileName, lineNumber: 741, columnNumber: 17 } }),\n\n\n      this.renderValueConfiguration())),\n\n\n      this.renderSliceConfiguration(),\n      this.renderDisplayConfiguration()),\n\n      ___EmotionJSX(\"div\", { style: { display: 'flex', justifyContent: 'space-between' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 759, columnNumber: 9 } },\n      isNew ?\n      ___EmotionJSX(Button, { buttonSize: \"small\", onClick: () => this.props.close(), __self: this, __source: { fileName: _jsxFileName, lineNumber: 761, columnNumber: 13 } },\n      t('Cancel')) :\n\n\n      ___EmotionJSX(Button, { buttonSize: \"small\", onClick: this.deleteAnnotation, __self: this, __source: { fileName: _jsxFileName, lineNumber: 765, columnNumber: 13 } },\n      t('Remove')),\n\n\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 769, columnNumber: 11 } },\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        disabled: !isValid,\n        onClick: this.applyAnnotation, __self: this, __source: { fileName: _jsxFileName, lineNumber: 770, columnNumber: 13 } },\n\n      t('Apply')),\n\n\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        disabled: !isValid,\n        onClick: this.submitAnnotation, __self: this, __source: { fileName: _jsxFileName, lineNumber: 778, columnNumber: 13 } },\n\n      t('OK'))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AUTOMATIC_COLOR, \"AUTOMATIC_COLOR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(AnnotationLayer, \"AnnotationLayer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx"],"names":["React","PropTypes","CompactPicker","Button","t","SupersetClient","getCategoricalSchemeRegistry","getChartMetadataRegistry","validateNonEmpty","isValidExpression","SelectControl","TextControl","CheckboxControl","ANNOTATION_SOURCE_TYPES","ANNOTATION_TYPES","ANNOTATION_TYPES_METADATA","DEFAULT_ANNOTATION_TYPE","requiresQuery","ANNOTATION_SOURCE_TYPES_METADATA","PopoverSection","ControlHeader","AUTOMATIC_COLOR","propTypes","name","string","annotationType","sourceType","color","opacity","style","width","number","showMarkers","bool","hideLine","value","oneOfType","overrides","object","show","titleColumn","descriptionColumns","arrayOf","timeColumn","intervalEndColumn","vizType","error","colorScheme","addAnnotationLayer","func","removeAnnotationLayer","close","defaultProps","AnnotationLayer","PureComponent","constructor","props","time_range","since","until","metadata","get","supportedAnnotationTypes","validAnnotationType","includes","state","isNew","isLoadingOptions","valueOptions","submitAnnotation","bind","deleteAnnotation","applyAnnotation","fetchOptions","handleAnnotationType","handleAnnotationSourceType","handleValue","isValidForm","componentDidMount","componentDidUpdate","prevProps","prevState","getSupportedSourceTypes","sources","entries","filter","chartMetadata","canBeAnnotationType","map","key","label","supportNativeSource","unshift","NATIVE","isValidFormulaAnnotation","expression","FORMULA","errors","EVENT","push","INTERVAL","x","length","setState","prevSourceType","endpoint","then","json","layers","result","layer","id","registry","viz_type","title","slice","annotationFields","newAnnotation","forEach","field","renderOption","option","renderValueConfiguration","description","join","renderSliceConfiguration","find","columns","data","groupby","concat","all_columns","timeColumnOptions","include_time","marginRight","v","TIME_SERIES","marginTop","time_grain_sqla","granularity","time_shift","renderDisplayConfiguration","colors","toLowerCase","display","flexDirection","hex","marginBottom","render","isValid","type","supportedSourceTypes","justifyContent"],"mappings":"itBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA;AACEC,CADF;AAEEC,cAFF;AAGEC,4BAHF;AAIEC,wBAJF;AAKEC,gBALF;AAMEC,iBANF;AAOO,mBAPP;;AASA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA;AACEC,uBADF;AAEEC,gBAFF;AAGEC,yBAHF;AAIEC,uBAJF;AAKEC,aALF;AAMEC,gCANF;AAOO,6BAPP;AAQA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,sCAA1B,C;;AAEA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAEtB,SAAS,CAACuB,MADA;AAEhBC,EAAAA,cAAc,EAAExB,SAAS,CAACuB,MAFV;AAGhBE,EAAAA,UAAU,EAAEzB,SAAS,CAACuB,MAHN;AAIhBG,EAAAA,KAAK,EAAE1B,SAAS,CAACuB,MAJD;AAKhBI,EAAAA,OAAO,EAAE3B,SAAS,CAACuB,MALH;AAMhBK,EAAAA,KAAK,EAAE5B,SAAS,CAACuB,MAND;AAOhBM,EAAAA,KAAK,EAAE7B,SAAS,CAAC8B,MAPD;AAQhBC,EAAAA,WAAW,EAAE/B,SAAS,CAACgC,IARP;AAShBC,EAAAA,QAAQ,EAAEjC,SAAS,CAACgC,IATJ;AAUhBE,EAAAA,KAAK,EAAElC,SAAS,CAACmC,SAAV,CAAoB,CAACnC,SAAS,CAACuB,MAAX,EAAmBvB,SAAS,CAAC8B,MAA7B,CAApB,CAVS;AAWhBM,EAAAA,SAAS,EAAEpC,SAAS,CAACqC,MAXL;AAYhBC,EAAAA,IAAI,EAAEtC,SAAS,CAACgC,IAZA;AAahBO,EAAAA,WAAW,EAAEvC,SAAS,CAACuB,MAbP;AAchBiB,EAAAA,kBAAkB,EAAExC,SAAS,CAACyC,OAAV,CAAkBzC,SAAS,CAACuB,MAA5B,CAdJ;AAehBmB,EAAAA,UAAU,EAAE1C,SAAS,CAACuB,MAfN;AAgBhBoB,EAAAA,iBAAiB,EAAE3C,SAAS,CAACuB,MAhBb;AAiBhBqB,EAAAA,OAAO,EAAE5C,SAAS,CAACuB,MAjBH;;AAmBhBsB,EAAAA,KAAK,EAAE7C,SAAS,CAACuB,MAnBD;AAoBhBuB,EAAAA,WAAW,EAAE9C,SAAS,CAACuB,MApBP;;AAsBhBwB,EAAAA,kBAAkB,EAAE/C,SAAS,CAACgD,IAtBd;AAuBhBC,EAAAA,qBAAqB,EAAEjD,SAAS,CAACgD,IAvBjB;AAwBhBE,EAAAA,KAAK,EAAElD,SAAS,CAACgD,IAxBD,EAAlB;;;AA2BA,MAAMG,YAAY,GAAG;AACnB7B,EAAAA,IAAI,EAAE,EADa;AAEnBE,EAAAA,cAAc,EAAET,uBAFG;AAGnBU,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,KAAK,EAAEN,eAJY;AAKnBO,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,KAAK,EAAE,OANY;AAOnBC,EAAAA,KAAK,EAAE,CAPY;AAQnBE,EAAAA,WAAW,EAAE,KARM;AASnBE,EAAAA,QAAQ,EAAE,KATS;AAUnBG,EAAAA,SAAS,EAAE,EAVQ;AAWnBU,EAAAA,WAAW,EAAE,cAXM;AAYnBR,EAAAA,IAAI,EAAE,IAZa;AAanBC,EAAAA,WAAW,EAAE,EAbM;AAcnBC,EAAAA,kBAAkB,EAAE,EAdD;AAenBE,EAAAA,UAAU,EAAE,EAfO;AAgBnBC,EAAAA,iBAAiB,EAAE,EAhBA;;AAkBnBI,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CAlBT;AAmBnBE,EAAAA,qBAAqB,EAAE,MAAM,CAAE,CAnBZ;AAoBnBC,EAAAA,KAAK,EAAE,MAAM,CAAE,CApBI,EAArB,C;;;AAuBA,eAAe,MAAME,eAAN,SAA8BrD,KAAK,CAACsD,aAApC,CAAkD;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AACJjC,MAAAA,IADI;AAEJE,MAAAA,cAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,KANI;AAOJC,MAAAA,KAPI;AAQJE,MAAAA,WARI;AASJE,MAAAA,QATI;AAUJC,MAAAA,KAVI;AAWJE,MAAAA,SAXI;AAYJE,MAAAA,IAZI;AAaJC,MAAAA,WAbI;AAcJC,MAAAA,kBAdI;AAeJE,MAAAA,UAfI;AAgBJC,MAAAA,iBAhBI;AAiBJC,MAAAA,OAjBI;AAkBFW,IAAAA,KAlBJ;;AAoBA;AACA,QAAI,WAAWnB,SAAX,IAAwB,WAAWA,SAAvC,EAAkD;AAChDA,MAAAA,SAAS,CAACoB,UAAV,GAAuB,IAAvB;AACA,aAAOpB,SAAS,CAACqB,KAAjB;AACA,aAAOrB,SAAS,CAACsB,KAAjB;AACD;;AAED;AACA,UAAMC,QAAQ,GAAGrD,wBAAwB,GAAGsD,GAA3B,CAA+BhB,OAA/B,CAAjB;AACA,UAAMiB,wBAAwB,GAAG,CAAAF,QAAQ,QAAR,YAAAA,QAAQ,CAAEE,wBAAV,KAAsC,EAAvE;AACA,UAAMC,mBAAmB,GAAGD,wBAAwB,CAACE,QAAzB;AAC1BvC,IAAAA,cAD0B;;AAGxBA,IAAAA,cAHwB;AAIxBqC,IAAAA,wBAAwB,CAAC,CAAD,CAJ5B;;AAMA,SAAKG,KAAL,GAAa;AACX;AACA1C,MAAAA,IAFW;AAGXE,MAAAA,cAAc,EAAEsC,mBAHL;AAIXrC,MAAAA,UAJW;AAKXS,MAAAA,KALW;AAMXE,MAAAA,SANW;AAOXE,MAAAA,IAPW;AAQX;AACAC,MAAAA,WATW;AAUXC,MAAAA,kBAVW;AAWXE,MAAAA,UAXW;AAYXC,MAAAA,iBAZW;AAaX;AACAjB,MAAAA,KAAK,EAAEA,KAAK,IAAIN,eAdL;AAeXO,MAAAA,OAfW;AAgBXC,MAAAA,KAhBW;AAiBXC,MAAAA,KAjBW;AAkBXE,MAAAA,WAlBW;AAmBXE,MAAAA,QAnBW;AAoBX;AACAgC,MAAAA,KAAK,EAAE,CAAC3C,IArBG;AAsBX4C,MAAAA,gBAAgB,EAAE,IAtBP;AAuBXC,MAAAA,YAAY,EAAE,EAvBH,EAAb;;AAyBA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BJ,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKK,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCL,IAAhC;AAChC,QADgC,CAAlC;;AAGA,SAAKM,WAAL,GAAmB,KAAKA,WAAL,CAAiBN,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKO,WAAL,GAAmB,KAAKA,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM,EAAErD,cAAF,EAAkBC,UAAlB,EAA8ByC,gBAA9B,KAAmD,KAAKF,KAA9D;AACA,SAAKQ,YAAL,CAAkBhD,cAAlB,EAAkCC,UAAlC,EAA8CyC,gBAA9C;AACD;;AAEDY,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACvD,UAAV,KAAyB,KAAKuC,KAAL,CAAWvC,UAAxC,EAAoD;AAClD,WAAK+C,YAAL,CAAkB,KAAKR,KAAL,CAAWxC,cAA7B,EAA6C,KAAKwC,KAAL,CAAWvC,UAAxD,EAAoE,IAApE;AACD;AACF;;AAEDwD,EAAAA,uBAAuB,CAACzD,cAAD,EAAiB;AACtC;AACA,UAAM0D,OAAO,GAAG5E,wBAAwB;AACrC6E,IAAAA,OADa;AAEbC,IAAAA,MAFa,CAEN,CAAC,EAAElD,KAAK,EAAEmD,aAAT,EAAD;AACNA,IAAAA,aAAa,CAACC,mBAAd,CAAkC9D,cAAlC,CAHY;;AAKb+D,IAAAA,GALa,CAKT,CAAC,EAAEC,GAAF,EAAOtD,KAAK,EAAEmD,aAAd,EAAD,MAAoC;AACvCnD,MAAAA,KAAK,EAAEsD,GADgC;AAEvCC,MAAAA,KAAK,EAAEJ,aAAa,CAAC/D,IAFkB,EAApC,CALS,CAAhB;;AASA;AACA,iCAAIR,yBAAyB,CAACU,cAAD,CAA7B,aAAI,sBAA2CkE,mBAA/C,EAAoE;AAClER,MAAAA,OAAO,CAACS,OAAR,CAAgB1E,gCAAgC,CAAC2E,MAAjD;AACD;AACD,WAAOV,OAAP;AACD;;AAEDW,EAAAA,wBAAwB,CAACC,UAAD,EAAatE,cAAb,EAA6B;AACnD,QAAIA,cAAc,KAAKX,gBAAgB,CAACkF,OAAxC,EAAiD;AAC/C,aAAOvF,iBAAiB,CAACsF,UAAD,CAAxB;AACD;AACD,WAAO,IAAP;AACD;;AAEDlB,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJtD,MAAAA,IADI;AAEJE,MAAAA,cAFI;AAGJC,MAAAA,UAHI;AAIJS,MAAAA,KAJI;AAKJQ,MAAAA,UALI;AAMJC,MAAAA,iBANI;AAOF,SAAKqB,KAPT;AAQA,UAAMgC,MAAM,GAAG;AACbzF,IAAAA,gBAAgB,CAACe,IAAD,CADH;AAEbf,IAAAA,gBAAgB,CAACiB,cAAD,CAFH;AAGbjB,IAAAA,gBAAgB,CAAC2B,KAAD,CAHH,CAAf;;AAKA,QAAIT,UAAU,KAAKb,uBAAuB,CAACgF,MAA3C,EAAmD;AACjD,UAAIpE,cAAc,KAAKX,gBAAgB,CAACoF,KAAxC,EAA+C;AAC7CD,QAAAA,MAAM,CAACE,IAAP,CAAY3F,gBAAgB,CAACmC,UAAD,CAA5B;AACD;AACD,UAAIlB,cAAc,KAAKX,gBAAgB,CAACsF,QAAxC,EAAkD;AAChDH,QAAAA,MAAM,CAACE,IAAP,CAAY3F,gBAAgB,CAACmC,UAAD,CAA5B;AACAsD,QAAAA,MAAM,CAACE,IAAP,CAAY3F,gBAAgB,CAACoC,iBAAD,CAA5B;AACD;AACF;AACDqD,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,KAAKL,wBAAL,CAA8B3D,KAA9B,EAAqCV,cAArC,CAAb;AACA,WAAO,CAACwE,MAAM,CAACZ,MAAP,CAAc,CAAAgB,CAAC,KAAIA,CAAnB,EAAsBC,MAA9B;AACD;;AAED5B,EAAAA,oBAAoB,CAACjD,cAAD,EAAiB;AACnC,SAAK8E,QAAL,CAAc;AACZ9E,MAAAA,cADY;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZS,MAAAA,KAAK,EAAE,IAHK,EAAd;;AAKD;;AAEDwC,EAAAA,0BAA0B,CAACjD,UAAD,EAAa;AACrC,UAAM,EAAEA,UAAU,EAAE8E,cAAd,KAAiC,KAAKvC,KAA5C;;AAEA,QAAIuC,cAAc,KAAK9E,UAAvB,EAAmC;AACjC,WAAK6E,QAAL,CAAc,EAAE7E,UAAF,EAAcS,KAAK,EAAE,IAArB,EAA2BgC,gBAAgB,EAAE,IAA7C,EAAd;AACD;AACF;;AAEDS,EAAAA,WAAW,CAACzC,KAAD,EAAQ;AACjB,SAAKoE,QAAL,CAAc;AACZpE,MAAAA,KADY;AAEZM,MAAAA,kBAAkB,EAAE,EAFR;AAGZG,MAAAA,iBAAiB,EAAE,IAHP;AAIZD,MAAAA,UAAU,EAAE,IAJA;AAKZH,MAAAA,WAAW,EAAE,IALD;AAMZH,MAAAA,SAAS,EAAE,EAAEoB,UAAU,EAAE,IAAd,EANC,EAAd;;AAQD;;AAEDgB,EAAAA,YAAY,CAAChD,cAAD,EAAiBC,UAAjB,EAA6ByC,gBAA7B,EAA+C;AACzD,QAAIA,gBAAJ,EAAsB;AACpB,UAAIzC,UAAU,KAAKb,uBAAuB,CAACgF,MAA3C,EAAmD;AACjDxF,QAAAA,cAAc,CAACwD,GAAf,CAAmB;AACjB4C,UAAAA,QAAQ,EAAE,qCADO,EAAnB;AAEGC,QAAAA,IAFH,CAEQ,CAAC,EAAEC,IAAF,EAAD,KAAc;AACpB,gBAAMC,MAAM,GAAGD,IAAI;AACfA,UAAAA,IAAI,CAACE,MAAL,CAAYrB,GAAZ,CAAgB,CAAAsB,KAAK,MAAK;AACxB3E,YAAAA,KAAK,EAAE2E,KAAK,CAACC,EADW;AAExBrB,YAAAA,KAAK,EAAEoB,KAAK,CAACvF,IAFW,EAAL,CAArB,CADe;;AAKf,YALJ;AAMA,eAAKgF,QAAL,CAAc;AACZpC,YAAAA,gBAAgB,EAAE,KADN;AAEZC,YAAAA,YAAY,EAAEwC,MAFF,EAAd;;AAID,SAbD;AAcD,OAfD,MAeO,IAAI3F,aAAa,CAACS,UAAD,CAAjB,EAA+B;AACpCrB,QAAAA,cAAc,CAACwD,GAAf,CAAmB,EAAE4C,QAAQ,EAAE,uBAAZ,EAAnB,EAA0DC,IAA1D;AACE,SAAC,EAAEC,IAAF,EAAD,KAAc;AACZ,gBAAMK,QAAQ,GAAGzG,wBAAwB,EAAzC;AACA,eAAKgG,QAAL,CAAc;AACZpC,YAAAA,gBAAgB,EAAE,KADN;AAEZC,YAAAA,YAAY,EAAEuC,IAAI;AACftB,YAAAA,MADW,CACJ,CAAAgB,CAAC,KAAI;AACX,oBAAMzC,QAAQ,GAAGoD,QAAQ,CAACnD,GAAT,CAAawC,CAAC,CAACY,QAAf,CAAjB;AACA;AACErD,gBAAAA,QAAQ,IAAIA,QAAQ,CAAC2B,mBAAT,CAA6B9D,cAA7B,CADd;;AAGD,aANW;AAOX+D,YAAAA,GAPW,CAOP,CAAAa,CAAC,MAAK,EAAElE,KAAK,EAAEkE,CAAC,CAACU,EAAX,EAAerB,KAAK,EAAEW,CAAC,CAACa,KAAxB,EAA+BC,KAAK,EAAEd,CAAtC,EAAL,CAPM,CAFF,EAAd;;AAWD,SAdH;;AAgBD,OAjBM,MAiBA;AACL,aAAKE,QAAL,CAAc;AACZpC,UAAAA,gBAAgB,EAAE,KADN;AAEZC,UAAAA,YAAY,EAAE,EAFF,EAAd;;AAID;AACF;AACF;;AAEDG,EAAAA,gBAAgB,GAAG;AACjB,SAAKf,KAAL,CAAWN,qBAAX;AACA,SAAKM,KAAL,CAAWL,KAAX;AACD;;AAEDqB,EAAAA,eAAe,GAAG;AAChB,QAAI,KAAKK,WAAL,EAAJ,EAAwB;AACtB,YAAMuC,gBAAgB,GAAG;AACvB,YADuB;AAEvB,sBAFuB;AAGvB,kBAHuB;AAIvB,aAJuB;AAKvB,eALuB;AAMvB,aANuB;AAOvB,aAPuB;AAQvB,mBARuB;AASvB,gBATuB;AAUvB,aAVuB;AAWvB,iBAXuB;AAYvB,YAZuB;AAavB,mBAbuB;AAcvB,0BAduB;AAevB,kBAfuB;AAgBvB,yBAhBuB,CAAzB;;AAkBA,YAAMC,aAAa,GAAG,EAAtB;AACAD,MAAAA,gBAAgB,CAACE,OAAjB,CAAyB,CAAAC,KAAK,KAAI;AAChC,YAAI,KAAKtD,KAAL,CAAWsD,KAAX,MAAsB,IAA1B,EAAgC;AAC9BF,UAAAA,aAAa,CAACE,KAAD,CAAb,GAAuB,KAAKtD,KAAL,CAAWsD,KAAX,CAAvB;AACD;AACF,OAJD;;AAMA,UAAIF,aAAa,CAAC1F,KAAd,KAAwBN,eAA5B,EAA6C;AAC3CgG,QAAAA,aAAa,CAAC1F,KAAd,GAAsB,IAAtB;AACD;;AAED,WAAK6B,KAAL,CAAWR,kBAAX,CAA8BqE,aAA9B;AACA,WAAKd,QAAL,CAAc,EAAErC,KAAK,EAAE,KAAT,EAAd;AACD;AACF;;AAEDG,EAAAA,gBAAgB,GAAG;AACjB,SAAKG,eAAL;AACA,SAAKhB,KAAL,CAAWL,KAAX;AACD;;AAEDqE,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB;AACE;AACE,QAAA,GAAG,MADL;;;;;AAME,QAAA,KAAK,EAAEA,MAAM,CAAC/B,KANhB;;AAQG+B,MAAAA,MAAM,CAAC/B,KARV,CADF;;;AAYD;;AAEDgC,EAAAA,wBAAwB,GAAG;AACzB,UAAM;AACJjG,MAAAA,cADI;AAEJC,MAAAA,UAFI;AAGJS,MAAAA,KAHI;AAIJiC,MAAAA,YAJI;AAKJD,MAAAA,gBALI;AAMF,SAAKF,KANT;AAOA,QAAIyB,KAAK,GAAG,EAAZ;AACA,QAAIiC,WAAW,GAAG,EAAlB;AACA,QAAI1G,aAAa,CAACS,UAAD,CAAjB,EAA+B;AAC7B,UAAIA,UAAU,KAAKb,uBAAuB,CAACgF,MAA3C,EAAmD;AACjDH,QAAAA,KAAK,GAAG,kBAAR;AACAiC,QAAAA,WAAW,GAAG,oDAAd;AACD,OAHD,MAGO;AACLjC,QAAAA,KAAK,GAAGtF,CAAC,CAAC,OAAD,CAAT;AACAuH,QAAAA,WAAW,GAAI;AACvB;AACA,WAAW,KAAKzC,uBAAL,CAA6BzD,cAA7B;AACA+D,QAAAA,GADA,CACI,CAAAa,CAAC,KAAIA,CAAC,CAACX,KADX;AAEAkC,QAAAA,IAFA,CAEK,IAFL,CAEW,GAJd;AAKD;AACF,KAZD,MAYO,IAAInG,cAAc,KAAKX,gBAAgB,CAACkF,OAAxC,EAAiD;AACtDN,MAAAA,KAAK,GAAG,SAAR;AACAiC,MAAAA,WAAW,GAAI;AACrB;AACA,wBAFM;AAGD;AACD,QAAI1G,aAAa,CAACS,UAAD,CAAjB,EAA+B;AAC7B;AACE,sBAAC,aAAD;AACE,UAAA,SAAS,EAAEtB,CAAC,CAAC,wBAAD,CADd;AAEE,UAAA,IAAI,EAAC,wBAFP;AAGE,UAAA,UAAU,MAHZ;AAIE,UAAA,OAAO,MAJT;AAKE,UAAA,WAAW,EAAEuH,WALf;AAME,UAAA,KAAK,EAAEjC,KANT;AAOE,UAAA,WAAW,EAAC,EAPd;AAQE,UAAA,OAAO,EAAEtB,YARX;AASE,UAAA,SAAS,EAAED,gBATb;AAUE,UAAA,KAAK,EAAEhC,KAVT;AAWE,UAAA,QAAQ,EAAE,KAAKyC,WAXjB;AAYE,UAAA,gBAAgB,EAAE,CAACzC,KAAD,GAAS,CAAC,WAAD,CAAT,GAAyB,EAZ7C;AAaE,UAAA,cAAc,EAAE,KAAKqF,YAbvB,yFADF;;;AAiBD;AACD,QAAI/F,cAAc,KAAKX,gBAAgB,CAACkF,OAAxC,EAAiD;AAC/C;AACE,sBAAC,WAAD;AACE,UAAA,IAAI,EAAC,wBADP;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,UAAU,MAHZ;AAIE,UAAA,WAAW,EAAE2B,WAJf;AAKE,UAAA,KAAK,EAAEjC,KALT;AAME,UAAA,WAAW,EAAC,EANd;AAOE,UAAA,KAAK,EAAEvD,KAPT;AAQE,UAAA,QAAQ,EAAE,KAAKyC,WARjB;AASE,UAAA,gBAAgB;AACd,WAAC,KAAKkB,wBAAL,CAA8B3D,KAA9B,EAAqCV,cAArC,CAAD;AACI,WAAC,cAAD,CADJ;AAEI,YAZR,yFADF;;;;AAiBD;AACD,WAAO,EAAP;AACD;;AAEDoG,EAAAA,wBAAwB,GAAG;AACzB,UAAM;AACJpG,MAAAA,cADI;AAEJC,MAAAA,UAFI;AAGJS,MAAAA,KAHI;AAIJiC,MAAAA,YAJI;AAKJ/B,MAAAA,SALI;AAMJG,MAAAA,WANI;AAOJG,MAAAA,UAPI;AAQJC,MAAAA,iBARI;AASJH,MAAAA,kBATI;AAUF,SAAKwB,KAVT;AAWA,UAAM,EAAEkD,KAAF,KAAY/C,YAAY,CAAC0D,IAAb,CAAkB,CAAAzB,CAAC,KAAIA,CAAC,CAAClE,KAAF,KAAYA,KAAnC,KAA6C,EAA/D;AACA,QAAIT,UAAU,KAAKb,uBAAuB,CAACgF,MAAvC,IAAiDsB,KAArD,EAA4D;AAC1D,YAAMY,OAAO,GAAG,CAACZ,KAAK,CAACa,IAAN,CAAWC,OAAX,IAAsB,EAAvB;AACbC,MAAAA,MADa,CACNf,KAAK,CAACa,IAAN,CAAWG,WAAX,IAA0B,EADpB;AAEb3C,MAAAA,GAFa,CAET,CAAAa,CAAC,MAAK,EAAElE,KAAK,EAAEkE,CAAT,EAAYX,KAAK,EAAEW,CAAnB,EAAL,CAFQ,CAAhB;AAGA,YAAM+B,iBAAiB,GAAGjB,KAAK,CAACa,IAAN,CAAWK,YAAX;AACtB,OAAC,EAAElG,KAAK,EAAE,aAAT,EAAwBuD,KAAK,EAAE,aAA/B,EAAD,EAAiDwC,MAAjD,CAAwDH,OAAxD,CADsB;AAEtBA,MAAAA,OAFJ;AAGA;AACE,+BAAK,KAAK,EAAE,EAAEO,WAAW,EAAE,MAAf,EAAZ;AACE,sBAAC,cAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,KAAK,EAAElI,CAAC,CAAC,gCAAD,CAFV;AAGE,UAAA,IAAI,EAAEA,CAAC,CAAE;AACrB,wCADmB,CAHT;;AAMG,SAACqB,cAAc,KAAKX,gBAAgB,CAACoF,KAApC;AACAzE,QAAAA,cAAc,KAAKX,gBAAgB,CAACsF,QADrC;AAEC,sBAAC,aAAD;AACE,UAAA,SAAS,EAAEhG,CAAC,CAAC,8BAAD,CADd;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,IAAI,EAAC,8BAHP;AAIE,UAAA,KAAK;AACHqB,UAAAA,cAAc,KAAKX,gBAAgB,CAACsF,QAApC;AACIhG,UAAAA,CAAC,CAAC,uBAAD,CADL;AAEIA,UAAAA,CAAC,CAAC,mBAAD,CAPT;;AASE,UAAA,WAAW,EAAEA,CAAC;AACZ,2DADY,CAThB;;AAYE,UAAA,gBAAgB,EAAE,CAACuC,UAAD,GAAc,CAAC,WAAD,CAAd,GAA8B,EAZlD;AAaE,UAAA,SAAS,EAAE,KAbb;AAcE,UAAA,OAAO,EAAEyF,iBAdX;AAeE,UAAA,KAAK,EAAEzF,UAfT;AAgBE,UAAA,QAAQ,EAAE,CAAA4F,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAE5D,UAAU,EAAE4F,CAAd,EAAd,CAhBjB,0FARJ;;;AA2BG9G,QAAAA,cAAc,KAAKX,gBAAgB,CAACsF,QAApC;AACC,sBAAC,aAAD;AACE,UAAA,SAAS,EAAEhG,CAAC,CAAC,+BAAD,CADd;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,IAAI,EAAC,8BAHP;AAIE,UAAA,KAAK,EAAEA,CAAC,CAAC,qBAAD,CAJV;AAKE,UAAA,WAAW,EAAEA,CAAC;AACZ,2DADY,CALhB;;AAQE,UAAA,gBAAgB,EAAE,CAACwC,iBAAD,GAAqB,CAAC,WAAD,CAArB,GAAqC,EARzD;AASE,UAAA,OAAO,EAAEmF,OATX;AAUE,UAAA,KAAK,EAAEnF,iBAVT;AAWE,UAAA,QAAQ,EAAE,CAAAT,KAAK,KAAI,KAAKoE,QAAL,CAAc,EAAE3D,iBAAiB,EAAET,KAArB,EAAd,CAXrB,0FA5BJ;;;AA0CE,sBAAC,aAAD;AACE,UAAA,SAAS,EAAE/B,CAAC,CAAC,+BAAD,CADd;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,IAAI,EAAC,wBAHP;AAIE,UAAA,KAAK,EAAEA,CAAC,CAAC,cAAD,CAJV;AAKE,UAAA,WAAW,EAAEA,CAAC,CAAC,kCAAD,CALhB;AAME,UAAA,OAAO,EAAE,CAAC,EAAE+B,KAAK,EAAE,EAAT,EAAauD,KAAK,EAAE,MAApB,EAAD,EAA+BwC,MAA/B,CAAsCH,OAAtC,CANX;AAOE,UAAA,KAAK,EAAEvF,WAPT;AAQE,UAAA,QAAQ,EAAE,CAAAL,KAAK,KAAI,KAAKoE,QAAL,CAAc,EAAE/D,WAAW,EAAEL,KAAf,EAAd,CARrB,0FA1CF;;AAoDGV,QAAAA,cAAc,KAAKX,gBAAgB,CAAC0H,WAApC;AACC,sBAAC,aAAD;AACE,UAAA,SAAS,EAAEpI,CAAC,CAAC,sCAAD,CADd;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,IAAI,EAAC,wBAHP;AAIE,UAAA,KAAK,EAAEA,CAAC,CAAC,qBAAD,CAJV;AAKE,UAAA,WAAW,EAAEA,CAAC;AACZ,oIADY,CALhB;;AAQE,UAAA,KAAK,MARP;AASE,UAAA,OAAO,EAAE2H,OATX;AAUE,UAAA,KAAK,EAAEtF,kBAVT;AAWE,UAAA,QAAQ,EAAE,CAAAN,KAAK,KAAI,KAAKoE,QAAL,CAAc,EAAE9D,kBAAkB,EAAEN,KAAtB,EAAd,CAXrB,0FArDJ;;;AAmEE,+BAAK,KAAK,EAAE,EAAEsG,SAAS,EAAE,MAAb,EAAZ;AACE,sBAAC,eAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,IAAI,EAAC,gCAFP;AAGE,UAAA,KAAK,EAAC,qBAHR;AAIE,UAAA,WAAW,EAAG;AAC9B,0FALc;AAME,UAAA,KAAK,EAAE,gBAAgBpG,SANzB;AAOE,UAAA,QAAQ,EAAE,CAAAkG,CAAC,KAAI;AACb,mBAAOlG,SAAS,CAACoB,UAAjB;AACA,gBAAI8E,CAAJ,EAAO;AACL,mBAAKhC,QAAL,CAAc;AACZlE,gBAAAA,SAAS,EAAE,EAAE,GAAGA,SAAL,EAAgBoB,UAAU,EAAE,IAA5B,EADC,EAAd;;AAGD,aAJD,MAIO;AACL,mBAAK8C,QAAL,CAAc,EAAElE,SAAS,EAAE,EAAE,GAAGA,SAAL,EAAb,EAAd;AACD;AACF,WAhBH,0FADF;;AAmBE,sBAAC,eAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,IAAI,EAAC,+BAFP;AAGE,UAAA,KAAK,EAAC,qBAHR;AAIE,UAAA,WAAW,EAAG;AAC9B,0FALc;AAME,UAAA,KAAK,EAAE,qBAAqBA,SAN9B;AAOE,UAAA,QAAQ,EAAE,CAAAkG,CAAC,KAAI;AACb,mBAAOlG,SAAS,CAACqG,eAAjB;AACA,mBAAOrG,SAAS,CAACsG,WAAjB;AACA,gBAAIJ,CAAJ,EAAO;AACL,mBAAKhC,QAAL,CAAc;AACZlE,gBAAAA,SAAS,EAAE;AACT,qBAAGA,SADM;AAETqG,kBAAAA,eAAe,EAAE,IAFR;AAGTC,kBAAAA,WAAW,EAAE,IAHJ,EADC,EAAd;;;AAOD,aARD,MAQO;AACL,mBAAKpC,QAAL,CAAc,EAAElE,SAAS,EAAE,EAAE,GAAGA,SAAL,EAAb,EAAd;AACD;AACF,WArBH,0FAnBF;;AA0CE,sBAAC,WAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,IAAI,EAAC,4BAFP;AAGE,UAAA,KAAK,EAAC,YAHR;AAIE,UAAA,WAAW,EAAG;AAC9B,mEALc;AAME,UAAA,WAAW,EAAC,EANd;AAOE,UAAA,KAAK,EAAEA,SAAS,CAACuG,UAPnB;AAQE,UAAA,QAAQ,EAAE,CAAAL,CAAC;AACT,eAAKhC,QAAL,CAAc,EAAElE,SAAS,EAAE,EAAE,GAAGA,SAAL,EAAgBuG,UAAU,EAAEL,CAA5B,EAAb,EAAd,CATJ,0FA1CF,CAnEF,CADF,CADF;;;;;;;AA+HD;AACD,WAAO,EAAP;AACD;;AAEDM,EAAAA,0BAA0B,GAAG;AAC3B,UAAM;AACJlH,MAAAA,KADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,KAJI;AAKJE,MAAAA,WALI;AAMJE,MAAAA,QANI;AAOJT,MAAAA,cAPI;AAQF,SAAKwC,KART;AASA,UAAMlB,WAAW,GAAGzC,4BAA4B;AAC7CuD,IAAAA,GADiB,CACb,KAAKL,KAAL,CAAWT,WADE;AAEjB+F,IAAAA,MAFiB,CAEVZ,MAFU,EAApB;AAGA;AACEvG,IAAAA,KAAK;AACLA,IAAAA,KAAK,KAAKN,eADV;AAEA,KAAC0B,WAAW,CAAC+E,IAAZ,CAAiB,CAAAzB,CAAC,KAAIA,CAAC,CAAC0C,WAAF,OAAoBpH,KAAK,CAACoH,WAAN,EAA1C,CAHH;AAIE;AACAhG,MAAAA,WAAW,CAACoD,IAAZ,CAAiBxE,KAAjB;AACD;AACD;AACE,oBAAC,cAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,KAAK,EAAEvB,CAAC,CAAC,uBAAD,CAFV;AAGE,QAAA,IAAI,EAAEA,CAAC,CAAC,mDAAD,CAHT;;AAKE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAEA,CAAC,CAAC,yBAAD,CADd;AAEE,QAAA,IAAI,EAAC,yBAFP;AAGE,QAAA,KAAK,EAAEA,CAAC,CAAC,OAAD;AACR;AAJF,UAKE,OAAO,EAAE;AACP,UAAE+B,KAAK,EAAE,OAAT,EAAkBuD,KAAK,EAAE,OAAzB,EADO;AAEP,UAAEvD,KAAK,EAAE,QAAT,EAAmBuD,KAAK,EAAE,QAA1B,EAFO;AAGP,UAAEvD,KAAK,EAAE,YAAT,EAAuBuD,KAAK,EAAE,aAA9B,EAHO;AAIP,UAAEvD,KAAK,EAAE,QAAT,EAAmBuD,KAAK,EAAE,QAA1B,EAJO,CALX;;AAWE,QAAA,KAAK,EAAE7D,KAXT;AAYE,QAAA,SAAS,EAAE,KAZb;AAaE,QAAA,QAAQ,EAAE,CAAA0G,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAE1E,KAAK,EAAE0G,CAAT,EAAd,CAbjB,yFALF;;AAoBE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAEnI,CAAC,CAAC,0BAAD,CADd;AAEE,QAAA,IAAI,EAAC,0BAFP;AAGE,QAAA,KAAK,EAAEA,CAAC,CAAC,SAAD;AACR;AAJF,UAKE,OAAO,EAAE;AACP,UAAE+B,KAAK,EAAE,EAAT,EAAauD,KAAK,EAAE,OAApB,EADO;AAEP,UAAEvD,KAAK,EAAE,YAAT,EAAuBuD,KAAK,EAAE,KAA9B,EAFO;AAGP,UAAEvD,KAAK,EAAE,eAAT,EAA0BuD,KAAK,EAAE,KAAjC,EAHO;AAIP,UAAEvD,KAAK,EAAE,aAAT,EAAwBuD,KAAK,EAAE,KAA/B,EAJO,CALX;;AAWE,QAAA,KAAK,EAAE9D,OAXT;AAYE,QAAA,QAAQ,EAAE,CAAAO,KAAK,KAAI,KAAKoE,QAAL,CAAc,EAAE3E,OAAO,EAAEO,KAAX,EAAd,CAZrB,yFApBF;;AAkCE;AACE,oBAAC,aAAD,IAAe,KAAK,EAAE/B,CAAC,CAAC,OAAD,CAAvB,0FADF;AAEE,6BAAK,KAAK,EAAE,EAAE4I,OAAO,EAAE,MAAX,EAAmBC,aAAa,EAAE,QAAlC,EAAZ;AACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAEtH,KADT;AAEE,QAAA,MAAM,EAAEoB,WAFV;AAGE,QAAA,gBAAgB,EAAE,CAAAwF,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAE5E,KAAK,EAAE4G,CAAC,CAACW,GAAX,EAAd,CAHzB,0FADF;;AAME,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,EAAET,SAAS,EAAE,QAAb,EAAuBU,YAAY,EAAE,QAArC,EADT;AAEE,QAAA,WAAW,EAAExH,KAAK,KAAKN,eAAV,GAA4B,SAA5B,GAAwC,SAFvD;AAGE,QAAA,UAAU,EAAC,QAHb;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKkF,QAAL,CAAc,EAAE5E,KAAK,EAAEN,eAAT,EAAd,CAJjB,6GANF,CAFF,CAlCF;;;;;;AAoDE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,+BADP;AAEE,QAAA,KAAK,EAAEjB,CAAC,CAAC,YAAD,CAFV;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,KAAK,EAAE0B,KAJT;AAKE,QAAA,QAAQ,EAAE,CAAAyG,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAEzE,KAAK,EAAEyG,CAAT,EAAd,CALjB,yFApDF;;AA2DG9G,MAAAA,cAAc,KAAKX,gBAAgB,CAAC0H,WAApC;AACC,oBAAC,eAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,IAAI,EAAC,+BAFP;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,WAAW,EAAC,4CAJd;AAKE,QAAA,KAAK,EAAExG,WALT;AAME,QAAA,QAAQ,EAAE,CAAAuG,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAEvE,WAAW,EAAEuG,CAAf,EAAd,CANjB,0FA5DJ;;;AAqEG9G,MAAAA,cAAc,KAAKX,gBAAgB,CAAC0H,WAApC;AACC,oBAAC,eAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,IAAI,EAAC,4BAFP;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,WAAW,EAAC,oCAJd;AAKE,QAAA,KAAK,EAAEtG,QALT;AAME,QAAA,QAAQ,EAAE,CAAAqG,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAErE,QAAQ,EAAEqG,CAAZ,EAAd,CANjB,0FAtEJ,CADF;;;;;AAkFD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM,EAAElF,KAAF,EAAS3C,IAAT,EAAeE,cAAf,EAA+BC,UAA/B,EAA2Ca,IAA3C,KAAoD,KAAK0B,KAA/D;AACA,UAAMoF,OAAO,GAAG,KAAKxE,WAAL,EAAhB;AACA,UAAMjB,QAAQ,GAAGrD,wBAAwB,GAAGsD,GAA3B,CAA+B,KAAKL,KAAL,CAAWX,OAA1C,CAAjB;AACA,UAAMiB,wBAAwB,GAAGF,QAAQ;AACrCA,IAAAA,QAAQ,CAACE,wBAAT,CAAkC0B,GAAlC;AACE,KAAA8D,IAAI,KAAIvI,yBAAyB,CAACuI,IAAD,CADnC,CADqC;;AAIrC,MAJJ;AAKA,UAAMC,oBAAoB,GAAG,KAAKrE,uBAAL,CAA6BzD,cAA7B,CAA7B;;AAEA;AACE;AACG,WAAK+B,KAAL,CAAWV,KAAX;AACC,8BAAM,KAAK,EAAE,EAAEnB,KAAK,EAAE,KAAT,EAAb,sGAAuC,KAAK6B,KAAL,CAAWV,KAAlD,CAFJ;;AAIE,6BAAK,KAAK,EAAE,EAAEkG,OAAO,EAAE,MAAX,EAAmBC,aAAa,EAAE,KAAlC,EAAZ;AACE,6BAAK,KAAK,EAAE,EAAEX,WAAW,EAAE,MAAf,EAAZ;AACE,oBAAC,cAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,KAAK,EAAElI,CAAC,CAAC,qBAAD,CAFV;AAGE,QAAA,IAAI,EAAEA,CAAC,CAAC,gDAAD,CAHT;;AAKE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,uBADP;AAEE,QAAA,KAAK,EAAEA,CAAC,CAAC,MAAD,CAFV;AAGE,QAAA,WAAW,EAAC,EAHd;AAIE,QAAA,KAAK,EAAEmB,IAJT;AAKE,QAAA,QAAQ,EAAE,CAAAgH,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAEhF,IAAI,EAAEgH,CAAR,EAAd,CALjB;AAME,QAAA,gBAAgB,EAAE,CAAChH,IAAD,GAAQ,CAACnB,CAAC,CAAC,WAAD,CAAF,CAAR,GAA2B,EAN/C,0FALF;;AAaE,oBAAC,eAAD;AACE,QAAA,IAAI,EAAC,uBADP;AAEE,QAAA,KAAK,EAAEA,CAAC,CAAC,YAAD,CAFV;AAGE,QAAA,KAAK,EAAE,CAACmC,IAHV;AAIE,QAAA,QAAQ,EAAE,CAAAgG,CAAC,KAAI,KAAKhC,QAAL,CAAc,EAAEhE,IAAI,EAAE,CAACgG,CAAT,EAAd,CAJjB,0FAbF;;AAmBE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAEnI,CAAC,CAAC,uBAAD,CADd;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,WAAW,EAAEA,CAAC,CAAC,kCAAD,CAHhB;AAIE,QAAA,KAAK,EAAEA,CAAC,CAAC,uBAAD,CAJV;AAKE,QAAA,IAAI,EAAC,uBALP;AAME,QAAA,SAAS,EAAE,KANb;AAOE,QAAA,OAAO,EAAE0D,wBAPX;AAQE,QAAA,KAAK,EAAErC,cART;AASE,QAAA,QAAQ,EAAE,KAAKiD,oBATjB,0FAnBF;;AA8BG6E,MAAAA,oBAAoB,CAACjD,MAArB,GAA8B,CAA9B;AACC,oBAAC,aAAD;AACE,QAAA,SAAS,EAAElG,CAAC,CAAC,wBAAD,CADd;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,WAAW,EAAEA,CAAC,CAAC,uCAAD,CAHhB;AAIE,QAAA,KAAK,EAAEA,CAAC,CAAC,mBAAD,CAJV;AAKE,QAAA,IAAI,EAAC,wBALP;AAME,QAAA,OAAO,EAAEmJ,oBANX;AAOE,QAAA,KAAK,EAAE7H,UAPT;AAQE,QAAA,QAAQ,EAAE,KAAKiD,0BARjB;AASE,QAAA,gBAAgB,EAAE,CAACjD,UAAD,GAAc,CAACtB,CAAC,CAAC,WAAD,CAAF,CAAd,GAAiC,EATrD,0FA/BJ;;;AA2CG,WAAKsH,wBAAL,EA3CH,CADF,CADF;;;AAgDG,WAAKG,wBAAL,EAhDH;AAiDG,WAAKgB,0BAAL,EAjDH,CAJF;;AAuDE,6BAAK,KAAK,EAAE,EAAEG,OAAO,EAAE,MAAX,EAAmBQ,cAAc,EAAE,eAAnC,EAAZ;AACGtF,MAAAA,KAAK;AACJ,oBAAC,MAAD,IAAQ,UAAU,EAAC,OAAnB,EAA2B,OAAO,EAAE,MAAM,KAAKV,KAAL,CAAWL,KAAX,EAA1C;AACG/C,MAAAA,CAAC,CAAC,QAAD,CADJ,CADI;;;AAKJ,oBAAC,MAAD,IAAQ,UAAU,EAAC,OAAnB,EAA2B,OAAO,EAAE,KAAKmE,gBAAzC;AACGnE,MAAAA,CAAC,CAAC,QAAD,CADJ,CANJ;;;AAUE;AACE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAC,OADb;AAEE,QAAA,QAAQ,EAAE,CAACiJ,OAFb;AAGE,QAAA,OAAO,EAAE,KAAK7E,eAHhB;;AAKGpE,MAAAA,CAAC,CAAC,OAAD,CALJ,CADF;;;AASE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAC,OADb;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,QAAQ,EAAE,CAACiJ,OAHb;AAIE,QAAA,OAAO,EAAE,KAAKhF,gBAJhB;;AAMGjE,MAAAA,CAAC,CAAC,IAAD,CANJ,CATF,CAVF,CAvDF,CADF;;;;;;AAuFD,GAprB8D;AAAA;AAAA;AAurBjEiD,eAAe,CAAC/B,SAAhB,GAA4BA,SAA5B;AACA+B,eAAe,CAACD,YAAhB,GAA+BA,YAA/B,C,iLA5uBM/B,e,6KAEAC,S,uKA2BA8B,Y,0KAuBeC,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CompactPicker } from 'react-color';\nimport Button from 'src/components/Button';\nimport {\n  t,\n  SupersetClient,\n  getCategoricalSchemeRegistry,\n  getChartMetadataRegistry,\n  validateNonEmpty,\n  isValidExpression,\n} from '@superset-ui/core';\n\nimport SelectControl from 'src/explore/components/controls/SelectControl';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport CheckboxControl from 'src/explore/components/controls/CheckboxControl';\nimport {\n  ANNOTATION_SOURCE_TYPES,\n  ANNOTATION_TYPES,\n  ANNOTATION_TYPES_METADATA,\n  DEFAULT_ANNOTATION_TYPE,\n  requiresQuery,\n  ANNOTATION_SOURCE_TYPES_METADATA,\n} from 'src/modules/AnnotationTypes';\nimport PopoverSection from 'src/components/PopoverSection';\nimport ControlHeader from 'src/explore/components/ControlHeader';\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: PropTypes.string,\n  annotationType: PropTypes.string,\n  sourceType: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  style: PropTypes.string,\n  width: PropTypes.number,\n  showMarkers: PropTypes.bool,\n  hideLine: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overrides: PropTypes.object,\n  show: PropTypes.bool,\n  titleColumn: PropTypes.string,\n  descriptionColumns: PropTypes.arrayOf(PropTypes.string),\n  timeColumn: PropTypes.string,\n  intervalEndColumn: PropTypes.string,\n  vizType: PropTypes.string,\n\n  error: PropTypes.string,\n  colorScheme: PropTypes.string,\n\n  addAnnotationLayer: PropTypes.func,\n  removeAnnotationLayer: PropTypes.func,\n  close: PropTypes.func,\n};\n\nconst defaultProps = {\n  name: '',\n  annotationType: DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {},\n};\n\nexport default class AnnotationLayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      vizType,\n    } = props;\n\n    // Only allow override whole time_range\n    if ('since' in overrides || 'until' in overrides) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    // Check if annotationType is supported by this chart\n    const metadata = getChartMetadataRegistry().get(vizType);\n    const supportedAnnotationTypes = metadata?.supportedAnnotationTypes || [];\n    const validAnnotationType = supportedAnnotationTypes.includes(\n      annotationType,\n    )\n      ? annotationType\n      : supportedAnnotationTypes[0];\n\n    this.state = {\n      // base\n      name,\n      annotationType: validAnnotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !name,\n      isLoadingOptions: true,\n      valueOptions: [],\n    };\n    this.submitAnnotation = this.submitAnnotation.bind(this);\n    this.deleteAnnotation = this.deleteAnnotation.bind(this);\n    this.applyAnnotation = this.applyAnnotation.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.handleAnnotationType = this.handleAnnotationType.bind(this);\n    this.handleAnnotationSourceType = this.handleAnnotationSourceType.bind(\n      this,\n    );\n    this.handleValue = this.handleValue.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {\n    // Get vis types that can be source.\n    const sources = getChartMetadataRegistry()\n      .entries()\n      .filter(({ value: chartMetadata }) =>\n        chartMetadata.canBeAnnotationType(annotationType),\n      )\n      .map(({ key, value: chartMetadata }) => ({\n        value: key,\n        label: chartMetadata.name,\n      }));\n    // Prepend native source if applicable\n    if (ANNOTATION_TYPES_METADATA[annotationType]?.supportNativeSource) {\n      sources.unshift(ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormulaAnnotation(expression, annotationType) {\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return isValidExpression(expression);\n    }\n    return true;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn,\n    } = this.state;\n    const errors = [\n      validateNonEmpty(name),\n      validateNonEmpty(annotationType),\n      validateNonEmpty(value),\n    ];\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === ANNOTATION_TYPES.EVENT) {\n        errors.push(validateNonEmpty(timeColumn));\n      }\n      if (annotationType === ANNOTATION_TYPES.INTERVAL) {\n        errors.push(validateNonEmpty(timeColumn));\n        errors.push(validateNonEmpty(intervalEndColumn));\n      }\n    }\n    errors.push(!this.isValidFormulaAnnotation(value, annotationType));\n    return !errors.filter(x => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      value: null,\n    });\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({ sourceType, value: null, isLoadingOptions: true });\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: [],\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null },\n    });\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        SupersetClient.get({\n          endpoint: '/annotationlayermodelview/api/read?',\n        }).then(({ json }) => {\n          const layers = json\n            ? json.result.map(layer => ({\n                value: layer.id,\n                label: layer.name,\n              }))\n            : [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers,\n          });\n        });\n      } else if (requiresQuery(sourceType)) {\n        SupersetClient.get({ endpoint: '/superset/user_slices' }).then(\n          ({ json }) => {\n            const registry = getChartMetadataRegistry();\n            this.setState({\n              isLoadingOptions: false,\n              valueOptions: json\n                .filter(x => {\n                  const metadata = registry.get(x.viz_type);\n                  return (\n                    metadata && metadata.canBeAnnotationType(annotationType)\n                  );\n                })\n                .map(x => ({ value: x.id, label: x.title, slice: x })),\n            });\n          },\n        );\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: [],\n        });\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.removeAnnotationLayer();\n    this.props.close();\n  }\n\n  applyAnnotation() {\n    if (this.isValidForm()) {\n      const annotationFields = [\n        'name',\n        'annotationType',\n        'sourceType',\n        'color',\n        'opacity',\n        'style',\n        'width',\n        'showMarkers',\n        'hideLine',\n        'value',\n        'overrides',\n        'show',\n        'titleColumn',\n        'descriptionColumns',\n        'timeColumn',\n        'intervalEndColumn',\n      ];\n      const newAnnotation = {};\n      annotationFields.forEach(field => {\n        if (this.state[field] !== null) {\n          newAnnotation[field] = this.state[field];\n        }\n      });\n\n      if (newAnnotation.color === AUTOMATIC_COLOR) {\n        newAnnotation.color = null;\n      }\n\n      this.props.addAnnotationLayer(newAnnotation);\n      this.setState({ isNew: false });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      <span\n        css={{\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n        }}\n        title={option.label}\n      >\n        {option.label}\n      </span>\n    );\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions,\n    } = this.state;\n    let label = '';\n    let description = '';\n    if (requiresQuery(sourceType)) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = 'Annotation layer';\n        description = 'Select the Annotation Layer you would like to use.';\n      } else {\n        label = t('Chart');\n        description = `Use a pre defined Superset Chart as a source for annotations and overlays.\n        your chart must be one of these visualization types:\n        [${this.getSupportedSourceTypes(annotationType)\n          .map(x => x.label)\n          .join(', ')}]`;\n      }\n    } else if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      label = 'Formula';\n      description = `Expects a formula with depending time parameter 'x'\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\n        Example: '2x+5'`;\n    }\n    if (requiresQuery(sourceType)) {\n      return (\n        <SelectControl\n          ariaLabel={t('Annotation layer value')}\n          name=\"annotation-layer-value\"\n          showHeader\n          hovered\n          description={description}\n          label={label}\n          placeholder=\"\"\n          options={valueOptions}\n          isLoading={isLoadingOptions}\n          value={value}\n          onChange={this.handleValue}\n          validationErrors={!value ? ['Mandatory'] : []}\n          optionRenderer={this.renderOption}\n        />\n      );\n    }\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return (\n        <TextControl\n          name=\"annotation-layer-value\"\n          hovered\n          showHeader\n          description={description}\n          label={label}\n          placeholder=\"\"\n          value={value}\n          onChange={this.handleValue}\n          validationErrors={\n            !this.isValidFormulaAnnotation(value, annotationType)\n              ? ['Bad formula.']\n              : []\n          }\n        />\n      );\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns,\n    } = this.state;\n    const { slice } = valueOptions.find(x => x.value === value) || {};\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE && slice) {\n      const columns = (slice.data.groupby || [])\n        .concat(slice.data.all_columns || [])\n        .map(x => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time\n        ? [{ value: '__timestamp', label: '__timestamp' }].concat(columns)\n        : columns;\n      return (\n        <div style={{ marginRight: '2rem' }}>\n          <PopoverSection\n            isSelected\n            title={t('Annotation Slice Configuration')}\n            info={t(`This section allows you to configure how to use the slice\n               to generate annotations.`)}\n          >\n            {(annotationType === ANNOTATION_TYPES.EVENT ||\n              annotationType === ANNOTATION_TYPES.INTERVAL) && (\n              <SelectControl\n                ariaLabel={t('Annotation layer time column')}\n                hovered\n                name=\"annotation-layer-time-column\"\n                label={\n                  annotationType === ANNOTATION_TYPES.INTERVAL\n                    ? t('Interval start column')\n                    : t('Event time column')\n                }\n                description={t(\n                  'This column must contain date/time information.',\n                )}\n                validationErrors={!timeColumn ? ['Mandatory'] : []}\n                clearable={false}\n                options={timeColumnOptions}\n                value={timeColumn}\n                onChange={v => this.setState({ timeColumn: v })}\n              />\n            )}\n            {annotationType === ANNOTATION_TYPES.INTERVAL && (\n              <SelectControl\n                ariaLabel={t('Annotation layer interval end')}\n                hovered\n                name=\"annotation-layer-intervalEnd\"\n                label={t('Interval End column')}\n                description={t(\n                  'This column must contain date/time information.',\n                )}\n                validationErrors={!intervalEndColumn ? ['Mandatory'] : []}\n                options={columns}\n                value={intervalEndColumn}\n                onChange={value => this.setState({ intervalEndColumn: value })}\n              />\n            )}\n            <SelectControl\n              ariaLabel={t('Annotation layer title column')}\n              hovered\n              name=\"annotation-layer-title\"\n              label={t('Title Column')}\n              description={t('Pick a title for you annotation.')}\n              options={[{ value: '', label: 'None' }].concat(columns)}\n              value={titleColumn}\n              onChange={value => this.setState({ titleColumn: value })}\n            />\n            {annotationType !== ANNOTATION_TYPES.TIME_SERIES && (\n              <SelectControl\n                ariaLabel={t('Annotation layer description columns')}\n                hovered\n                name=\"annotation-layer-title\"\n                label={t('Description Columns')}\n                description={t(\n                  \"Pick one or more columns that should be shown in the annotation. If you don't select a column all of them will be shown.\",\n                )}\n                multi\n                options={columns}\n                value={descriptionColumns}\n                onChange={value => this.setState({ descriptionColumns: value })}\n              />\n            )}\n            <div style={{ marginTop: '1rem' }}>\n              <CheckboxControl\n                hovered\n                name=\"annotation-override-time_range\"\n                label=\"Override time range\"\n                description={`This controls whether the \"time_range\" field from the current\n                  view should be passed down to the chart containing the annotation data.`}\n                value={'time_range' in overrides}\n                onChange={v => {\n                  delete overrides.time_range;\n                  if (v) {\n                    this.setState({\n                      overrides: { ...overrides, time_range: null },\n                    });\n                  } else {\n                    this.setState({ overrides: { ...overrides } });\n                  }\n                }}\n              />\n              <CheckboxControl\n                hovered\n                name=\"annotation-override-timegrain\"\n                label=\"Override time grain\"\n                description={`This controls whether the time grain field from the current\n                  view should be passed down to the chart containing the annotation data.`}\n                value={'time_grain_sqla' in overrides}\n                onChange={v => {\n                  delete overrides.time_grain_sqla;\n                  delete overrides.granularity;\n                  if (v) {\n                    this.setState({\n                      overrides: {\n                        ...overrides,\n                        time_grain_sqla: null,\n                        granularity: null,\n                      },\n                    });\n                  } else {\n                    this.setState({ overrides: { ...overrides } });\n                  }\n                }}\n              />\n              <TextControl\n                hovered\n                name=\"annotation-layer-timeshift\"\n                label=\"Time Shift\"\n                description={`Time delta in natural language\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)`}\n                placeholder=\"\"\n                value={overrides.time_shift}\n                onChange={v =>\n                  this.setState({ overrides: { ...overrides, time_shift: v } })\n                }\n              />\n            </div>\n          </PopoverSection>\n        </div>\n      );\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType,\n    } = this.state;\n    const colorScheme = getCategoricalSchemeRegistry()\n      .get(this.props.colorScheme)\n      .colors.concat();\n    if (\n      color &&\n      color !== AUTOMATIC_COLOR &&\n      !colorScheme.find(x => x.toLowerCase() === color.toLowerCase())\n    ) {\n      colorScheme.push(color);\n    }\n    return (\n      <PopoverSection\n        isSelected\n        title={t('Display configuration')}\n        info={t('Configure your how you overlay is displayed here.')}\n      >\n        <SelectControl\n          ariaLabel={t('Annotation layer stroke')}\n          name=\"annotation-layer-stroke\"\n          label={t('Style')}\n          // see '../../../visualizations/nvd3_vis.css'\n          options={[\n            { value: 'solid', label: 'Solid' },\n            { value: 'dashed', label: 'Dashed' },\n            { value: 'longDashed', label: 'Long dashed' },\n            { value: 'dotted', label: 'Dotted' },\n          ]}\n          value={style}\n          clearable={false}\n          onChange={v => this.setState({ style: v })}\n        />\n        <SelectControl\n          ariaLabel={t('Annotation layer opacity')}\n          name=\"annotation-layer-opacity\"\n          label={t('Opacity')}\n          // see '../../../visualizations/nvd3_vis.css'\n          options={[\n            { value: '', label: 'Solid' },\n            { value: 'opacityLow', label: '0.2' },\n            { value: 'opacityMedium', label: '0.5' },\n            { value: 'opacityHigh', label: '0.8' },\n          ]}\n          value={opacity}\n          onChange={value => this.setState({ opacity: value })}\n        />\n        <div>\n          <ControlHeader label={t('Color')} />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <CompactPicker\n              color={color}\n              colors={colorScheme}\n              onChangeComplete={v => this.setState({ color: v.hex })}\n            />\n            <Button\n              style={{ marginTop: '0.5rem', marginBottom: '0.5rem' }}\n              buttonStyle={color === AUTOMATIC_COLOR ? 'success' : 'default'}\n              buttonSize=\"xsmall\"\n              onClick={() => this.setState({ color: AUTOMATIC_COLOR })}\n            >\n              Automatic Color\n            </Button>\n          </div>\n        </div>\n        <TextControl\n          name=\"annotation-layer-stroke-width\"\n          label={t('Line width')}\n          isInt\n          value={width}\n          onChange={v => this.setState({ width: v })}\n        />\n        {annotationType === ANNOTATION_TYPES.TIME_SERIES && (\n          <CheckboxControl\n            hovered\n            name=\"annotation-layer-show-markers\"\n            label=\"Show Markers\"\n            description=\"Shows or hides markers for the time series\"\n            value={showMarkers}\n            onChange={v => this.setState({ showMarkers: v })}\n          />\n        )}\n        {annotationType === ANNOTATION_TYPES.TIME_SERIES && (\n          <CheckboxControl\n            hovered\n            name=\"annotation-layer-hide-line\"\n            label=\"Hide Line\"\n            description=\"Hides the Line for the time series\"\n            value={hideLine}\n            onChange={v => this.setState({ hideLine: v })}\n          />\n        )}\n      </PopoverSection>\n    );\n  }\n\n  render() {\n    const { isNew, name, annotationType, sourceType, show } = this.state;\n    const isValid = this.isValidForm();\n    const metadata = getChartMetadataRegistry().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata\n      ? metadata.supportedAnnotationTypes.map(\n          type => ANNOTATION_TYPES_METADATA[type],\n        )\n      : [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      <>\n        {this.props.error && (\n          <span style={{ color: 'red' }}>ERROR: {this.props.error}</span>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          <div style={{ marginRight: '2rem' }}>\n            <PopoverSection\n              isSelected\n              title={t('Layer configuration')}\n              info={t('Configure the basics of your Annotation Layer.')}\n            >\n              <TextControl\n                name=\"annotation-layer-name\"\n                label={t('Name')}\n                placeholder=\"\"\n                value={name}\n                onChange={v => this.setState({ name: v })}\n                validationErrors={!name ? [t('Mandatory')] : []}\n              />\n              <CheckboxControl\n                name=\"annotation-layer-hide\"\n                label={t('Hide layer')}\n                value={!show}\n                onChange={v => this.setState({ show: !v })}\n              />\n              <SelectControl\n                ariaLabel={t('Annotation layer type')}\n                hovered\n                description={t('Choose the annotation layer type')}\n                label={t('Annotation layer type')}\n                name=\"annotation-layer-type\"\n                clearable={false}\n                options={supportedAnnotationTypes}\n                value={annotationType}\n                onChange={this.handleAnnotationType}\n              />\n              {supportedSourceTypes.length > 0 && (\n                <SelectControl\n                  ariaLabel={t('Annotation source type')}\n                  hovered\n                  description={t('Choose the source of your annotations')}\n                  label={t('Annotation Source')}\n                  name=\"annotation-source-type\"\n                  options={supportedSourceTypes}\n                  value={sourceType}\n                  onChange={this.handleAnnotationSourceType}\n                  validationErrors={!sourceType ? [t('Mandatory')] : []}\n                />\n              )}\n              {this.renderValueConfiguration()}\n            </PopoverSection>\n          </div>\n          {this.renderSliceConfiguration()}\n          {this.renderDisplayConfiguration()}\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {isNew ? (\n            <Button buttonSize=\"small\" onClick={() => this.props.close()}>\n              {t('Cancel')}\n            </Button>\n          ) : (\n            <Button buttonSize=\"small\" onClick={this.deleteAnnotation}>\n              {t('Remove')}\n            </Button>\n          )}\n          <div>\n            <Button\n              buttonSize=\"small\"\n              disabled={!isValid}\n              onClick={this.applyAnnotation}\n            >\n              {t('Apply')}\n            </Button>\n\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              disabled={!isValid}\n              onClick={this.submitAnnotation}\n            >\n              {t('OK')}\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}