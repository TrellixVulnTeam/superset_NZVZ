{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { ensureIsArray, t, SupersetClient } from '@superset-ui/core';\nimport { addChart, removeChart, refreshChart } from 'src/chart/chartAction';\nimport { chart as initChart } from 'src/chart/chartReducer';\nimport { applyDefaultFormData } from 'src/explore/store';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from 'src/dashboard/util/constants';\nimport {\naddSuccessToast,\naddWarningToast,\naddDangerToast } from\n'src/components/MessageToasts/actions';\nimport serializeActiveFilterValues from 'src/dashboard/util/serializeActiveFilterValues';\nimport serializeFilterScopes from 'src/dashboard/util/serializeFilterScopes';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport {\nsetChartConfiguration,\ndashboardInfoChanged,\nSET_CHART_CONFIG_COMPLETE } from\n'./dashboardInfo';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\naddFilter,\nremoveFilter,\nupdateDirectPathToFilter } from\n'./dashboardFilters';\nimport { SET_FILTER_CONFIG_COMPLETE } from './nativeFilters';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/` }).\n\n    then(({ json }) => {\n      if (json.count > 0) dispatch(toggleFaveStar(true));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(\n    t(\n    'There was an issue fetching the favorite status of this dashboard.'))));\n\n\n\n\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/` }).\n\n    then(() => {\n      dispatch(toggleFaveStar(!isStarred));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(t('There was an issue favoriting this dashboard.'))));\n\n\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished }) }).\n\n\n    then(() => {\n      const nowPublished = isPublished ? 'published' : 'hidden';\n      dispatch(addSuccessToast(t(`This dashboard is now ${nowPublished}`)));\n      dispatch(togglePublished(isPublished));\n    }).\n    catch(() => {\n      dispatch(\n      addDangerToast(\n      t('You do not have permissions to edit this dashboard.')));\n\n\n    });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return (dispatch) => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  return (dispatch, getState) => {var _data$metadata, _data$metadata2, _data$metadata3, _data$metadata4, _data$metadata5, _data$metadata6;\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach((filter) => {var _layout$componentId;\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (((_layout$componentId = layout[componentId]) == null ? void 0 : _layout$componentId.parents) || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    const {\n      certified_by,\n      certification_details,\n      css,\n      dashboard_title,\n      owners,\n      roles,\n      slug } =\n    data;\n\n    const hasId = (item) => item.id !== undefined;\n\n    // making sure the data is what the backend expects\n    const cleanedData = {\n      ...data,\n      certified_by: certified_by || '',\n      certification_details:\n      certified_by && certification_details ? certification_details : '',\n      css: css || '',\n      dashboard_title: dashboard_title || t('[ untitled dashboard ]'),\n      owners: ensureIsArray(owners).map((o) => hasId(o) ? o.id : o),\n      roles: !isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC) ?\n      undefined :\n      ensureIsArray(roles).map((r) => hasId(r) ? r.id : r),\n      slug: slug || null,\n      metadata: {\n        ...data.metadata,\n        color_namespace: ((_data$metadata = data.metadata) == null ? void 0 : _data$metadata.color_namespace) || undefined,\n        color_scheme: ((_data$metadata2 = data.metadata) == null ? void 0 : _data$metadata2.color_scheme) || '',\n        expanded_slices: ((_data$metadata3 = data.metadata) == null ? void 0 : _data$metadata3.expanded_slices) || {},\n        label_colors: ((_data$metadata4 = data.metadata) == null ? void 0 : _data$metadata4.label_colors) || {},\n        refresh_frequency: ((_data$metadata5 = data.metadata) == null ? void 0 : _data$metadata5.refresh_frequency) || 0,\n        timed_refresh_immune_slices:\n        ((_data$metadata6 = data.metadata) == null ? void 0 : _data$metadata6.timed_refresh_immune_slices) || [] } };\n\n\n\n    const handleChartConfiguration = () => {\n      const {\n        dashboardInfo: {\n          metadata: { chart_configuration = {} } } } =\n\n      getState();\n      const chartConfiguration = Object.values(chart_configuration).reduce(\n      (prev, next) => {\n        // If chart removed from dashboard - remove it from metadata\n        if (\n        Object.values(layout).find(\n        (layoutItem) => {var _layoutItem$meta;return (layoutItem == null ? void 0 : (_layoutItem$meta = layoutItem.meta) == null ? void 0 : _layoutItem$meta.chartId) === next.id;}))\n\n        {\n          return { ...prev, [next.id]: next };\n        }\n        return prev;\n      },\n      {});\n\n      return chartConfiguration;\n    };\n\n    const onCopySuccess = (response) => {\n      const lastModifiedTime = response.json.last_modified_time;\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        const chartConfiguration = handleChartConfiguration();\n        dispatch(setChartConfiguration(chartConfiguration));\n      }\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onUpdateSuccess = (response) => {\n      const updatedDashboard = response.json.result;\n      const lastModifiedTime = response.json.last_modified_time;\n      // synching with the backend transformations of the metadata\n      if (updatedDashboard.json_metadata) {\n        const metadata = JSON.parse(updatedDashboard.json_metadata);\n        dispatch(\n        dashboardInfoChanged({\n          metadata }));\n\n\n        if (metadata.chart_configuration) {\n          dispatch({\n            type: SET_CHART_CONFIG_COMPLETE,\n            chartConfiguration: metadata.chart_configuration });\n\n        }\n        if (metadata.native_filter_configuration) {\n          dispatch({\n            type: SET_FILTER_CONFIG_COMPLETE,\n            filterConfig: metadata.native_filter_configuration });\n\n        }\n      }\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      // redirect to the new slug or id\n      window.history.pushState(\n      { event: 'dashboard_properties_changed' },\n      '',\n      `/superset/dashboard/${slug || id}/`);\n\n\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onError = async (response) => {\n      const { error, message } = await getClientErrorObject(response);\n      let errorText = t('Sorry, an unknown error occured');\n\n      if (error) {\n        errorText = t(\n        'Sorry, there was an error saving this dashboard: %s',\n        error);\n\n      }\n      if (typeof message === 'string' && message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      dispatch(addDangerToast(errorText));\n    };\n\n    if (saveType === SAVE_TYPE_OVERWRITE) {\n      let chartConfiguration = {};\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        chartConfiguration = handleChartConfiguration();\n      }\n      const updatedDashboard = {\n        certified_by: cleanedData.certified_by,\n        certification_details: cleanedData.certification_details,\n        css: cleanedData.css,\n        dashboard_title: cleanedData.dashboard_title,\n        slug: cleanedData.slug,\n        owners: cleanedData.owners,\n        roles: cleanedData.roles,\n        json_metadata: safeStringify({\n          ...((cleanedData == null ? void 0 : cleanedData.metadata) || {}),\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: serializedFilterScopes,\n          chart_configuration: chartConfiguration }) };\n\n\n\n      return SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedDashboard) }).\n\n      then((response) => onUpdateSuccess(response)).\n      catch((response) => onError(response));\n    }\n    // changing the data as the endpoint requires\n    const copyData = cleanedData;\n    if (copyData.metadata) {\n      delete copyData.metadata;\n    }\n    const finalCopyData = {\n      ...copyData,\n      // the endpoint is expecting the metadata to be flat\n      ...((cleanedData == null ? void 0 : cleanedData.metadata) || {}) };\n\n    return SupersetClient.post({\n      endpoint: `/superset/copy_dash/${id}/`,\n      postPayload: {\n        data: {\n          ...finalCopyData,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes) } } }).\n\n\n\n    then((response) => onCopySuccess(response)).\n    catch((response) => onError(response));\n  };\n}\n\nexport function fetchCharts(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach((chartKey) =>\n      dispatch(refreshChart(chartKey, force, dashboardId)));\n\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n      meta.stagger_refresh === undefined ?\n      true :\n      meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh ?\n    refreshTime / (chartList.length - 1) :\n    0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n      () => dispatch(refreshChart(chartKey, force, dashboardId)),\n      delay * i);\n\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\nnew Promise((resolve) => {\n  dispatch(fetchCharts(chartList, force, interval, dashboardId));\n  resolve();\n});\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch) => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(() =>\n    dispatch({ type: ON_REFRESH_SUCCESS }));\n\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n      addWarningToast(\n      'Sorry, there is no chart definition associated with the chart trying to be added.'));\n\n\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id };\n\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data) };\n\n\n    return Promise.all([\n    dispatch(addChart(newChart, id)),\n    dispatch(fetchDatasourceMetadata(form_data.datasource))]).\n    then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return (dispatch) => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabId, prevTabId) {\n  return { type: SET_ACTIVE_TABS, tabId, prevTabId };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded } };\n\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n    addWarningToast(\n    `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FAVESTAR_BASE_URL, \"FAVESTAR_BASE_URL\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FETCH_FAVE_STAR, \"FETCH_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_FAVE_STAR, \"SAVE_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(refreshCharts, \"refreshCharts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH_SUCCESS, \"ON_REFRESH_SUCCESS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefreshSuccess, \"onRefreshSuccess\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH, \"ON_REFRESH\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefresh, \"onRefresh\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorSchemeAndUnsavedChanges, \"setColorSchemeAndUnsavedChanges\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_ACTIVE_TABS, \"SET_ACTIVE_TABS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setActiveTabs, \"setActiveTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UNSET_FOCUSED_FILTER_FIELD, \"UNSET_FOCUSED_FILTER_FIELD\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FULL_SIZE_CHART_ID, \"SET_FULL_SIZE_CHART_ID\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFullSizeChartId, \"setFullSizeChartId\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FAVESTAR_BASE_URL, \"FAVESTAR_BASE_URL\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FETCH_FAVE_STAR, \"FETCH_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_FAVE_STAR, \"SAVE_FAVE_STAR\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(refreshCharts, \"refreshCharts\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH_SUCCESS, \"ON_REFRESH_SUCCESS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefreshSuccess, \"onRefreshSuccess\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_REFRESH, \"ON_REFRESH\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onRefresh, \"onRefresh\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorSchemeAndUnsavedChanges, \"setColorSchemeAndUnsavedChanges\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_ACTIVE_TABS, \"SET_ACTIVE_TABS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setActiveTabs, \"setActiveTabs\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UNSET_FOCUSED_FILTER_FIELD, \"UNSET_FOCUSED_FILTER_FIELD\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FULL_SIZE_CHART_ID, \"SET_FULL_SIZE_CHART_ID\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFullSizeChartId, \"setFullSizeChartId\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/actions/dashboardState.js"],"names":["ActionCreators","chart","SET_UNSAVED_CHANGES","setUnsavedChanges","type","payload","ADD_SLICE","addSlice","REMOVE_SLICE","removeSlice","FAVESTAR_BASE_URL","TOGGLE_FAVE_STAR","toggleFaveStar","FETCH_FAVE_STAR","fetchFaveStar","endpoint","id","json","dispatch","addDangerToast","t","SAVE_FAVE_STAR","saveFaveStar","urlSuffix","isStarred","TOGGLE_PUBLISHED","togglePublished","savePublished","headers","body","JSON","published","nowPublished","isPublished","addSuccessToast","TOGGLE_EXPAND_SLICE","toggleExpandSlice","UPDATE_CSS","updateCss","SET_EDIT_MODE","setEditMode","ON_CHANGE","onChange","ON_SAVE","onSave","SET_REFRESH_FREQUENCY","setRefreshFrequency","isPersistent","saveDashboardRequestSuccess","UndoActionCreators","saveDashboardRequest","getState","layout","dashboardLayout","Object","componentId","filter","directPathToFilter","updateDirectPathToFilter","serializedFilters","serializeActiveFilterValues","getActiveFilters","serializedFilterScopes","serializeFilterScopes","hasId","item","cleanedData","certified_by","certification_details","css","dashboard_title","owners","ensureIsArray","o","roles","isFeatureEnabled","FeatureFlag","r","slug","metadata","data","color_namespace","color_scheme","expanded_slices","label_colors","refresh_frequency","timed_refresh_immune_slices","handleChartConfiguration","dashboardInfo","chart_configuration","chartConfiguration","next","onCopySuccess","lastModifiedTime","response","setChartConfiguration","onUpdateSuccess","updatedDashboard","dashboardInfoChanged","filterConfig","window","event","onError","getClientErrorObject","errorText","message","saveType","json_metadata","safeStringify","default_filters","filter_scopes","copyData","finalCopyData","postPayload","fetchCharts","chartList","force","interval","refreshChart","refreshTime","Math","meta","delay","setTimeout","refreshCharts","resolve","ON_REFRESH_SUCCESS","onRefreshSuccess","ON_REFRESH","onRefresh","SHOW_BUILDER_PANE","showBuilderPane","addSliceToDashboard","selectedSlice","sliceEntities","addWarningToast","form_data","slice_id","newChart","formData","applyDefaultFormData","addChart","fetchDatasourceMetadata","addFilter","removeSliceFromDashboard","sliceEntity","removeFilter","removeChart","SET_COLOR_SCHEME","setColorScheme","setColorSchemeAndUnsavedChanges","SET_DIRECT_PATH","setDirectPathToChild","SET_ACTIVE_TABS","setActiveTabs","SET_FOCUSED_FILTER_FIELD","setFocusedFilterField","UNSET_FOCUSED_FILTER_FIELD","unsetFocusedFilterField","SET_FULL_SIZE_CHART_ID","setFullSizeChartId","SET_MAX_UNDO_HISTORY_EXCEEDED","setMaxUndoHistoryExceeded","maxUndoHistoryExceeded","maxUndoHistoryToast","historyLength"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { ensureIsArray, t, SupersetClient } from '@superset-ui/core';\nimport { addChart, removeChart, refreshChart } from 'src/chart/chartAction';\nimport { chart as initChart } from 'src/chart/chartReducer';\nimport { applyDefaultFormData } from 'src/explore/store';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from 'src/dashboard/util/constants';\nimport {\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n} from 'src/components/MessageToasts/actions';\nimport serializeActiveFilterValues from 'src/dashboard/util/serializeActiveFilterValues';\nimport serializeFilterScopes from 'src/dashboard/util/serializeFilterScopes';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from './dashboardLayout';\nimport {\n  setChartConfiguration,\n  dashboardInfoChanged,\n  SET_CHART_CONFIG_COMPLETE,\n} from './dashboardInfo';\nimport { fetchDatasourceMetadata } from './datasources';\nimport {\n  addFilter,\n  removeFilter,\n  updateDirectPathToFilter,\n} from './dashboardFilters';\nimport { SET_FILTER_CONFIG_COMPLETE } from './nativeFilters';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/`,\n    })\n      .then(({ json }) => {\n        if (json.count > 0) dispatch(toggleFaveStar(true));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching the favorite status of this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/`,\n    })\n      .then(() => {\n        dispatch(toggleFaveStar(!isStarred));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(t('There was an issue favoriting this dashboard.')),\n        ),\n      );\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished,\n      }),\n    })\n      .then(() => {\n        const nowPublished = isPublished ? 'published' : 'hidden';\n        dispatch(addSuccessToast(t(`This dashboard is now ${nowPublished}`)));\n        dispatch(togglePublished(isPublished));\n      })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('You do not have permissions to edit this dashboard.'),\n          ),\n        );\n      });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave(lastModifiedTime) {\n  return { type: ON_SAVE, lastModifiedTime };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess(lastModifiedTime) {\n  return dispatch => {\n    dispatch(onSave(lastModifiedTime));\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach(filter => {\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (layout[componentId]?.parents || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    const {\n      certified_by,\n      certification_details,\n      css,\n      dashboard_title,\n      owners,\n      roles,\n      slug,\n    } = data;\n\n    const hasId = item => item.id !== undefined;\n\n    // making sure the data is what the backend expects\n    const cleanedData = {\n      ...data,\n      certified_by: certified_by || '',\n      certification_details:\n        certified_by && certification_details ? certification_details : '',\n      css: css || '',\n      dashboard_title: dashboard_title || t('[ untitled dashboard ]'),\n      owners: ensureIsArray(owners).map(o => (hasId(o) ? o.id : o)),\n      roles: !isFeatureEnabled(FeatureFlag.DASHBOARD_RBAC)\n        ? undefined\n        : ensureIsArray(roles).map(r => (hasId(r) ? r.id : r)),\n      slug: slug || null,\n      metadata: {\n        ...data.metadata,\n        color_namespace: data.metadata?.color_namespace || undefined,\n        color_scheme: data.metadata?.color_scheme || '',\n        expanded_slices: data.metadata?.expanded_slices || {},\n        label_colors: data.metadata?.label_colors || {},\n        refresh_frequency: data.metadata?.refresh_frequency || 0,\n        timed_refresh_immune_slices:\n          data.metadata?.timed_refresh_immune_slices || [],\n      },\n    };\n\n    const handleChartConfiguration = () => {\n      const {\n        dashboardInfo: {\n          metadata: { chart_configuration = {} },\n        },\n      } = getState();\n      const chartConfiguration = Object.values(chart_configuration).reduce(\n        (prev, next) => {\n          // If chart removed from dashboard - remove it from metadata\n          if (\n            Object.values(layout).find(\n              layoutItem => layoutItem?.meta?.chartId === next.id,\n            )\n          ) {\n            return { ...prev, [next.id]: next };\n          }\n          return prev;\n        },\n        {},\n      );\n      return chartConfiguration;\n    };\n\n    const onCopySuccess = response => {\n      const lastModifiedTime = response.json.last_modified_time;\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        const chartConfiguration = handleChartConfiguration();\n        dispatch(setChartConfiguration(chartConfiguration));\n      }\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onUpdateSuccess = response => {\n      const updatedDashboard = response.json.result;\n      const lastModifiedTime = response.json.last_modified_time;\n      // synching with the backend transformations of the metadata\n      if (updatedDashboard.json_metadata) {\n        const metadata = JSON.parse(updatedDashboard.json_metadata);\n        dispatch(\n          dashboardInfoChanged({\n            metadata,\n          }),\n        );\n        if (metadata.chart_configuration) {\n          dispatch({\n            type: SET_CHART_CONFIG_COMPLETE,\n            chartConfiguration: metadata.chart_configuration,\n          });\n        }\n        if (metadata.native_filter_configuration) {\n          dispatch({\n            type: SET_FILTER_CONFIG_COMPLETE,\n            filterConfig: metadata.native_filter_configuration,\n          });\n        }\n      }\n      if (lastModifiedTime) {\n        dispatch(saveDashboardRequestSuccess(lastModifiedTime));\n      }\n      // redirect to the new slug or id\n      window.history.pushState(\n        { event: 'dashboard_properties_changed' },\n        '',\n        `/superset/dashboard/${slug || id}/`,\n      );\n\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    };\n\n    const onError = async response => {\n      const { error, message } = await getClientErrorObject(response);\n      let errorText = t('Sorry, an unknown error occured');\n\n      if (error) {\n        errorText = t(\n          'Sorry, there was an error saving this dashboard: %s',\n          error,\n        );\n      }\n      if (typeof message === 'string' && message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      dispatch(addDangerToast(errorText));\n    };\n\n    if (saveType === SAVE_TYPE_OVERWRITE) {\n      let chartConfiguration = {};\n      if (isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS)) {\n        chartConfiguration = handleChartConfiguration();\n      }\n      const updatedDashboard = {\n        certified_by: cleanedData.certified_by,\n        certification_details: cleanedData.certification_details,\n        css: cleanedData.css,\n        dashboard_title: cleanedData.dashboard_title,\n        slug: cleanedData.slug,\n        owners: cleanedData.owners,\n        roles: cleanedData.roles,\n        json_metadata: safeStringify({\n          ...(cleanedData?.metadata || {}),\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: serializedFilterScopes,\n          chart_configuration: chartConfiguration,\n        }),\n      };\n\n      return SupersetClient.put({\n        endpoint: `/api/v1/dashboard/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedDashboard),\n      })\n        .then(response => onUpdateSuccess(response))\n        .catch(response => onError(response));\n    }\n    // changing the data as the endpoint requires\n    const copyData = cleanedData;\n    if (copyData.metadata) {\n      delete copyData.metadata;\n    }\n    const finalCopyData = {\n      ...copyData,\n      // the endpoint is expecting the metadata to be flat\n      ...(cleanedData?.metadata || {}),\n    };\n    return SupersetClient.post({\n      endpoint: `/superset/copy_dash/${id}/`,\n      postPayload: {\n        data: {\n          ...finalCopyData,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes),\n        },\n      },\n    })\n      .then(response => onCopySuccess(response))\n      .catch(response => onError(response));\n  };\n}\n\nexport function fetchCharts(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach(chartKey =>\n        dispatch(refreshChart(chartKey, force, dashboardId)),\n      );\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n        meta.stagger_refresh === undefined\n          ? true\n          : meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh\n      ? refreshTime / (chartList.length - 1)\n      : 0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n        () => dispatch(refreshChart(chartKey, force, dashboardId)),\n        delay * i,\n      );\n    });\n  };\n}\n\nconst refreshCharts = (chartList, force, interval, dashboardId, dispatch) =>\n  new Promise(resolve => {\n    dispatch(fetchCharts(chartList, force, interval, dashboardId));\n    resolve();\n  });\n\nexport const ON_REFRESH_SUCCESS = 'ON_REFRESH_SUCCESS';\nexport function onRefreshSuccess() {\n  return { type: ON_REFRESH_SUCCESS };\n}\n\nexport const ON_REFRESH = 'ON_REFRESH';\nexport function onRefresh(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return dispatch => {\n    dispatch({ type: ON_REFRESH });\n    refreshCharts(chartList, force, interval, dashboardId, dispatch).then(() =>\n      dispatch({ type: ON_REFRESH_SUCCESS }),\n    );\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane() {\n  return { type: SHOW_BUILDER_PANE };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n        addWarningToast(\n          'Sorry, there is no chart definition associated with the chart trying to be added.',\n        ),\n      );\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id,\n    };\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data),\n    };\n\n    return Promise.all([\n      dispatch(addChart(newChart, id)),\n      dispatch(fetchDatasourceMetadata(form_data.datasource)),\n    ]).then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_ACTIVE_TABS = 'SET_ACTIVE_TABS';\nexport function setActiveTabs(tabId, prevTabId) {\n  return { type: SET_ACTIVE_TABS, tabId, prevTabId };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const UNSET_FOCUSED_FILTER_FIELD = 'UNSET_FOCUSED_FILTER_FIELD';\nexport function unsetFocusedFilterField(chartId, column) {\n  return { type: UNSET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport const SET_FULL_SIZE_CHART_ID = 'SET_FULL_SIZE_CHART_ID';\nexport function setFullSizeChartId(chartId) {\n  return { type: SET_FULL_SIZE_CHART_ID, chartId };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded },\n  };\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n      addWarningToast(\n        `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`,\n      ),\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}