{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { t, withTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Popover from 'src/components/Popover';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { getChartKey } from 'src/explore/exploreUtils';\nimport { runAnnotationQuery } from 'src/chart/chartAction';\nimport CustomListItem from 'src/explore/components/controls/CustomListItem';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst AnnotationLayer = AsyncEsmComponent(\n() => import('./AnnotationLayer'),\n// size of overlay inner content\n() => ___EmotionJSX(\"div\", { style: { width: 450, height: 368 }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 34, columnNumber: 9 } }));\n\n\nconst propTypes = {\n  colorScheme: PropTypes.string.isRequired,\n  annotationError: PropTypes.object,\n  annotationQuery: PropTypes.object,\n  vizType: PropTypes.string,\n\n  validationErrors: PropTypes.array,\n  name: PropTypes.string.isRequired,\n  actions: PropTypes.object,\n  value: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n  refreshAnnotationData: PropTypes.func };\n\n\nconst defaultProps = {\n  vizType: '',\n  value: [],\n  annotationError: {},\n  annotationQuery: {},\n  onChange: () => {} };\n\n\nclass AnnotationLayerControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverVisible: {},\n      addedAnnotationIndex: null };\n\n    this.addAnnotationLayer = this.addAnnotationLayer.bind(this);\n    this.removeAnnotationLayer = this.removeAnnotationLayer.bind(this);\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // preload the AnotationLayer component and dependent libraries i.e. mathjs\n    AnnotationLayer.preload();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { name, annotationError, validationErrors, value } = nextProps;\n    if (Object.keys(annotationError).length && !validationErrors.length) {\n      this.props.actions.setControlValue(\n      name,\n      value,\n      Object.keys(annotationError));\n\n    }\n    if (!Object.keys(annotationError).length && validationErrors.length) {\n      this.props.actions.setControlValue(name, value, []);\n    }\n  }\n\n  addAnnotationLayer(originalAnnotation, newAnnotation) {\n    let annotations = this.props.value;\n    if (annotations.includes(originalAnnotation)) {\n      annotations = annotations.map((anno) =>\n      anno === originalAnnotation ? newAnnotation : anno);\n\n    } else {\n      annotations = [...annotations, newAnnotation];\n      this.setState({ addedAnnotationIndex: annotations.length - 1 });\n    }\n\n    this.props.refreshAnnotationData(newAnnotation);\n    this.props.onChange(annotations);\n  }\n\n  handleVisibleChange(visible, popoverKey) {\n    this.setState((prevState) => ({\n      popoverVisible: { ...prevState.popoverVisible, [popoverKey]: visible } }));\n\n  }\n\n  removeAnnotationLayer(annotation) {\n    const annotations = this.props.value.filter((anno) => anno !== annotation);\n    this.props.onChange(annotations);\n  }\n\n  renderPopover(popoverKey, annotation, error) {\n    const id = (annotation == null ? void 0 : annotation.name) || '_new';\n\n    return (\n      ___EmotionJSX(\"div\", { id: `annotation-pop-${id}`, \"data-test\": \"popover-content\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 120, columnNumber: 7 } },\n      ___EmotionJSX(AnnotationLayer, _extends({},\n      annotation, {\n        error: error,\n        colorScheme: this.props.colorScheme,\n        vizType: this.props.vizType,\n        addAnnotationLayer: (newAnnotation) =>\n        this.addAnnotationLayer(annotation, newAnnotation),\n\n        removeAnnotationLayer: () => this.removeAnnotationLayer(annotation),\n        close: () => {\n          this.handleVisibleChange(false, popoverKey);\n          this.setState({ addedAnnotationIndex: null });\n        }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 121, columnNumber: 9 } }))));\n\n\n\n  }\n\n  renderInfo(anno) {\n    const { annotationError, annotationQuery } = this.props;\n    if (annotationQuery[anno.name]) {\n      return (\n        ___EmotionJSX(\"i\", { className: \"fa fa-refresh\", style: { color: 'orange' }, \"aria-hidden\": true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 143, columnNumber: 9 } }));\n\n    }\n    if (annotationError[anno.name]) {\n      return (\n        ___EmotionJSX(InfoTooltipWithTrigger, {\n          label: \"validation-errors\",\n          bsStyle: \"danger\",\n          tooltip: annotationError[anno.name], __self: this, __source: { fileName: _jsxFileName, lineNumber: 148, columnNumber: 9 } }));\n\n\n    }\n    if (!anno.show) {\n      return ___EmotionJSX(\"span\", { style: { color: 'red' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 156, columnNumber: 14 } }, \" Hidden \");\n    }\n    return '';\n  }\n\n  render() {\n    const { addedAnnotationIndex } = this.state;\n    const addedAnnotation = this.props.value[addedAnnotationIndex];\n\n    const annotations = this.props.value.map((anno, i) =>\n    ___EmotionJSX(Popover, {\n      key: i,\n      trigger: \"click\",\n      placement: \"right\",\n      title: t('Edit annotation layer'),\n      css: (theme) => ({\n        '&:hover': {\n          cursor: 'pointer',\n          backgroundColor: theme.colors.grayscale.light4 } }),\n\n\n      content: this.renderPopover(\n      i,\n      anno,\n      this.props.annotationError[anno.name]),\n\n      visible: this.state.popoverVisible[i],\n      onVisibleChange: (visible) => this.handleVisibleChange(visible, i), __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 7 } },\n\n    ___EmotionJSX(CustomListItem, { selectable: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 185, columnNumber: 9 } },\n    ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 186, columnNumber: 11 } }, anno.name),\n    ___EmotionJSX(\"span\", { style: { float: 'right' }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 187, columnNumber: 11 } }, this.renderInfo(anno)))));\n\n\n\n\n    const addLayerPopoverKey = 'add';\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 194, columnNumber: 7 } },\n      ___EmotionJSX(List, { bordered: true, css: (theme) => ({ borderRadius: theme.gridUnit }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 195, columnNumber: 9 } },\n      annotations,\n      ___EmotionJSX(Popover, {\n        trigger: \"click\",\n        placement: \"right\",\n        content: this.renderPopover(addLayerPopoverKey, addedAnnotation),\n        title: t('Add annotation layer'),\n        visible: this.state.popoverVisible[addLayerPopoverKey],\n        destroyTooltipOnHide: true,\n        onVisibleChange: (visible) =>\n        this.handleVisibleChange(visible, addLayerPopoverKey), __self: this, __source: { fileName: _jsxFileName, lineNumber: 197, columnNumber: 11 } },\n\n\n      ___EmotionJSX(CustomListItem, { selectable: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 208, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", {\n        \"data-test\": \"add-annotation-layer-button\",\n        className: \"fa fa-plus\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 209, columnNumber: 15 } }),\n      ' ', \"\\xA0 \",\n      t('Add annotation layer'))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAnnotationLayerControl.propTypes = propTypes;\nAnnotationLayerControl.defaultProps = defaultProps;\n\n// Tried to hook this up through stores/control.jsx instead of using redux\n// directly, could not figure out how to get access to the color_scheme\nfunction mapStateToProps({ charts, explore }) {var _explore$controls, _explore$controls$col;\n  const chartKey = getChartKey(explore);\n  const chart = charts[chartKey] || charts[0] || {};\n\n  return {\n    // eslint-disable-next-line camelcase\n    colorScheme: (_explore$controls = explore.controls) == null ? void 0 : (_explore$controls$col = _explore$controls.color_scheme) == null ? void 0 : _explore$controls$col.value,\n    annotationError: chart.annotationError,\n    annotationQuery: chart.annotationQuery,\n    vizType: explore.controls.viz_type.value };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    refreshAnnotationData: (annotationLayer) =>\n    dispatch(runAnnotationQuery(annotationLayer)) };\n\n}\n\nconst themedAnnotationLayerControl = withTheme(AnnotationLayerControl);const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nthemedAnnotationLayerControl);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AnnotationLayer, \"AnnotationLayer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(AnnotationLayerControl, \"AnnotationLayerControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(themedAnnotationLayerControl, \"themedAnnotationLayerControl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/AnnotationLayerControl/index.jsx"],"names":["React","PropTypes","List","connect","t","withTheme","InfoTooltipWithTrigger","Popover","AsyncEsmComponent","getChartKey","runAnnotationQuery","CustomListItem","AnnotationLayer","width","height","propTypes","colorScheme","string","isRequired","annotationError","object","annotationQuery","vizType","validationErrors","array","name","actions","value","arrayOf","onChange","func","refreshAnnotationData","defaultProps","AnnotationLayerControl","PureComponent","constructor","props","state","popoverVisible","addedAnnotationIndex","addAnnotationLayer","bind","removeAnnotationLayer","handleVisibleChange","componentDidMount","preload","UNSAFE_componentWillReceiveProps","nextProps","Object","keys","length","setControlValue","originalAnnotation","newAnnotation","annotations","includes","map","anno","setState","visible","popoverKey","prevState","annotation","filter","renderPopover","error","id","renderInfo","color","show","render","addedAnnotation","i","theme","cursor","backgroundColor","colors","grayscale","light4","float","addLayerPopoverKey","borderRadius","gridUnit","mapStateToProps","charts","explore","chartKey","chart","controls","color_scheme","viz_type","mapDispatchToProps","dispatch","annotationLayer","themedAnnotationLayerControl"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { t, withTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Popover from 'src/components/Popover';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { getChartKey } from 'src/explore/exploreUtils';\nimport { runAnnotationQuery } from 'src/chart/chartAction';\nimport CustomListItem from 'src/explore/components/controls/CustomListItem';\n\nconst AnnotationLayer = AsyncEsmComponent(\n  () => import('./AnnotationLayer'),\n  // size of overlay inner content\n  () => <div style={{ width: 450, height: 368 }} />,\n);\n\nconst propTypes = {\n  colorScheme: PropTypes.string.isRequired,\n  annotationError: PropTypes.object,\n  annotationQuery: PropTypes.object,\n  vizType: PropTypes.string,\n\n  validationErrors: PropTypes.array,\n  name: PropTypes.string.isRequired,\n  actions: PropTypes.object,\n  value: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n  refreshAnnotationData: PropTypes.func,\n};\n\nconst defaultProps = {\n  vizType: '',\n  value: [],\n  annotationError: {},\n  annotationQuery: {},\n  onChange: () => {},\n};\n\nclass AnnotationLayerControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popoverVisible: {},\n      addedAnnotationIndex: null,\n    };\n    this.addAnnotationLayer = this.addAnnotationLayer.bind(this);\n    this.removeAnnotationLayer = this.removeAnnotationLayer.bind(this);\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // preload the AnotationLayer component and dependent libraries i.e. mathjs\n    AnnotationLayer.preload();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { name, annotationError, validationErrors, value } = nextProps;\n    if (Object.keys(annotationError).length && !validationErrors.length) {\n      this.props.actions.setControlValue(\n        name,\n        value,\n        Object.keys(annotationError),\n      );\n    }\n    if (!Object.keys(annotationError).length && validationErrors.length) {\n      this.props.actions.setControlValue(name, value, []);\n    }\n  }\n\n  addAnnotationLayer(originalAnnotation, newAnnotation) {\n    let annotations = this.props.value;\n    if (annotations.includes(originalAnnotation)) {\n      annotations = annotations.map(anno =>\n        anno === originalAnnotation ? newAnnotation : anno,\n      );\n    } else {\n      annotations = [...annotations, newAnnotation];\n      this.setState({ addedAnnotationIndex: annotations.length - 1 });\n    }\n\n    this.props.refreshAnnotationData(newAnnotation);\n    this.props.onChange(annotations);\n  }\n\n  handleVisibleChange(visible, popoverKey) {\n    this.setState(prevState => ({\n      popoverVisible: { ...prevState.popoverVisible, [popoverKey]: visible },\n    }));\n  }\n\n  removeAnnotationLayer(annotation) {\n    const annotations = this.props.value.filter(anno => anno !== annotation);\n    this.props.onChange(annotations);\n  }\n\n  renderPopover(popoverKey, annotation, error) {\n    const id = annotation?.name || '_new';\n\n    return (\n      <div id={`annotation-pop-${id}`} data-test=\"popover-content\">\n        <AnnotationLayer\n          {...annotation}\n          error={error}\n          colorScheme={this.props.colorScheme}\n          vizType={this.props.vizType}\n          addAnnotationLayer={newAnnotation =>\n            this.addAnnotationLayer(annotation, newAnnotation)\n          }\n          removeAnnotationLayer={() => this.removeAnnotationLayer(annotation)}\n          close={() => {\n            this.handleVisibleChange(false, popoverKey);\n            this.setState({ addedAnnotationIndex: null });\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderInfo(anno) {\n    const { annotationError, annotationQuery } = this.props;\n    if (annotationQuery[anno.name]) {\n      return (\n        <i className=\"fa fa-refresh\" style={{ color: 'orange' }} aria-hidden />\n      );\n    }\n    if (annotationError[anno.name]) {\n      return (\n        <InfoTooltipWithTrigger\n          label=\"validation-errors\"\n          bsStyle=\"danger\"\n          tooltip={annotationError[anno.name]}\n        />\n      );\n    }\n    if (!anno.show) {\n      return <span style={{ color: 'red' }}> Hidden </span>;\n    }\n    return '';\n  }\n\n  render() {\n    const { addedAnnotationIndex } = this.state;\n    const addedAnnotation = this.props.value[addedAnnotationIndex];\n\n    const annotations = this.props.value.map((anno, i) => (\n      <Popover\n        key={i}\n        trigger=\"click\"\n        placement=\"right\"\n        title={t('Edit annotation layer')}\n        css={theme => ({\n          '&:hover': {\n            cursor: 'pointer',\n            backgroundColor: theme.colors.grayscale.light4,\n          },\n        })}\n        content={this.renderPopover(\n          i,\n          anno,\n          this.props.annotationError[anno.name],\n        )}\n        visible={this.state.popoverVisible[i]}\n        onVisibleChange={visible => this.handleVisibleChange(visible, i)}\n      >\n        <CustomListItem selectable>\n          <span>{anno.name}</span>\n          <span style={{ float: 'right' }}>{this.renderInfo(anno)}</span>\n        </CustomListItem>\n      </Popover>\n    ));\n\n    const addLayerPopoverKey = 'add';\n    return (\n      <div>\n        <List bordered css={theme => ({ borderRadius: theme.gridUnit })}>\n          {annotations}\n          <Popover\n            trigger=\"click\"\n            placement=\"right\"\n            content={this.renderPopover(addLayerPopoverKey, addedAnnotation)}\n            title={t('Add annotation layer')}\n            visible={this.state.popoverVisible[addLayerPopoverKey]}\n            destroyTooltipOnHide\n            onVisibleChange={visible =>\n              this.handleVisibleChange(visible, addLayerPopoverKey)\n            }\n          >\n            <CustomListItem selectable>\n              <i\n                data-test=\"add-annotation-layer-button\"\n                className=\"fa fa-plus\"\n              />{' '}\n              &nbsp; {t('Add annotation layer')}\n            </CustomListItem>\n          </Popover>\n        </List>\n      </div>\n    );\n  }\n}\n\nAnnotationLayerControl.propTypes = propTypes;\nAnnotationLayerControl.defaultProps = defaultProps;\n\n// Tried to hook this up through stores/control.jsx instead of using redux\n// directly, could not figure out how to get access to the color_scheme\nfunction mapStateToProps({ charts, explore }) {\n  const chartKey = getChartKey(explore);\n  const chart = charts[chartKey] || charts[0] || {};\n\n  return {\n    // eslint-disable-next-line camelcase\n    colorScheme: explore.controls?.color_scheme?.value,\n    annotationError: chart.annotationError,\n    annotationQuery: chart.annotationQuery,\n    vizType: explore.controls.viz_type.value,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    refreshAnnotationData: annotationLayer =>\n      dispatch(runAnnotationQuery(annotationLayer)),\n  };\n}\n\nconst themedAnnotationLayerControl = withTheme(AnnotationLayerControl);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(themedAnnotationLayerControl);\n"]},"metadata":{},"sourceType":"module"}