{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport memoize from 'lodash/memoize';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoize((vizType, controlPanel) => {\n  const controlsMap = {};\n  ((controlPanel == null ? void 0 : controlPanel.controlPanelSections) || []).forEach((section) => {\n    section.controlSetRows.forEach((row) => {\n      row.forEach((control) => {\n        if (!control) return;\n        if (typeof control === 'string') {\n          // For now, we have to look in controls.jsx to get the config for some controls.\n          // Once everything is migrated out, delete this if statement.\n          controlsMap[control] = controls[control];\n        } else if (control.name && control.config) {\n          // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n          controlsMap[control.name] = control.config;\n        }\n      });\n    });\n  });\n  return controlsMap;\n});\n\nconst getControlsForVizType = (vizType) => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};const _default =\n\ngetControlsForVizType;const _default2 = _default;export default _default2;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(memoizedControls, \"memoizedControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(getControlsForVizType, \"getControlsForVizType\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(memoizedControls, \"memoizedControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(getControlsForVizType, \"getControlsForVizType\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(_default, \"_default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");reactHotLoader.register(_default2, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/getControlsForVizType.js"],"names":["memoizedControls","memoize","controlsMap","section","row","controls","control","getControlsForVizType","controlPanel","getChartControlPanelRegistry"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAA,OAAA,MAAA,gBAAA;AACA,SAAA,4BAAA,QAAA,mBAAA;AACA,SAAA,QAAA,QAAA,qBAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,CAAA,OAAA,EAAA,YAAA,KAA2B;AAC1D,QAAMC,WAAW,GAAjB,EAAA;AACA,GAAC,CAAA,YAAY,IAAZ,IAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAZ,oBAAA,KAAD,EAAA,EAAA,OAAA,CAAmD,CAAA,OAAA,KAAW;AAC5DC,IAAAA,OAAO,CAAPA,cAAAA,CAAAA,OAAAA,CAA+B,CAAA,GAAA,KAAO;AACpCC,MAAAA,GAAG,CAAHA,OAAAA,CAAY,CAAA,OAAA,KAAW;AACrB,YAAI,CAAJ,OAAA,EAAc;AACd,YAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAC/B;AACA;AACAF,UAAAA,WAAW,CAAXA,OAAW,CAAXA,GAAuBG,QAAQ,CAA/BH,OAA+B,CAA/BA;AAHF,SAAA,MAIO,IAAII,OAAO,CAAPA,IAAAA,IAAgBA,OAAO,CAA3B,MAAA,EAAoC;AACzC;AACAJ,UAAAA,WAAW,CAACI,OAAO,CAAnBJ,IAAW,CAAXA,GAA4BI,OAAO,CAAnCJ,MAAAA;AACD;AATHE,OAAAA;AADFD,KAAAA;AADF,GAAA;AAeA,SAAA,WAAA;AAjBF,CAAgC,CAAhC;;AAoBA,MAAMI,qBAAqB,GAAG,CAAA,OAAA,KAAW;AACvC,QAAMC,YAAY,GAAGC,4BAA4B,GAA5BA,GAAAA,CAArB,OAAqBA,CAArB;AACA,SAAOT,gBAAgB,CAAA,OAAA,EAAvB,YAAuB,CAAvB;AAFF,CAAA,C;;AAKeO,qB,mBAAf,Q,CAAA,yB,iLAzBMP,gB,sIAoBAO,qB,kuBApBAP,gB,sIAoBAO,qB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport memoize from 'lodash/memoize';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoize((vizType, controlPanel) => {\n  const controlsMap = {};\n  (controlPanel?.controlPanelSections || []).forEach(section => {\n    section.controlSetRows.forEach(row => {\n      row.forEach(control => {\n        if (!control) return;\n        if (typeof control === 'string') {\n          // For now, we have to look in controls.jsx to get the config for some controls.\n          // Once everything is migrated out, delete this if statement.\n          controlsMap[control] = controls[control];\n        } else if (control.name && control.config) {\n          // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n          controlsMap[control.name] = control.config;\n        }\n      });\n    });\n  });\n  return controlsMap;\n});\n\nconst getControlsForVizType = vizType => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};\n\nexport default getControlsForVizType;\n"]},"metadata":{},"sourceType":"module"}