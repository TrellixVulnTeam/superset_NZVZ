{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {} })\n{\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const editingList = activeFilterField ?\n  [activeFilterField] :\n  checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField });\n\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId });\n\n  const checkedChartIdSet = new Set();\n  editingList.forEach((filterField) => {\n    (filterScopeMap[filterField].checked || []).forEach((chartId) => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key] ?\n  filterScopeMap[key].expanded :\n  getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded } };\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildFilterScopeTreeEntry, \"buildFilterScopeTreeEntry\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");reactHotLoader.register(buildFilterScopeTreeEntry, \"buildFilterScopeTreeEntry\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js"],"names":["buildFilterScopeTreeEntry","checkedFilterFields","filterScopeMap","layout","key","getKeyForFilterScopeTree","editingList","activeFilterField","selectedChartId","getSelectedChartIdForFilterScopeTree","nodes","getFilterScopeNodesTree","components","filterFields","checkedChartIdSet","chartId","filterField","checked","expanded","getFilterScopeParentNodes","nodesFiltered"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,uBAAA,MAAA,2BAAA;AACA,OAAA,yBAAA,MAAA,6BAAA;AACA,OAAA,wBAAA,MAAA,4BAAA;AACA,OAAA,oCAAA,MAAA,wCAAA;;AAEA,eAAe,SAAA,yBAAA,CAAmC;AAChDC,EAAAA,mBAAmB,GAD6B,EAAA;AAAA,EAAA,iBAAA;AAGhDC,EAAAA,cAAc,GAHkC,EAAA;AAIhDC,EAAAA,MAAM,GAJO,EAAmC,EAAnC;AAKZ;AACD,QAAMC,GAAG,GAAGC,wBAAwB,CAAC;AAAA,IAAA,mBAAA;AAArC,IAAA,iBAAqC,EAAD,CAApC;;AAIA,QAAMC,WAAW,GAAGC,iBAAiB;AACjC,GADiC,iBACjC,CADiC;AAArC,EAAA,mBAAA;AAGA,QAAMC,eAAe,GAAGC,oCAAoC,CAAC;AAAA,IAAA,mBAAA;AAA7D,IAAA,iBAA6D,EAAD,CAA5D;;AAIA,QAAMC,KAAK,GAAGC,uBAAuB,CAAC;AACpCC,IAAAA,UAAU,EAD0B,MAAA;AAEpCC,IAAAA,YAAY,EAFwB,WAAA;AAAtC,IAAA,eAAsC,EAAD,CAArC;;AAKA,QAAMC,iBAAiB,GAAG,IAA1B,GAA0B,EAA1B;AACAR,EAAAA,WAAW,CAAXA,OAAAA,CAAoB,CAAA,WAAA,KAAe;AACjC,KAACJ,cAAc,CAAdA,WAAc,CAAdA,CAAAA,OAAAA,IAAD,EAAA,EAAA,OAAA,CAAoD,CAAA,OAAA,KAAW;AAC7DY,MAAAA,iBAAiB,CAAjBA,GAAAA,CAAuB,GAAEC,OAAQ,IAAGC,WAApCF,EAAAA;AADF,KAAA;AADFR,GAAAA;AAKA,QAAMW,OAAO,GAAG,CAAC,GAAjB,iBAAgB,CAAhB;AACA,QAAMC,QAAQ,GAAGhB,cAAc,CAAdA,GAAc,CAAdA;AACbA,EAAAA,cAAc,CAAdA,GAAc,CAAdA,CADaA,QAAAA;AAEbiB,EAAAA,yBAAyB,CAAA,KAAA,EAF7B,CAE6B,CAF7B;;AAIA,SAAO;AACL,KAAA,GAAA,GAAO;AAAA,MAAA,KAAA;AAELC,MAAAA,aAAa,EAAE,CAAC,GAFX,KAEU,CAFV;AAAA,MAAA,OAAA;AADT,MAAA,QACS,EADF,EAAP;;;kLAjCsBpB,yB,2nBAAT,yB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {},\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const editingList = activeFilterField\n    ? [activeFilterField]\n    : checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId,\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach(filterField => {\n    (filterScopeMap[filterField].checked || []).forEach(chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key]\n    ? filterScopeMap[key].expanded\n    : getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}