{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditableTitle from 'src/components/EditableTitle';\nimport SliceHeaderControls from 'src/dashboard/components/SliceHeaderControls';\nimport FiltersBadge from 'src/dashboard/components/FiltersBadge';\nimport Icons from 'src/components/Icons';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';\nimport { clearDataMask } from 'src/dataMask/actions';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst annotationsLoading = t('Annotation layers are still loading.');\nconst annotationsError = t('One ore more annotation layers failed loading.');\nconst CrossFilterIcon = styled(Icons.CursorTarget)`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.base};\n  height: 22px;\n  width: 22px;\n`;\nconst SliceHeader = ({ innerRef = null, forceRefresh = () => ({}), updateSliceName = () => ({}), toggleExpandSlice = () => ({}), logExploreChart = () => ({}), exploreUrl = '#', exportCSV = () => ({}), editMode = false, annotationQuery = {}, annotationError = {}, cachedDttm = null, updatedDttm = null, isCached = [], isExpanded = false, sliceName = '', supersetCanExplore = false, supersetCanShare = false, supersetCanCSV = false, sliceCanEdit = false, exportFullCSV, slice, componentId, dashboardId, addSuccessToast, addDangerToast, handleToggleFullSize, isFullSize, chartStatus, formData }) => {\n  const dispatch = useDispatch();\n  // TODO: change to indicator field after it will be implemented\n  const crossFilterValue = useSelector((state) => {var _state$dataMask$slice, _state$dataMask$slice2;return (_state$dataMask$slice = state.dataMask[slice == null ? void 0 : slice.slice_id]) == null ? void 0 : (_state$dataMask$slice2 = _state$dataMask$slice.filterState) == null ? void 0 : _state$dataMask$slice2.value;});\n  const indicator = useMemo(() => ({\n    value: crossFilterValue,\n    name: t('Emitted values') }),\n  [crossFilterValue]);\n  return ___EmotionJSX(\"div\", { className: \"chart-header\", \"data-test\": \"slice-header\", ref: innerRef, __self: this, __source: { fileName: _jsxFileName, lineNumber: 45, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { className: \"header-title\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 46, columnNumber: 7 } },\n  ___EmotionJSX(EditableTitle, { title: sliceName || (\n    editMode ?\n    '---' // this makes an empty title clickable\n    : ''), canEdit: editMode, emptyText: \"\", onSaveTitle: updateSliceName, showTooltip: false, __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 9 } }),\n  !!Object.values(annotationQuery).length && ___EmotionJSX(Tooltip, { id: \"annotations-loading-tooltip\", placement: \"top\", title: annotationsLoading, __self: this, __source: { fileName: _jsxFileName, lineNumber: 51, columnNumber: 54 } },\n  ___EmotionJSX(\"i\", { role: \"img\", \"aria-label\": annotationsLoading, className: \"fa fa-refresh warning\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 13 } })),\n\n  !!Object.values(annotationError).length && ___EmotionJSX(Tooltip, { id: \"annoation-errors-tooltip\", placement: \"top\", title: annotationsError, __self: this, __source: { fileName: _jsxFileName, lineNumber: 54, columnNumber: 54 } },\n  ___EmotionJSX(\"i\", { role: \"img\", \"aria-label\": annotationsError, className: \"fa fa-exclamation-circle danger\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 55, columnNumber: 13 } }))),\n\n\n  ___EmotionJSX(\"div\", { className: \"header-controls\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 58, columnNumber: 7 } },\n  !editMode && ___EmotionJSX(React.Fragment, null,\n  crossFilterValue && ___EmotionJSX(Tooltip, { placement: \"top\", title: ___EmotionJSX(FilterIndicator, { indicator: indicator, text: t('Click to clear emitted filters'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 60, columnNumber: 67 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 60, columnNumber: 35 } },\n  ___EmotionJSX(CrossFilterIcon, { onClick: () => dispatch(clearDataMask(slice == null ? void 0 : slice.slice_id)), __self: this, __source: { fileName: _jsxFileName, lineNumber: 61, columnNumber: 17 } })),\n\n  ___EmotionJSX(FiltersBadge, { chartId: slice.slice_id, __self: this, __source: { fileName: _jsxFileName, lineNumber: 63, columnNumber: 13 } }),\n  ___EmotionJSX(SliceHeaderControls, { slice: slice, isCached: isCached, isExpanded: isExpanded, cachedDttm: cachedDttm, updatedDttm: updatedDttm, toggleExpandSlice: toggleExpandSlice, forceRefresh: forceRefresh, logExploreChart: logExploreChart, exploreUrl: exploreUrl, exportCSV: exportCSV, exportFullCSV: exportFullCSV, supersetCanExplore: supersetCanExplore, supersetCanShare: supersetCanShare, supersetCanCSV: supersetCanCSV, sliceCanEdit: sliceCanEdit, componentId: componentId, dashboardId: dashboardId, addSuccessToast: addSuccessToast, addDangerToast: addDangerToast, handleToggleFullSize: handleToggleFullSize, isFullSize: isFullSize, chartStatus: chartStatus, formData: formData, __self: this, __source: { fileName: _jsxFileName, lineNumber: 64, columnNumber: 13 } }))));\n\n\n\n};__signature__(SliceHeader, \"useDispatch{dispatch}\\nuseSelector{crossFilterValue}\\nuseMemo{indicator}\", () => [useDispatch, useSelector]);const _default =\nSliceHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(annotationsLoading, \"annotationsLoading\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\");reactHotLoader.register(annotationsError, \"annotationsError\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\");reactHotLoader.register(CrossFilterIcon, \"CrossFilterIcon\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\");reactHotLoader.register(SliceHeader, \"SliceHeader\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/SliceHeader/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditableTitle from 'src/components/EditableTitle';\nimport SliceHeaderControls, {\n  SliceHeaderControlsProps,\n} from 'src/dashboard/components/SliceHeaderControls';\nimport FiltersBadge from 'src/dashboard/components/FiltersBadge';\nimport Icons from 'src/components/Icons';\nimport { RootState } from 'src/dashboard/types';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';\nimport { clearDataMask } from 'src/dataMask/actions';\n\ntype SliceHeaderProps = SliceHeaderControlsProps & {\n  innerRef?: string;\n  updateSliceName?: (arg0: string) => void;\n  editMode?: boolean;\n  annotationQuery?: object;\n  annotationError?: object;\n  sliceName?: string;\n  filters: object;\n  handleToggleFullSize: () => void;\n  formData: object;\n};\n\nconst annotationsLoading = t('Annotation layers are still loading.');\nconst annotationsError = t('One ore more annotation layers failed loading.');\n\nconst CrossFilterIcon = styled(Icons.CursorTarget)`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.base};\n  height: 22px;\n  width: 22px;\n`;\n\nconst SliceHeader: FC<SliceHeaderProps> = ({\n  innerRef = null,\n  forceRefresh = () => ({}),\n  updateSliceName = () => ({}),\n  toggleExpandSlice = () => ({}),\n  logExploreChart = () => ({}),\n  exploreUrl = '#',\n  exportCSV = () => ({}),\n  editMode = false,\n  annotationQuery = {},\n  annotationError = {},\n  cachedDttm = null,\n  updatedDttm = null,\n  isCached = [],\n  isExpanded = false,\n  sliceName = '',\n  supersetCanExplore = false,\n  supersetCanShare = false,\n  supersetCanCSV = false,\n  sliceCanEdit = false,\n  exportFullCSV,\n  slice,\n  componentId,\n  dashboardId,\n  addSuccessToast,\n  addDangerToast,\n  handleToggleFullSize,\n  isFullSize,\n  chartStatus,\n  formData,\n}) => {\n  const dispatch = useDispatch();\n  // TODO: change to indicator field after it will be implemented\n  const crossFilterValue = useSelector<RootState, any>(\n    state => state.dataMask[slice?.slice_id]?.filterState?.value,\n  );\n\n  const indicator = useMemo(\n    () => ({\n      value: crossFilterValue,\n      name: t('Emitted values'),\n    }),\n    [crossFilterValue],\n  );\n\n  return (\n    <div className=\"chart-header\" data-test=\"slice-header\" ref={innerRef}>\n      <div className=\"header-title\">\n        <EditableTitle\n          title={\n            sliceName ||\n            (editMode\n              ? '---' // this makes an empty title clickable\n              : '')\n          }\n          canEdit={editMode}\n          emptyText=\"\"\n          onSaveTitle={updateSliceName}\n          showTooltip={false}\n        />\n        {!!Object.values(annotationQuery).length && (\n          <Tooltip\n            id=\"annotations-loading-tooltip\"\n            placement=\"top\"\n            title={annotationsLoading}\n          >\n            <i\n              role=\"img\"\n              aria-label={annotationsLoading}\n              className=\"fa fa-refresh warning\"\n            />\n          </Tooltip>\n        )}\n        {!!Object.values(annotationError).length && (\n          <Tooltip\n            id=\"annoation-errors-tooltip\"\n            placement=\"top\"\n            title={annotationsError}\n          >\n            <i\n              role=\"img\"\n              aria-label={annotationsError}\n              className=\"fa fa-exclamation-circle danger\"\n            />\n          </Tooltip>\n        )}\n      </div>\n      <div className=\"header-controls\">\n        {!editMode && (\n          <>\n            {crossFilterValue && (\n              <Tooltip\n                placement=\"top\"\n                title={\n                  <FilterIndicator\n                    indicator={indicator}\n                    text={t('Click to clear emitted filters')}\n                  />\n                }\n              >\n                <CrossFilterIcon\n                  onClick={() => dispatch(clearDataMask(slice?.slice_id))}\n                />\n              </Tooltip>\n            )}\n            <FiltersBadge chartId={slice.slice_id} />\n            <SliceHeaderControls\n              slice={slice}\n              isCached={isCached}\n              isExpanded={isExpanded}\n              cachedDttm={cachedDttm}\n              updatedDttm={updatedDttm}\n              toggleExpandSlice={toggleExpandSlice}\n              forceRefresh={forceRefresh}\n              logExploreChart={logExploreChart}\n              exploreUrl={exploreUrl}\n              exportCSV={exportCSV}\n              exportFullCSV={exportFullCSV}\n              supersetCanExplore={supersetCanExplore}\n              supersetCanShare={supersetCanShare}\n              supersetCanCSV={supersetCanCSV}\n              sliceCanEdit={sliceCanEdit}\n              componentId={componentId}\n              dashboardId={dashboardId}\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              handleToggleFullSize={handleToggleFullSize}\n              isFullSize={isFullSize}\n              chartStatus={chartStatus}\n              formData={formData}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SliceHeader;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}