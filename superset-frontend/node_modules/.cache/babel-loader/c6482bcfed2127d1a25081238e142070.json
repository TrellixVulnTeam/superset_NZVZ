{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndSelectLabel.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { t, useTheme } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { AddControlLabel, DndLabelsContainer, HeaderContainer } from 'src/explore/components/controls/OptionControls';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function DndSelectLabel({ displayGhostButton = true, accept, ...props }) {\n  const theme = useTheme();\n  const [{ isOver, canDrop }, datasourcePanelDrop] = useDrop({\n    accept,\n    drop: (item) => {\n      props.onDrop(item);\n      props.onDropValue == null ? void 0 : props.onDropValue(item.value);\n    },\n    canDrop: (item) => {var _props$canDropValue;return props.canDrop(item) && ((_props$canDropValue = props.canDropValue == null ? void 0 : props.canDropValue(item.value)) != null ? _props$canDropValue : true);},\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      type: monitor.getItemType() }) });\n\n\n  function renderGhostButton() {\n    return ___EmotionJSX(AddControlLabel, { cancelHover: !props.onClickGhostButton, onClick: props.onClickGhostButton, __self: this, __source: { fileName: _jsxFileName, lineNumber: 41, columnNumber: 17 } },\n    ___EmotionJSX(Icons.PlusSmall, { iconColor: theme.colors.grayscale.light1, __self: this, __source: { fileName: _jsxFileName, lineNumber: 42, columnNumber: 9 } }),\n    t(props.ghostButtonText || 'Drop columns here'));\n\n  }\n  return ___EmotionJSX(\"div\", { ref: datasourcePanelDrop, __self: this, __source: { fileName: _jsxFileName, lineNumber: 46, columnNumber: 13 } },\n  ___EmotionJSX(HeaderContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 7 } },\n  ___EmotionJSX(ControlHeader, _extends({}, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 48, columnNumber: 9 } }))),\n\n  ___EmotionJSX(DndLabelsContainer, { canDrop: canDrop, isOver: isOver, __self: this, __source: { fileName: _jsxFileName, lineNumber: 50, columnNumber: 7 } },\n  props.valuesRenderer(),\n  displayGhostButton && renderGhostButton()));\n\n\n}__signature__(DndSelectLabel, \"useTheme{theme}\\nuseDrop{[{ isOver, canDrop }, datasourcePanelDrop]}\", () => [useTheme, useDrop]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DndSelectLabel, \"DndSelectLabel\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndSelectLabel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndSelectLabel.tsx"],"names":[],"mappings":"ufAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAiC,OAAjC;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,CAAT,EAAY,QAAZ,QAA4B,mBAA5B;AACA,OAAO,aAAP,MAA0B,sCAA1B;AACA,SACE,eADF,EAEE,kBAFF,EAGE,eAHF,QAIO,gDAJP;AASA,OAAO,KAAP,MAAkB,sBAAlB,C;AAgBA,eAAc,SAAU,cAAV,CAAyB,EACrC,kBAAkB,GAAG,IADgB,EAErC,MAFqC,EAGrC,GAAG,KAHkC,EAAzB,EAIQ;AACpB,QAAM,KAAK,GAAG,QAAQ,EAAtB;AAEA,QAAM,CAAC,EAAE,MAAF,EAAU,OAAV,EAAD,EAAsB,mBAAtB,IAA6C,OAAO,CAAC;AACzD,IAAA,MADyD;AAGzD,IAAA,IAAI,EAAE,CAAC,IAAD,KAAiC;AACrC,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb;AACA,MAAA,KAAK,CAAC,WAAN,oBAAA,KAAK,CAAC,WAAN,CAAoB,IAAI,CAAC,KAAzB;AACD,KANwD;AAQzD,IAAA,OAAO,EAAE,CAAC,IAAD,qCACP,KAAK,CAAC,OAAN,CAAc,IAAd,6BAAwB,KAAK,CAAC,YAA9B,oBAAwB,KAAK,CAAC,YAAN,CAAqB,IAAI,CAAC,KAA1B,CAAxB,kCAA4D,IAA5D,CADO,EARgD;AAWzD,IAAA,OAAO,EAAE,CAAA,OAAO,MAAK;AACnB,MAAA,MAAM,EAAE,OAAO,CAAC,MAAR,EADW;AAEnB,MAAA,OAAO,EAAE,OAAO,CAAC,OAAR,EAFU;AAGnB,MAAA,IAAI,EAAE,OAAO,CAAC,WAAR,EAHa,EAAL,CAXyC,EAAD,CAA1D;;;AAkBA,WAAS,iBAAT,GAA0B;AACxB,WACE,cAAC,eAAD,IACE,WAAW,EAAE,CAAC,KAAK,CAAC,kBADtB,EAEE,OAAO,EAAE,KAAK,CAAC,kBAFjB;AAIE,kBAAC,KAAD,CAAO,SAAP,IAAiB,SAAS,EAAE,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAnD,wFAJF;AAKG,IAAA,CAAC,CAAC,KAAK,CAAC,eAAN,IAAyB,mBAA1B,CALJ,CADF;;AASD;AAED,SACE,uBAAK,GAAG,EAAE,mBAAV;AACE,gBAAC,eAAD;AACE,gBAAC,aAAD,eAAmB,KAAnB,2FADF,CADF;;AAIE,gBAAC,kBAAD,IAAoB,OAAO,EAAE,OAA7B,EAAsC,MAAM,EAAE,MAA9C;AACG,EAAA,KAAK,CAAC,cAAN,EADH;AAEG,EAAA,kBAAkB,IAAI,iBAAiB,EAF1C,CAJF,CADF;;;AAWD,C,cAhDuB,c,iFAKR,Q,EAEqC,O,oLAP7B,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { t, useTheme } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport {\n  AddControlLabel,\n  DndLabelsContainer,\n  HeaderContainer,\n} from 'src/explore/components/controls/OptionControls';\nimport {\n  DatasourcePanelDndItem,\n  DndItemValue,\n} from 'src/explore/components/DatasourcePanel/types';\nimport Icons from 'src/components/Icons';\nimport { DndItemType } from '../../DndItemType';\n\nexport type DndSelectLabelProps = {\n  name: string;\n  accept: DndItemType | DndItemType[];\n  ghostButtonText?: string;\n  onDrop: (item: DatasourcePanelDndItem) => void;\n  canDrop: (item: DatasourcePanelDndItem) => boolean;\n  canDropValue?: (value: DndItemValue) => boolean;\n  onDropValue?: (value: DndItemValue) => void;\n  valuesRenderer: () => ReactNode;\n  displayGhostButton?: boolean;\n  onClickGhostButton?: () => void;\n};\n\nexport default function DndSelectLabel({\n  displayGhostButton = true,\n  accept,\n  ...props\n}: DndSelectLabelProps) {\n  const theme = useTheme();\n\n  const [{ isOver, canDrop }, datasourcePanelDrop] = useDrop({\n    accept,\n\n    drop: (item: DatasourcePanelDndItem) => {\n      props.onDrop(item);\n      props.onDropValue?.(item.value);\n    },\n\n    canDrop: (item: DatasourcePanelDndItem) =>\n      props.canDrop(item) && (props.canDropValue?.(item.value) ?? true),\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      type: monitor.getItemType(),\n    }),\n  });\n\n  function renderGhostButton() {\n    return (\n      <AddControlLabel\n        cancelHover={!props.onClickGhostButton}\n        onClick={props.onClickGhostButton}\n      >\n        <Icons.PlusSmall iconColor={theme.colors.grayscale.light1} />\n        {t(props.ghostButtonText || 'Drop columns here')}\n      </AddControlLabel>\n    );\n  }\n\n  return (\n    <div ref={datasourcePanelDrop}>\n      <HeaderContainer>\n        <ControlHeader {...props} />\n      </HeaderContainer>\n      <DndLabelsContainer canDrop={canDrop} isOver={isOver}>\n        {props.valuesRenderer()}\n        {displayGhostButton && renderGhostButton()}\n      </DndLabelsContainer>\n    </div>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}