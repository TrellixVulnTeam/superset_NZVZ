{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n/* eslint-disable camelcase */\nimport {\nADD_SLICE,\nON_CHANGE,\nON_SAVE,\nREMOVE_SLICE,\nSET_COLOR_SCHEME,\nSET_EDIT_MODE,\nSET_MAX_UNDO_HISTORY_EXCEEDED,\nSET_UNSAVED_CHANGES,\nSHOW_BUILDER_PANE,\nTOGGLE_EXPAND_SLICE,\nTOGGLE_FAVE_STAR,\nTOGGLE_PUBLISHED,\nUPDATE_CSS,\nSET_REFRESH_FREQUENCY,\nON_REFRESH,\nON_REFRESH_SUCCESS,\nSET_DIRECT_PATH,\nSET_FOCUSED_FILTER_FIELD,\nUNSET_FOCUSED_FILTER_FIELD,\nSET_ACTIVE_TABS,\nSET_FULL_SIZE_CHART_ID } from\n'../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds) };\n\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds) };\n\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode };\n\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true };\n\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime };\n\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent };\n\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true };\n\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false };\n\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now() };\n\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs) };\n\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column } };\n\n\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n      !state.focusedFilterField ||\n      action.chartId !== state.focusedFilterField.chartId ||\n      action.column !== state.focusedFilterField.column)\n      {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null };\n\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId };\n\n    } };\n\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(dashboardStateReducer, \"dashboardStateReducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/reducers/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/reducers/dashboardState.js\");reactHotLoader.register(dashboardStateReducer, \"dashboardStateReducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/reducers/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/reducers/dashboardState.js"],"names":["dashboardStateReducer","state","actionHandlers","action","css","updatedSliceIds","sliceIds","Array","isStarred","isPublished","editMode","maxUndoHistoryExceeded","colorScheme","updatedColorScheme","updatedExpandedSlices","expandedSlices","hasUnsavedChanges","lastModifiedTime","refreshFrequency","shouldPersistRefreshFrequency","isRefreshing","directPathToChild","directPathLastUpdated","Date","newActiveTabs","activeTabs","focusedFilterField","chartId","column","fullSizeChartId"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport {\n  ADD_SLICE,\n  ON_CHANGE,\n  ON_SAVE,\n  REMOVE_SLICE,\n  SET_COLOR_SCHEME,\n  SET_EDIT_MODE,\n  SET_MAX_UNDO_HISTORY_EXCEEDED,\n  SET_UNSAVED_CHANGES,\n  SHOW_BUILDER_PANE,\n  TOGGLE_EXPAND_SLICE,\n  TOGGLE_FAVE_STAR,\n  TOGGLE_PUBLISHED,\n  UPDATE_CSS,\n  SET_REFRESH_FREQUENCY,\n  ON_REFRESH,\n  ON_REFRESH_SUCCESS,\n  SET_DIRECT_PATH,\n  SET_FOCUSED_FILTER_FIELD,\n  UNSET_FOCUSED_FILTER_FIELD,\n  SET_ACTIVE_TABS,\n  SET_FULL_SIZE_CHART_ID,\n} from '../actions/dashboardState';\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport default function dashboardStateReducer(state = {}, action) {\n  const actionHandlers = {\n    [HYDRATE_DASHBOARD]() {\n      return { ...state, ...action.data.dashboardState };\n    },\n    [UPDATE_CSS]() {\n      return { ...state, css: action.css };\n    },\n    [ADD_SLICE]() {\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.add(action.slice.slice_id);\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [REMOVE_SLICE]() {\n      const { sliceId } = action;\n      const updatedSliceIds = new Set(state.sliceIds);\n      updatedSliceIds.delete(sliceId);\n\n      return {\n        ...state,\n        sliceIds: Array.from(updatedSliceIds),\n      };\n    },\n    [TOGGLE_FAVE_STAR]() {\n      return { ...state, isStarred: action.isStarred };\n    },\n    [TOGGLE_PUBLISHED]() {\n      return { ...state, isPublished: action.isPublished };\n    },\n    [SET_EDIT_MODE]() {\n      return {\n        ...state,\n        editMode: action.editMode,\n      };\n    },\n    [SET_MAX_UNDO_HISTORY_EXCEEDED]() {\n      const { maxUndoHistoryExceeded = true } = action.payload;\n      return { ...state, maxUndoHistoryExceeded };\n    },\n    [SHOW_BUILDER_PANE]() {\n      return { ...state };\n    },\n    [SET_COLOR_SCHEME]() {\n      return {\n        ...state,\n        colorScheme: action.colorScheme,\n        updatedColorScheme: true,\n      };\n    },\n    [TOGGLE_EXPAND_SLICE]() {\n      const updatedExpandedSlices = { ...state.expandedSlices };\n      const { sliceId } = action;\n      if (updatedExpandedSlices[sliceId]) {\n        delete updatedExpandedSlices[sliceId];\n      } else {\n        updatedExpandedSlices[sliceId] = true;\n      }\n      return { ...state, expandedSlices: updatedExpandedSlices };\n    },\n    [ON_CHANGE]() {\n      return { ...state, hasUnsavedChanges: true };\n    },\n    [ON_SAVE]() {\n      return {\n        ...state,\n        hasUnsavedChanges: false,\n        maxUndoHistoryExceeded: false,\n        editMode: false,\n        updatedColorScheme: false,\n        // server-side returns last_modified_time for latest change\n        lastModifiedTime: action.lastModifiedTime,\n      };\n    },\n    [SET_UNSAVED_CHANGES]() {\n      const { hasUnsavedChanges } = action.payload;\n      return { ...state, hasUnsavedChanges };\n    },\n    [SET_REFRESH_FREQUENCY]() {\n      return {\n        ...state,\n        refreshFrequency: action.refreshFrequency,\n        shouldPersistRefreshFrequency: action.isPersistent,\n        hasUnsavedChanges: action.isPersistent,\n      };\n    },\n    [ON_REFRESH]() {\n      return {\n        ...state,\n        isRefreshing: true,\n      };\n    },\n    [ON_REFRESH_SUCCESS]() {\n      return {\n        ...state,\n        isRefreshing: false,\n      };\n    },\n    [SET_DIRECT_PATH]() {\n      return {\n        ...state,\n        directPathToChild: action.path,\n        directPathLastUpdated: Date.now(),\n      };\n    },\n    [SET_ACTIVE_TABS]() {\n      const newActiveTabs = new Set(state.activeTabs);\n      newActiveTabs.delete(action.prevTabId);\n      newActiveTabs.add(action.tabId);\n      return {\n        ...state,\n        activeTabs: Array.from(newActiveTabs),\n      };\n    },\n    [SET_FOCUSED_FILTER_FIELD]() {\n      return {\n        ...state,\n        focusedFilterField: {\n          chartId: action.chartId,\n          column: action.column,\n        },\n      };\n    },\n    [UNSET_FOCUSED_FILTER_FIELD]() {\n      // dashboard only has 1 focused filter field at a time,\n      // but when user switch different filter boxes,\n      // browser didn't always fire onBlur and onFocus events in order.\n      if (\n        !state.focusedFilterField ||\n        action.chartId !== state.focusedFilterField.chartId ||\n        action.column !== state.focusedFilterField.column\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        focusedFilterField: null,\n      };\n    },\n    [SET_FULL_SIZE_CHART_ID]() {\n      return {\n        ...state,\n        fullSizeChartId: action.chartId,\n      };\n    },\n  };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}