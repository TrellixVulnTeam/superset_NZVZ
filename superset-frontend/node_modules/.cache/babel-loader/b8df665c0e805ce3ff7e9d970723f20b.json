{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onFilterEdit: PropTypes.func.isRequired,\n  onRemoveFilter: PropTypes.func,\n  options: PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  columnType,\n  PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n  adhocMetricType])).\n\n  isRequired,\n  sections: PropTypes.arrayOf(PropTypes.string),\n  operators: PropTypes.arrayOf(PropTypes.string),\n  datasource: PropTypes.object,\n  partitionColumn: PropTypes.string,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number };\n\n\nconst AdhocFilterOption = ({\n  adhocFilter,\n  options,\n  datasource,\n  onFilterEdit,\n  onRemoveFilter,\n  partitionColumn,\n  onMoveLabel,\n  onDropLabel,\n  index,\n  sections,\n  operators }) =>\n\n___EmotionJSX(AdhocFilterPopoverTrigger, {\n  sections: sections,\n  operators: operators,\n  adhocFilter: adhocFilter,\n  options: options,\n  datasource: datasource,\n  onFilterEdit: onFilterEdit,\n  partitionColumn: partitionColumn, __self: this, __source: { fileName: _jsxFileName, lineNumber: 61, columnNumber: 3 } },\n\n___EmotionJSX(OptionControlLabel, {\n  label: adhocFilter.getDefaultLabel(),\n  tooltipTitle: adhocFilter.getTooltipTitle(),\n  onRemove: onRemoveFilter,\n  onMoveLabel: onMoveLabel,\n  onDropLabel: onDropLabel,\n  index: index,\n  type: DndItemType.FilterOption,\n  withCaret: true,\n  isExtra: adhocFilter.isExtra, __self: this, __source: { fileName: _jsxFileName, lineNumber: 70, columnNumber: 5 } }));const _default =\n\n\n\n\nAdhocFilterOption;export default _default;\n\nAdhocFilterOption.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.jsx\");reactHotLoader.register(AdhocFilterOption, \"AdhocFilterOption\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterOption/index.jsx"],"names":["React","PropTypes","adhocMetricType","OptionControlLabel","DndItemType","columnType","AdhocFilterPopoverTrigger","AdhocFilter","propTypes","adhocFilter","instanceOf","isRequired","onFilterEdit","func","onRemoveFilter","options","arrayOf","oneOfType","shape","saved_metric_name","string","sections","operators","datasource","object","partitionColumn","onMoveLabel","onDropLabel","index","number","AdhocFilterOption","getDefaultLabel","getTooltipTitle","FilterOption","isExtra"],"mappings":"ybAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,+DAA5B;AACA,SAASC,kBAAT,QAAmC,gDAAnC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,UAAP,MAAuB,0DAAvB;AACA,OAAOC,yBAAP,MAAsC,yEAAtC;AACA,OAAOC,WAAP,MAAwB,2DAAxB,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAER,SAAS,CAACS,UAAV,CAAqBH,WAArB,EAAkCI,UAD/B;AAEhBC,EAAAA,YAAY,EAAEX,SAAS,CAACY,IAAV,CAAeF,UAFb;AAGhBG,EAAAA,cAAc,EAAEb,SAAS,CAACY,IAHV;AAIhBE,EAAAA,OAAO,EAAEd,SAAS,CAACe,OAAV;AACPf,EAAAA,SAAS,CAACgB,SAAV,CAAoB;AAClBZ,EAAAA,UADkB;AAElBJ,EAAAA,SAAS,CAACiB,KAAV,CAAgB,EAAEC,iBAAiB,EAAElB,SAAS,CAACmB,MAAV,CAAiBT,UAAtC,EAAhB,CAFkB;AAGlBT,EAAAA,eAHkB,CAApB,CADO;;AAMPS,EAAAA,UAVc;AAWhBU,EAAAA,QAAQ,EAAEpB,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACmB,MAA5B,CAXM;AAYhBE,EAAAA,SAAS,EAAErB,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACmB,MAA5B,CAZK;AAahBG,EAAAA,UAAU,EAAEtB,SAAS,CAACuB,MAbN;AAchBC,EAAAA,eAAe,EAAExB,SAAS,CAACmB,MAdX;AAehBM,EAAAA,WAAW,EAAEzB,SAAS,CAACY,IAfP;AAgBhBc,EAAAA,WAAW,EAAE1B,SAAS,CAACY,IAhBP;AAiBhBe,EAAAA,KAAK,EAAE3B,SAAS,CAAC4B,MAjBD,EAAlB;;;AAoBA,MAAMC,iBAAiB,GAAG,CAAC;AACzBrB,EAAAA,WADyB;AAEzBM,EAAAA,OAFyB;AAGzBQ,EAAAA,UAHyB;AAIzBX,EAAAA,YAJyB;AAKzBE,EAAAA,cALyB;AAMzBW,EAAAA,eANyB;AAOzBC,EAAAA,WAPyB;AAQzBC,EAAAA,WARyB;AASzBC,EAAAA,KATyB;AAUzBP,EAAAA,QAVyB;AAWzBC,EAAAA,SAXyB,EAAD;;AAaxB,cAAC,yBAAD;AACE,EAAA,QAAQ,EAAED,QADZ;AAEE,EAAA,SAAS,EAAEC,SAFb;AAGE,EAAA,WAAW,EAAEb,WAHf;AAIE,EAAA,OAAO,EAAEM,OAJX;AAKE,EAAA,UAAU,EAAEQ,UALd;AAME,EAAA,YAAY,EAAEX,YANhB;AAOE,EAAA,eAAe,EAAEa,eAPnB;;AASE,cAAC,kBAAD;AACE,EAAA,KAAK,EAAEhB,WAAW,CAACsB,eAAZ,EADT;AAEE,EAAA,YAAY,EAAEtB,WAAW,CAACuB,eAAZ,EAFhB;AAGE,EAAA,QAAQ,EAAElB,cAHZ;AAIE,EAAA,WAAW,EAAEY,WAJf;AAKE,EAAA,WAAW,EAAEC,WALf;AAME,EAAA,KAAK,EAAEC,KANT;AAOE,EAAA,IAAI,EAAExB,WAAW,CAAC6B,YAPpB;AAQE,EAAA,SAAS,MARX;AASE,EAAA,OAAO,EAAExB,WAAW,CAACyB,OATvB,wFATF,CAbF,C;;;;;AAoCeJ,iB,CAAf;;AAEAA,iBAAiB,CAACtB,SAAlB,GAA8BA,SAA9B,C,iLA1DMA,S,sKAoBAsB,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport { OptionControlLabel } from 'src/explore/components/controls/OptionControls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onFilterEdit: PropTypes.func.isRequired,\n  onRemoveFilter: PropTypes.func,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      columnType,\n      PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n      adhocMetricType,\n    ]),\n  ).isRequired,\n  sections: PropTypes.arrayOf(PropTypes.string),\n  operators: PropTypes.arrayOf(PropTypes.string),\n  datasource: PropTypes.object,\n  partitionColumn: PropTypes.string,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number,\n};\n\nconst AdhocFilterOption = ({\n  adhocFilter,\n  options,\n  datasource,\n  onFilterEdit,\n  onRemoveFilter,\n  partitionColumn,\n  onMoveLabel,\n  onDropLabel,\n  index,\n  sections,\n  operators,\n}) => (\n  <AdhocFilterPopoverTrigger\n    sections={sections}\n    operators={operators}\n    adhocFilter={adhocFilter}\n    options={options}\n    datasource={datasource}\n    onFilterEdit={onFilterEdit}\n    partitionColumn={partitionColumn}\n  >\n    <OptionControlLabel\n      label={adhocFilter.getDefaultLabel()}\n      tooltipTitle={adhocFilter.getTooltipTitle()}\n      onRemove={onRemoveFilter}\n      onMoveLabel={onMoveLabel}\n      onDropLabel={onDropLabel}\n      index={index}\n      type={DndItemType.FilterOption}\n      withCaret\n      isExtra={adhocFilter.isExtra}\n    />\n  </AdhocFilterPopoverTrigger>\n);\n\nexport default AdhocFilterOption;\n\nAdhocFilterOption.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}