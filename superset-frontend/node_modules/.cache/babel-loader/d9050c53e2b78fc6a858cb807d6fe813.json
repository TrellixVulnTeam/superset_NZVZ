{"ast":null,"code":"import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000 })\n  {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThrehold = delayThreshold;\n\n    this.trigger = _debounce(this.trigger.bind(this), this.delayThrehold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default =\nDebouncedMessageQueue;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DebouncedMessageQueue, \"DebouncedMessageQueue\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/DebouncedMessageQueue.js\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/DebouncedMessageQueue.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/DebouncedMessageQueue.js"],"names":["DebouncedMessageQueue","constructor","callback","sizeThreshold","delayThreshold","queue","delayThrehold","trigger","bind","append","eventData","push","length","events","splice","call"],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,qBAAN,CAA4B;AAC1BC,EAAAA,WAAW,CAAC;AACVC,IAAAA,QAAQ,GAAG,MAAM,CAAE,CADT;AAEVC,IAAAA,aAAa,GAAG,IAFN;AAGVC,IAAAA,cAAc,GAAG,IAHP,EAAD;AAIR;AACD,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKG,aAAL,GAAqBF,cAArB;;AAEA,SAAKG,OAAL,GAAe,UAAS,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAT,EAAkC,KAAKF,aAAvC,CAAf;AACA,SAAKJ,QAAL,GAAgBA,QAAhB;AACD;;AAEDO,EAAAA,MAAM,CAACC,SAAD,EAAY;AAChB,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,SAAhB;AACA,SAAKH,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKF,KAAL,CAAWO,MAAX,GAAoB,CAAxB,EAA2B;AACzB,YAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWS,MAAX,CAAkB,CAAlB,EAAqB,KAAKX,aAA1B,CAAf;AACA,WAAKD,QAAL,CAAca,IAAd,CAAmB,IAAnB,EAAyBF,MAAzB;;AAEA;AACA,UAAI,KAAKR,KAAL,CAAWO,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAKL,OAAL;AACD;AACF;AACF,GA7ByB;AAAA;AAAA,6B;AAgCbP,qB,CAAf,wB,iLAhCMA,qB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { debounce } from 'lodash';\n\nclass DebouncedMessageQueue {\n  constructor({\n    callback = () => {},\n    sizeThreshold = 1000,\n    delayThreshold = 1000,\n  }) {\n    this.queue = [];\n    this.sizeThreshold = sizeThreshold;\n    this.delayThrehold = delayThreshold;\n\n    this.trigger = debounce(this.trigger.bind(this), this.delayThrehold);\n    this.callback = callback;\n  }\n\n  append(eventData) {\n    this.queue.push(eventData);\n    this.trigger();\n  }\n\n  trigger() {\n    if (this.queue.length > 0) {\n      const events = this.queue.splice(0, this.sizeThreshold);\n      this.callback.call(null, events);\n\n      // If there are remaining items, call it again.\n      if (this.queue.length > 0) {\n        this.trigger();\n      }\n    }\n  }\n}\n\nexport default DebouncedMessageQueue;\n"]},"metadata":{},"sourceType":"module"}