{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n/* eslint camelcase: 0 */\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getAllControlsState, getFormDataFromControls } from './controlUtils';\nimport { controls } from './controls';\n\nfunction handleDeprecatedControls(formData) {\n  // Reacffectation / handling of deprecated controls\n  /* eslint-disable no-param-reassign */\n\n  // y_axis_zero was a boolean forcing 0 to be part of the Y Axis\n  if (formData.y_axis_zero) {\n    formData.y_axis_bounds = [0, null];\n  }\n}\n\nexport function getControlsState(state, inputFormData) {\n  /*\n   * Gets a new controls object to put in the state. The controls object\n   * is similar to the configuration control with only the controls\n   * related to the current viz_type, materializes mapStateToProps functions,\n   * adds value keys coming from inputFormData passed here. This can't be an action creator\n   * just yet because it's used in both the explore and dashboard views.\n   * */\n  // Getting a list of active control names for the current viz\n  const formData = { ...inputFormData };\n  const vizType =\n  formData.viz_type || state.common.conf.DEFAULT_VIZ_TYPE || 'table';\n\n  handleDeprecatedControls(formData);\n\n  const controlsState = getAllControlsState(\n  vizType,\n  state.datasource.type,\n  state,\n  formData);\n\n\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  if (controlPanelConfig.onInit) {\n    return controlPanelConfig.onInit(controlsState);\n  }\n\n  return controlsState;\n}\n\nexport function applyDefaultFormData(inputFormData) {\n  const datasourceType = inputFormData.datasource.split('__')[1];\n  const vizType = inputFormData.viz_type;\n  const controlsState = getAllControlsState(vizType, datasourceType, null, {\n    ...inputFormData });\n\n  const controlFormData = getFormDataFromControls(controlsState);\n\n  const formData = {};\n  Object.keys(controlsState).\n  concat(Object.keys(inputFormData)).\n  forEach((controlName) => {\n    if (inputFormData[controlName] === undefined) {\n      formData[controlName] = controlFormData[controlName];\n    } else {\n      formData[controlName] = inputFormData[controlName];\n    }\n  });\n\n  return formData;\n}\n\nconst defaultControls = { ...controls };\nObject.keys(controls).forEach((f) => {\n  defaultControls[f].value = controls[f].default;\n});\n\nconst defaultState = {\n  controls: defaultControls,\n  form_data: getFormDataFromControls(defaultControls) };\n\n\nexport { defaultControls, defaultState };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(handleDeprecatedControls, \"handleDeprecatedControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(getControlsState, \"getControlsState\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(applyDefaultFormData, \"applyDefaultFormData\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultControls, \"defaultControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultState, \"defaultState\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(__signature__, \"__signature__\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(handleDeprecatedControls, \"handleDeprecatedControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(getControlsState, \"getControlsState\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(applyDefaultFormData, \"applyDefaultFormData\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultControls, \"defaultControls\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultState, \"defaultState\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/store.js"],"names":["handleDeprecatedControls","formData","getControlsState","vizType","state","controlsState","getAllControlsState","controlPanelConfig","getChartControlPanelRegistry","applyDefaultFormData","datasourceType","inputFormData","controlFormData","getFormDataFromControls","Object","defaultControls","controls","defaultState","form_data"],"mappings":"+kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,4BAAA,QAAA,mBAAA;AACA,SAAA,mBAAA,EAAA,uBAAA,QAAA,gBAAA;AACA,SAAA,QAAA,QAAA,YAAA;;AAEA,SAAA,wBAAA,CAAA,QAAA,EAA4C;AAC1C;AACA;;AAEA;AACA,MAAIC,QAAQ,CAAZ,WAAA,EAA0B;AACxBA,IAAAA,QAAQ,CAARA,aAAAA,GAAyB,CAAA,CAAA,EAAzBA,IAAyB,CAAzBA;AACD;AACF;;AAED,OAAO,SAAA,gBAAA,CAAA,KAAA,EAAA,aAAA,EAAgD;AACrD;AACF;AACA;AACA;AACA;AACA;AACA;AACE;AACA,QAAMA,QAAQ,GAAG,EAAE,GAAnB,aAAiB,EAAjB;AACA,QAAME,OAAO;AACXF,EAAAA,QAAQ,CAARA,QAAAA,IAAqBG,KAAK,CAALA,MAAAA,CAAAA,IAAAA,CAArBH,gBAAAA,IADF,OAAA;;AAGAD,EAAAA,wBAAwB,CAAxBA,QAAwB,CAAxBA;;AAEA,QAAMK,aAAa,GAAGC,mBAAmB;AAAA,EAAA,OAAA;AAEvCF,EAAAA,KAAK,CAALA,UAAAA,CAFuC,IAAA;AAAA,EAAA,KAAA;AAAzC,EAAA,QAAyC,CAAzC;;;AAOA,QAAMG,kBAAkB,GAAGC,4BAA4B,GAA5BA,GAAAA,CAAAA,OAAAA,KAA3B,EAAA;AACA,MAAID,kBAAkB,CAAtB,MAAA,EAA+B;AAC7B,WAAOA,kBAAkB,CAAlBA,MAAAA,CAAP,aAAOA,CAAP;AACD;;AAED,SAAA,aAAA;AACD;;AAED,OAAO,SAAA,oBAAA,CAAA,aAAA,EAA6C;AAClD,QAAMG,cAAc,GAAGC,aAAa,CAAbA,UAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAvB,CAAuBA,CAAvB;AACA,QAAMR,OAAO,GAAGQ,aAAa,CAA7B,QAAA;AACA,QAAMN,aAAa,GAAGC,mBAAmB,CAAA,OAAA,EAAA,cAAA,EAAA,IAAA,EAAgC;AACvE,OADF,aAAyE,EAAhC,CAAzC;;AAGA,QAAMM,eAAe,GAAGC,uBAAuB,CAA/C,aAA+C,CAA/C;;AAEA,QAAMZ,QAAQ,GAAd,EAAA;AACAa,EAAAA,MAAM,CAANA,IAAAA,CAAAA,aAAAA;AAAAA,EAAAA,MAAAA,CACUA,MAAM,CAANA,IAAAA,CADVA,aACUA,CADVA;AAAAA,EAAAA,OAAAA,CAEW,CAAA,WAAA,KAAe;AACtB,QAAIH,aAAa,CAAbA,WAAa,CAAbA,KAAJ,SAAA,EAA8C;AAC5CV,MAAAA,QAAQ,CAARA,WAAQ,CAARA,GAAwBW,eAAe,CAAvCX,WAAuC,CAAvCA;AADF,KAAA,MAEO;AACLA,MAAAA,QAAQ,CAARA,WAAQ,CAARA,GAAwBU,aAAa,CAArCV,WAAqC,CAArCA;AACD;AAPLa,GAAAA;;AAUA,SAAA,QAAA;AACD;;AAED,MAAMC,eAAe,GAAG,EAAE,GAA1B,QAAwB,EAAxB;AACAD,MAAM,CAANA,IAAAA,CAAAA,QAAAA,EAAAA,OAAAA,CAA8B,CAAA,CAAA,KAAK;AACjCC,EAAAA,eAAe,CAAfA,CAAe,CAAfA,CAAAA,KAAAA,GAA2BC,QAAQ,CAARA,CAAQ,CAARA,CAA3BD,OAAAA;AADFD,CAAAA;;AAIA,MAAMG,YAAY,GAAG;AACnBD,EAAAA,QAAQ,EADW,eAAA;AAEnBE,EAAAA,SAAS,EAAEL,uBAAuB,CAFpC,eAEoC,CAFf,EAArB;;;AAKA,SAAA,eAAA,EAAA,YAAA,G,iLAxESb,wB,gIAUOE,gB,wHA8BAO,oB,4HAsBVM,e,uHAKAE,Y,wjBAnEN,wB,gIAUO,gB,wHA8BA,oB,4HAsBDF,e,uHAKAE,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getAllControlsState, getFormDataFromControls } from './controlUtils';\nimport { controls } from './controls';\n\nfunction handleDeprecatedControls(formData) {\n  // Reacffectation / handling of deprecated controls\n  /* eslint-disable no-param-reassign */\n\n  // y_axis_zero was a boolean forcing 0 to be part of the Y Axis\n  if (formData.y_axis_zero) {\n    formData.y_axis_bounds = [0, null];\n  }\n}\n\nexport function getControlsState(state, inputFormData) {\n  /*\n   * Gets a new controls object to put in the state. The controls object\n   * is similar to the configuration control with only the controls\n   * related to the current viz_type, materializes mapStateToProps functions,\n   * adds value keys coming from inputFormData passed here. This can't be an action creator\n   * just yet because it's used in both the explore and dashboard views.\n   * */\n  // Getting a list of active control names for the current viz\n  const formData = { ...inputFormData };\n  const vizType =\n    formData.viz_type || state.common.conf.DEFAULT_VIZ_TYPE || 'table';\n\n  handleDeprecatedControls(formData);\n\n  const controlsState = getAllControlsState(\n    vizType,\n    state.datasource.type,\n    state,\n    formData,\n  );\n\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  if (controlPanelConfig.onInit) {\n    return controlPanelConfig.onInit(controlsState);\n  }\n\n  return controlsState;\n}\n\nexport function applyDefaultFormData(inputFormData) {\n  const datasourceType = inputFormData.datasource.split('__')[1];\n  const vizType = inputFormData.viz_type;\n  const controlsState = getAllControlsState(vizType, datasourceType, null, {\n    ...inputFormData,\n  });\n  const controlFormData = getFormDataFromControls(controlsState);\n\n  const formData = {};\n  Object.keys(controlsState)\n    .concat(Object.keys(inputFormData))\n    .forEach(controlName => {\n      if (inputFormData[controlName] === undefined) {\n        formData[controlName] = controlFormData[controlName];\n      } else {\n        formData[controlName] = inputFormData[controlName];\n      }\n    });\n\n  return formData;\n}\n\nconst defaultControls = { ...controls };\nObject.keys(controls).forEach(f => {\n  defaultControls[f].value = controls[f].default;\n});\n\nconst defaultState = {\n  controls: defaultControls,\n  form_data: getFormDataFromControls(defaultControls),\n};\n\nexport { defaultControls, defaultState };\n"]},"metadata":{},"sourceType":"module"}