{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'src/components/Button';\nimport { t, styled, css } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\nimport Icons from 'src/components/Icons';\nimport TableSelector from 'src/components/TableSelector';\nimport { IconTooltip } from 'src/components/IconTooltip';\nimport TableElement from '../TableElement';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  queryEditor: PropTypes.object.isRequired,\n  height: PropTypes.number,\n  tables: PropTypes.array,\n  actions: PropTypes.object,\n  database: PropTypes.object,\n  offline: PropTypes.bool };\n\n\nconst defaultProps = {\n  actions: {},\n  height: 500,\n  offline: false,\n  tables: [] };\n\n\nconst StyledScrollbarContainer = styled.div`\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\nconst StyledScrollbarContent = styled.div`\n  height: ${(props) => props.contentHeight}px;\n`;\n\nexport default class SqlEditorLeftBar extends React.PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    renderExpandIconWithTooltip = ({ isActive }) =>\n    ___EmotionJSX(IconTooltip, {\n      css: css`\n        transform: rotate(90deg);\n      `,\n      \"aria-label\": \"Collapse\",\n      tooltip: t(`${isActive ? 'Collapse' : 'Expand'} table preview`), __self: this, __source: { fileName: _jsxFileName, lineNumber: 146, columnNumber: 5 } },\n\n    ___EmotionJSX(Icons.RightOutlined, {\n      iconSize: \"s\",\n      css: css`\n          transform: ${isActive ? 'rotateY(180deg)' : ''};\n        `, __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 7 } }));this.resetState = this.resetState.bind(this);this.onSchemaChange = this.onSchemaChange.bind(this);this.onSchemasLoad = this.onSchemasLoad.bind(this);this.onTablesLoad = this.onTablesLoad.bind(this);this.onDbChange = this.onDbChange.bind(this);this.getDbList = this.getDbList.bind(this);this.onTableChange = this.onTableChange.bind(this);this.onToggleTable = this.onToggleTable.bind(this);}onSchemaChange(schema) {this.props.actions.queryEditorSetSchema(this.props.queryEditor, schema);}onSchemasLoad(schemas) {this.props.actions.queryEditorSetSchemaOptions(this.props.queryEditor, schemas);}onTablesLoad(tables) {this.props.actions.queryEditorSetTableOptions(this.props.queryEditor, tables);}onDbChange(db) {this.props.actions.queryEditorSetDb(this.props.queryEditor, db.id);this.props.actions.queryEditorSetFunctionNames(this.props.queryEditor, db.id);}onTableChange(tableName, schemaName) {if (tableName && schemaName) {this.props.actions.addTable(this.props.queryEditor, tableName, schemaName);}}onToggleTable(tables) {this.props.tables.forEach((table) => {if (!tables.includes(table.id.toString()) && table.expanded) {this.props.actions.collapseTable(table);} else if (tables.includes(table.id.toString()) && !table.expanded) {this.props.actions.expandTable(table);}});}getDbList(dbs) {this.props.actions.setDatabases(dbs);}dbMutator(data) {const options = data.result.map((db) => ({ value: db.id, label: db.database_name }));this.props.actions.setDatabases(data.result);if (data.result.length === 0) {this.props.actions.addDangerToast(t(\"It seems you don't have access to any database\"));}return options;}resetState() {this.props.actions.resetState();}changeTable(tableOpt) {if (!tableOpt) {return;}const schemaName = tableOpt.value.schema;const tableName = tableOpt.value.table;this.props.actions.queryEditorSetSchema(this.props.queryEditor, schemaName);this.props.actions.addTable(this.props.queryEditor, tableName, schemaName);}\n\n\n\n\n  render() {\n    const shouldShowReset = window.location.search === '?reset=1';\n    const tableMetaDataHeight = this.props.height - 130; // 130 is the height of the selects above\n    const qe = this.props.queryEditor;\n    return (\n      ___EmotionJSX(\"div\", { className: \"SqlEditorLeftBar\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 167, columnNumber: 7 } },\n      ___EmotionJSX(TableSelector, {\n        database: this.props.database,\n        dbId: qe.dbId,\n        getDbList: this.getDbList,\n        handleError: this.props.actions.addDangerToast,\n        onDbChange: this.onDbChange,\n        onSchemaChange: this.onSchemaChange,\n        onSchemasLoad: this.onSchemasLoad,\n        onTableChange: this.onTableChange,\n        onTablesLoad: this.onTablesLoad,\n        schema: qe.schema,\n        sqlLabMode: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 168, columnNumber: 9 } }),\n\n      ___EmotionJSX(\"div\", { className: \"divider\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 181, columnNumber: 9 } }),\n      ___EmotionJSX(StyledScrollbarContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 9 } },\n      ___EmotionJSX(StyledScrollbarContent, { contentHeight: tableMetaDataHeight, __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 11 } },\n      ___EmotionJSX(Collapse, {\n        activeKey: this.props.tables.\n        filter(({ expanded }) => expanded).\n        map(({ id }) => id),\n        css: (theme) => css`\n                .ant-collapse-item {\n                  margin-bottom: ${theme.gridUnit * 3}px;\n                }\n                .ant-collapse-header {\n                  padding: 0px !important;\n                  display: flex;\n                  align-items: center;\n                }\n                .ant-collapse-content-box {\n                  padding: 0px ${theme.gridUnit * 4}px 0px 0px !important;\n                }\n                .ant-collapse-arrow {\n                  top: ${theme.gridUnit * 2}px !important;\n                  color: ${theme.colors.primary.dark1} !important;\n                  &: hover {\n                    color: ${theme.colors.primary.dark2} !important;\n                  }\n                }\n              `,\n        expandIconPosition: \"right\",\n        ghost: true,\n        onChange: this.onToggleTable,\n        expandIcon: this.renderExpandIconWithTooltip, __self: this, __source: { fileName: _jsxFileName, lineNumber: 184, columnNumber: 13 } },\n\n      this.props.tables.map((table) =>\n      ___EmotionJSX(TableElement, {\n        table: table,\n        key: table.id,\n        actions: this.props.actions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 214, columnNumber: 17 } }))))),\n\n\n\n\n\n      shouldShowReset &&\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        buttonStyle: \"danger\",\n        onClick: this.resetState, __self: this, __source: { fileName: _jsxFileName, lineNumber: 224, columnNumber: 11 } },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-bomb\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 229, columnNumber: 13 } }), \" \", t('Reset state'))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSqlEditorLeftBar.propTypes = propTypes;\nSqlEditorLeftBar.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\");reactHotLoader.register(StyledScrollbarContainer, \"StyledScrollbarContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\");reactHotLoader.register(StyledScrollbarContent, \"StyledScrollbarContent\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\");reactHotLoader.register(SqlEditorLeftBar, \"SqlEditorLeftBar\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.jsx"],"names":["React","PropTypes","Button","t","styled","css","Collapse","Icons","TableSelector","IconTooltip","TableElement","propTypes","queryEditor","object","isRequired","height","number","tables","array","actions","database","offline","bool","defaultProps","StyledScrollbarContainer","div","StyledScrollbarContent","props","contentHeight","SqlEditorLeftBar","PureComponent","constructor","renderExpandIconWithTooltip","isActive","resetState","bind","onSchemaChange","onSchemasLoad","onTablesLoad","onDbChange","getDbList","onTableChange","onToggleTable","schema","queryEditorSetSchema","schemas","queryEditorSetSchemaOptions","queryEditorSetTableOptions","db","queryEditorSetDb","id","queryEditorSetFunctionNames","tableName","schemaName","addTable","forEach","table","includes","toString","expanded","collapseTable","expandTable","dbs","setDatabases","dbMutator","data","options","result","map","value","label","database_name","length","addDangerToast","changeTable","tableOpt","render","shouldShowReset","window","location","search","tableMetaDataHeight","qe","dbId","filter","theme","gridUnit","colors","primary","dark1","dark2"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'src/components/Button';\nimport { t, styled, css } from '@superset-ui/core';\nimport Collapse from 'src/components/Collapse';\nimport Icons from 'src/components/Icons';\nimport TableSelector from 'src/components/TableSelector';\nimport { IconTooltip } from 'src/components/IconTooltip';\nimport TableElement from '../TableElement';\n\nconst propTypes = {\n  queryEditor: PropTypes.object.isRequired,\n  height: PropTypes.number,\n  tables: PropTypes.array,\n  actions: PropTypes.object,\n  database: PropTypes.object,\n  offline: PropTypes.bool,\n};\n\nconst defaultProps = {\n  actions: {},\n  height: 500,\n  offline: false,\n  tables: [],\n};\n\nconst StyledScrollbarContainer = styled.div`\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\nconst StyledScrollbarContent = styled.div`\n  height: ${props => props.contentHeight}px;\n`;\n\nexport default class SqlEditorLeftBar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.resetState = this.resetState.bind(this);\n    this.onSchemaChange = this.onSchemaChange.bind(this);\n    this.onSchemasLoad = this.onSchemasLoad.bind(this);\n    this.onTablesLoad = this.onTablesLoad.bind(this);\n    this.onDbChange = this.onDbChange.bind(this);\n    this.getDbList = this.getDbList.bind(this);\n    this.onTableChange = this.onTableChange.bind(this);\n    this.onToggleTable = this.onToggleTable.bind(this);\n  }\n\n  onSchemaChange(schema) {\n    this.props.actions.queryEditorSetSchema(this.props.queryEditor, schema);\n  }\n\n  onSchemasLoad(schemas) {\n    this.props.actions.queryEditorSetSchemaOptions(\n      this.props.queryEditor,\n      schemas,\n    );\n  }\n\n  onTablesLoad(tables) {\n    this.props.actions.queryEditorSetTableOptions(\n      this.props.queryEditor,\n      tables,\n    );\n  }\n\n  onDbChange(db) {\n    this.props.actions.queryEditorSetDb(this.props.queryEditor, db.id);\n    this.props.actions.queryEditorSetFunctionNames(\n      this.props.queryEditor,\n      db.id,\n    );\n  }\n\n  onTableChange(tableName, schemaName) {\n    if (tableName && schemaName) {\n      this.props.actions.addTable(\n        this.props.queryEditor,\n        tableName,\n        schemaName,\n      );\n    }\n  }\n\n  onToggleTable(tables) {\n    this.props.tables.forEach(table => {\n      if (!tables.includes(table.id.toString()) && table.expanded) {\n        this.props.actions.collapseTable(table);\n      } else if (tables.includes(table.id.toString()) && !table.expanded) {\n        this.props.actions.expandTable(table);\n      }\n    });\n  }\n\n  getDbList(dbs) {\n    this.props.actions.setDatabases(dbs);\n  }\n\n  dbMutator(data) {\n    const options = data.result.map(db => ({\n      value: db.id,\n      label: db.database_name,\n    }));\n    this.props.actions.setDatabases(data.result);\n    if (data.result.length === 0) {\n      this.props.actions.addDangerToast(\n        t(\"It seems you don't have access to any database\"),\n      );\n    }\n    return options;\n  }\n\n  resetState() {\n    this.props.actions.resetState();\n  }\n\n  changeTable(tableOpt) {\n    if (!tableOpt) {\n      return;\n    }\n    const schemaName = tableOpt.value.schema;\n    const tableName = tableOpt.value.table;\n    this.props.actions.queryEditorSetSchema(this.props.queryEditor, schemaName);\n    this.props.actions.addTable(this.props.queryEditor, tableName, schemaName);\n  }\n\n  renderExpandIconWithTooltip = ({ isActive }) => (\n    <IconTooltip\n      css={css`\n        transform: rotate(90deg);\n      `}\n      aria-label=\"Collapse\"\n      tooltip={t(`${isActive ? 'Collapse' : 'Expand'} table preview`)}\n    >\n      <Icons.RightOutlined\n        iconSize=\"s\"\n        css={css`\n          transform: ${isActive ? 'rotateY(180deg)' : ''};\n        `}\n      />\n    </IconTooltip>\n  );\n\n  render() {\n    const shouldShowReset = window.location.search === '?reset=1';\n    const tableMetaDataHeight = this.props.height - 130; // 130 is the height of the selects above\n    const qe = this.props.queryEditor;\n    return (\n      <div className=\"SqlEditorLeftBar\">\n        <TableSelector\n          database={this.props.database}\n          dbId={qe.dbId}\n          getDbList={this.getDbList}\n          handleError={this.props.actions.addDangerToast}\n          onDbChange={this.onDbChange}\n          onSchemaChange={this.onSchemaChange}\n          onSchemasLoad={this.onSchemasLoad}\n          onTableChange={this.onTableChange}\n          onTablesLoad={this.onTablesLoad}\n          schema={qe.schema}\n          sqlLabMode\n        />\n        <div className=\"divider\" />\n        <StyledScrollbarContainer>\n          <StyledScrollbarContent contentHeight={tableMetaDataHeight}>\n            <Collapse\n              activeKey={this.props.tables\n                .filter(({ expanded }) => expanded)\n                .map(({ id }) => id)}\n              css={theme => css`\n                .ant-collapse-item {\n                  margin-bottom: ${theme.gridUnit * 3}px;\n                }\n                .ant-collapse-header {\n                  padding: 0px !important;\n                  display: flex;\n                  align-items: center;\n                }\n                .ant-collapse-content-box {\n                  padding: 0px ${theme.gridUnit * 4}px 0px 0px !important;\n                }\n                .ant-collapse-arrow {\n                  top: ${theme.gridUnit * 2}px !important;\n                  color: ${theme.colors.primary.dark1} !important;\n                  &: hover {\n                    color: ${theme.colors.primary.dark2} !important;\n                  }\n                }\n              `}\n              expandIconPosition=\"right\"\n              ghost\n              onChange={this.onToggleTable}\n              expandIcon={this.renderExpandIconWithTooltip}\n            >\n              {this.props.tables.map(table => (\n                <TableElement\n                  table={table}\n                  key={table.id}\n                  actions={this.props.actions}\n                />\n              ))}\n            </Collapse>\n          </StyledScrollbarContent>\n        </StyledScrollbarContainer>\n        {shouldShowReset && (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"danger\"\n            onClick={this.resetState}\n          >\n            <i className=\"fa fa-bomb\" /> {t('Reset state')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nSqlEditorLeftBar.propTypes = propTypes;\nSqlEditorLeftBar.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}