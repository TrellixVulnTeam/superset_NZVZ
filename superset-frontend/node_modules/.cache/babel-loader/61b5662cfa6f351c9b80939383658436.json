{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useReducer } from 'react';\nimport { t } from '@superset-ui/core';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { addReport, editReport } from 'src/reports/actions/reports';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport LabeledErrorBoundInput from 'src/components/Form/LabeledErrorBoundInput';\nimport Icons from 'src/components/Icons';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { StyledModal, StyledTopSection, StyledBottomSection, StyledIconWrapper, StyledScheduleTitle, StyledCronPicker, StyledCronError, noBottomMargin, StyledFooterButton, TimezoneHeaderStyle, SectionHeaderStyle, StyledMessageContentTitle, StyledRadio, StyledRadioGroup } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar ActionType;\n(function (ActionType) {\n  ActionType[ActionType[\"inputChange\"] = 0] = \"inputChange\";\n  ActionType[ActionType[\"fetched\"] = 1] = \"fetched\";\n  ActionType[ActionType[\"reset\"] = 2] = \"reset\";\n})(ActionType || (ActionType = {}));\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n'pivot_table',\n'pivot_table_v2',\n'table',\n'paired_ttest'];\n\nconst NOTIFICATION_FORMATS = {\n  TEXT: 'TEXT',\n  PNG: 'PNG',\n  CSV: 'CSV' };\n\nconst reportReducer = (state, action) => {\n  const initialState = {\n    name: 'Weekly Report' };\n\n  switch (action.type) {\n    case ActionType.inputChange:\n      return {\n        ...initialState,\n        ...state,\n        [action.payload.name]: action.payload.value };\n\n    case ActionType.fetched:\n      return {\n        ...initialState,\n        ...action.payload };\n\n    case ActionType.reset:\n      return { ...initialState };\n    default:\n      return state;}\n\n};\nconst ReportModal = ({ onReportAdd, onHide, show = false, ...props }) => {var _props$props$chart, _props$props$chart$sl;\n  const vizType = (_props$props$chart = props.props.chart) == null ? void 0 : (_props$props$chart$sl = _props$props$chart.sliceFormData) == null ? void 0 : _props$props$chart$sl.viz_type;\n  const isChart = !!props.props.chart;\n  const defaultNotificationFormat = isChart && TEXT_BASED_VISUALIZATION_TYPES.includes(vizType) ?\n  NOTIFICATION_FORMATS.TEXT :\n  NOTIFICATION_FORMATS.PNG;\n  const [currentReport, setCurrentReport] = useReducer(reportReducer, null);\n  const onChange = useCallback((type, payload) => {\n    setCurrentReport({ type, payload });\n  }, []);\n  const [error, setError] = useState();\n  // const [isLoading, setLoading] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  // Report fetch logic\n  const reports = useSelector((state) => state.reports);\n  const isEditMode = reports && Object.keys(reports).length;\n  useEffect(() => {\n    if (isEditMode) {\n      const reportsIds = Object.keys(reports);\n      const report = reports[reportsIds[0]];\n      setCurrentReport({\n        type: ActionType.fetched,\n        payload: report });\n\n    } else\n    {\n      setCurrentReport({\n        type: ActionType.reset });\n\n    }\n  }, [reports]);\n  const onClose = () => {\n    onHide();\n  };\n  const onSave = async () => {var _props$props$chart2;\n    // Create new Report\n    const newReportValues = {\n      crontab: currentReport == null ? void 0 : currentReport.crontab,\n      dashboard: props.props.dashboardId,\n      chart: (_props$props$chart2 = props.props.chart) == null ? void 0 : _props$props$chart2.id,\n      description: currentReport == null ? void 0 : currentReport.description,\n      name: currentReport == null ? void 0 : currentReport.name,\n      owners: [props.props.userId],\n      recipients: [\n      {\n        recipient_config_json: { target: props.props.userEmail },\n        type: 'Email' }],\n\n\n      type: 'Report',\n      creation_method: props.props.creationMethod,\n      active: true,\n      report_format: (currentReport == null ? void 0 : currentReport.report_format) || defaultNotificationFormat,\n      timezone: currentReport == null ? void 0 : currentReport.timezone };\n\n    if (isEditMode) {\n      await dispatch(editReport(currentReport == null ? void 0 : currentReport.id, newReportValues));\n    } else\n    {\n      await dispatch(addReport(newReportValues));\n    }\n    if (onReportAdd) {\n      onReportAdd();\n    }\n    onClose();\n  };\n  const wrappedTitle = ___EmotionJSX(StyledIconWrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 134, columnNumber: 27 } },\n  ___EmotionJSX(Icons.Calendar, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 135, columnNumber: 7 } }),\n  ___EmotionJSX(\"span\", { className: \"text\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 136, columnNumber: 7 } },\n  isEditMode ? t('Edit Email Report') : t('New Email Report')));\n\n\n  const renderModalFooter = ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledFooterButton, { key: \"back\", onClick: onClose, __self: this, __source: { fileName: _jsxFileName, lineNumber: 141, columnNumber: 7 } },\n  t('Cancel')),\n\n  ___EmotionJSX(StyledFooterButton, { key: \"submit\", buttonStyle: \"primary\", onClick: onSave, disabled: !(currentReport != null && currentReport.name), __self: this, __source: { fileName: _jsxFileName, lineNumber: 144, columnNumber: 7 } },\n  isEditMode ? t('Save') : t('Add')));\n\n\n  const renderMessageContentSection = ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledMessageContentTitle, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 149, columnNumber: 7 } },\n  ___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 150, columnNumber: 9 } }, t('Message Content'))),\n\n  ___EmotionJSX(\"div\", { className: \"inline-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 152, columnNumber: 7 } },\n  ___EmotionJSX(StyledRadioGroup, { onChange: (event) => {\n      onChange(ActionType.inputChange, {\n        name: 'report_format',\n        value: event.target.value });\n\n    }, value: (currentReport == null ? void 0 : currentReport.report_format) || defaultNotificationFormat, __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 9 } },\n  TEXT_BASED_VISUALIZATION_TYPES.includes(vizType) && ___EmotionJSX(StyledRadio, { value: NOTIFICATION_FORMATS.TEXT, __self: this, __source: { fileName: _jsxFileName, lineNumber: 159, columnNumber: 65 } },\n  t('Text embedded in email')),\n\n  ___EmotionJSX(StyledRadio, { value: NOTIFICATION_FORMATS.PNG, __self: this, __source: { fileName: _jsxFileName, lineNumber: 162, columnNumber: 11 } },\n  t('Image (PNG) embedded in email')),\n\n  ___EmotionJSX(StyledRadio, { value: NOTIFICATION_FORMATS.CSV, __self: this, __source: { fileName: _jsxFileName, lineNumber: 165, columnNumber: 11 } },\n  t('Formatted CSV attached in email')))));\n\n\n\n\n  return ___EmotionJSX(StyledModal, { show: show, onHide: onClose, title: wrappedTitle, footer: renderModalFooter, width: \"432\", centered: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 171, columnNumber: 13 } },\n  ___EmotionJSX(StyledTopSection, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 172, columnNumber: 7 } },\n  ___EmotionJSX(LabeledErrorBoundInput, { id: \"name\", name: \"name\", value: (currentReport == null ? void 0 : currentReport.name) || '', placeholder: \"Weekly Report\", required: true, validationMethods: {\n      onChange: ({ target }) => onChange(ActionType.inputChange, {\n        name: target.name,\n        value: target.value }) },\n\n    errorMessage: (currentReport == null ? void 0 : currentReport.name) === 'error' ? t('REPORT NAME ERROR') : '', label: \"Report Name\", \"data-test\": \"report-name-test\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 9 } }),\n\n  ___EmotionJSX(LabeledErrorBoundInput, { id: \"description\", name: \"description\", value: (currentReport == null ? void 0 : currentReport.description) || '', validationMethods: {\n      onChange: ({ target }) => onChange(ActionType.inputChange, {\n        name: target.name,\n        value: target.value }) },\n\n    errorMessage: (currentReport == null ? void 0 : currentReport.description) === 'error' ? t('DESCRIPTION ERROR') : '', label: \"Description\", placeholder: \"Include a description that will be sent with your report\", css: noBottomMargin, \"data-test\": \"report-description-test\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 180, columnNumber: 9 } })),\n\n\n  ___EmotionJSX(StyledBottomSection, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 188, columnNumber: 7 } },\n  ___EmotionJSX(StyledScheduleTitle, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 189, columnNumber: 9 } },\n  ___EmotionJSX(\"h4\", { css: (theme) => SectionHeaderStyle(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 190, columnNumber: 11 } },\n  t('Schedule')),\n\n  ___EmotionJSX(\"p\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 193, columnNumber: 11 } }, t('Scheduled reports will be sent to your email as a PNG'))),\n\n\n  ___EmotionJSX(StyledCronPicker, { clearButton: false, value: (currentReport == null ? void 0 : currentReport.crontab) || '0 12 * * 1', setValue: (newValue) => {\n      onChange(ActionType.inputChange, {\n        name: 'crontab',\n        value: newValue });\n\n    }, onError: setError, __self: this, __source: { fileName: _jsxFileName, lineNumber: 196, columnNumber: 9 } }),\n  ___EmotionJSX(StyledCronError, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 202, columnNumber: 9 } }, error),\n  ___EmotionJSX(\"div\", { className: \"control-label\", css: (theme) => TimezoneHeaderStyle(theme), __self: this, __source: { fileName: _jsxFileName, lineNumber: 203, columnNumber: 9 } },\n  t('Timezone')),\n\n  ___EmotionJSX(TimezoneSelector, { onTimezoneChange: (value) => {\n      setCurrentReport({\n        type: ActionType.inputChange,\n        payload: { name: 'timezone', value } });\n\n    }, timezone: currentReport == null ? void 0 : currentReport.timezone, __self: this, __source: { fileName: _jsxFileName, lineNumber: 206, columnNumber: 9 } }),\n  isChart && renderMessageContentSection));\n\n\n};__signature__(ReportModal, \"useReducer{[currentReport, setCurrentReport](null)}\\nuseCallback{onChange}\\nuseState{[error, setError]}\\nuseDispatch{dispatch}\\nuseSelector{reports}\\nuseEffect{}\", () => [useDispatch, useSelector]);\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ addReport, editReport }, dispatch);const _default =\nconnect(null, mapDispatchToProps)(withToasts(ReportModal));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ActionType, \"ActionType\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(TEXT_BASED_VISUALIZATION_TYPES, \"TEXT_BASED_VISUALIZATION_TYPES\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(NOTIFICATION_FORMATS, \"NOTIFICATION_FORMATS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(reportReducer, \"reportReducer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(ReportModal, \"ReportModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ReportModal/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useEffect,\n  useCallback,\n  useReducer,\n  Reducer,\n  FunctionComponent,\n} from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport { bindActionCreators } from 'redux';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { addReport, editReport } from 'src/reports/actions/reports';\nimport { AlertObject } from 'src/views/CRUD/alert/types';\n\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport LabeledErrorBoundInput from 'src/components/Form/LabeledErrorBoundInput';\nimport Icons from 'src/components/Icons';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CronError } from 'src/components/CronPicker';\nimport { RadioChangeEvent } from 'src/common/components';\nimport {\n  StyledModal,\n  StyledTopSection,\n  StyledBottomSection,\n  StyledIconWrapper,\n  StyledScheduleTitle,\n  StyledCronPicker,\n  StyledCronError,\n  noBottomMargin,\n  StyledFooterButton,\n  TimezoneHeaderStyle,\n  SectionHeaderStyle,\n  StyledMessageContentTitle,\n  StyledRadio,\n  StyledRadioGroup,\n} from './styles';\n\nexport interface ReportObject {\n  id?: number;\n  active: boolean;\n  crontab: string;\n  dashboard?: number;\n  chart?: number;\n  description?: string;\n  log_retention: number;\n  name: string;\n  owners: number[];\n  recipients: [{ recipient_config_json: { target: string }; type: string }];\n  report_format: string;\n  timezone: string;\n  type: string;\n  validator_config_json: {} | null;\n  validator_type: string;\n  working_timeout: number;\n  creation_method: string;\n}\n\ninterface ChartObject {\n  id: number;\n  chartAlert: string;\n  chartStatus: string;\n  chartUpdateEndTime: number;\n  chartUpdateStartTime: number;\n  latestQueryFormData: object;\n  queryController: { abort: () => {} };\n  queriesResponse: object;\n  triggerQuery: boolean;\n  lastRendered: number;\n}\n\ninterface ReportProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  addReport: (report?: ReportObject) => {};\n  onHide: () => {};\n  onReportAdd: (report?: ReportObject) => {};\n  show: boolean;\n  userId: number;\n  userEmail: string;\n  dashboardId?: number;\n  chart?: ChartObject;\n  creationMethod: string;\n  props: any;\n}\n\ninterface ReportPayloadType {\n  name: string;\n  value: string;\n}\n\nenum ActionType {\n  inputChange,\n  fetched,\n  reset,\n}\n\ntype ReportActionType =\n  | {\n      type: ActionType.inputChange;\n      payload: ReportPayloadType;\n    }\n  | {\n      type: ActionType.fetched;\n      payload: Partial<ReportObject>;\n    }\n  | {\n      type: ActionType.reset;\n    };\n\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  'pivot_table',\n  'pivot_table_v2',\n  'table',\n  'paired_ttest',\n];\n\nconst NOTIFICATION_FORMATS = {\n  TEXT: 'TEXT',\n  PNG: 'PNG',\n  CSV: 'CSV',\n};\n\nconst reportReducer = (\n  state: Partial<ReportObject> | null,\n  action: ReportActionType,\n): Partial<ReportObject> | null => {\n  const initialState = {\n    name: 'Weekly Report',\n  };\n\n  switch (action.type) {\n    case ActionType.inputChange:\n      return {\n        ...initialState,\n        ...state,\n        [action.payload.name]: action.payload.value,\n      };\n    case ActionType.fetched:\n      return {\n        ...initialState,\n        ...action.payload,\n      };\n    case ActionType.reset:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n\nconst ReportModal: FunctionComponent<ReportProps> = ({\n  onReportAdd,\n  onHide,\n  show = false,\n  ...props\n}) => {\n  const vizType = props.props.chart?.sliceFormData?.viz_type;\n  const isChart = !!props.props.chart;\n  const defaultNotificationFormat =\n    isChart && TEXT_BASED_VISUALIZATION_TYPES.includes(vizType)\n      ? NOTIFICATION_FORMATS.TEXT\n      : NOTIFICATION_FORMATS.PNG;\n  const [currentReport, setCurrentReport] = useReducer<\n    Reducer<Partial<ReportObject> | null, ReportActionType>\n  >(reportReducer, null);\n  const onChange = useCallback((type: any, payload: any) => {\n    setCurrentReport({ type, payload });\n  }, []);\n  const [error, setError] = useState<CronError>();\n  // const [isLoading, setLoading] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  // Report fetch logic\n  const reports = useSelector<any, AlertObject>(state => state.reports);\n  const isEditMode = reports && Object.keys(reports).length;\n\n  useEffect(() => {\n    if (isEditMode) {\n      const reportsIds = Object.keys(reports);\n      const report = reports[reportsIds[0]];\n      setCurrentReport({\n        type: ActionType.fetched,\n        payload: report,\n      });\n    } else {\n      setCurrentReport({\n        type: ActionType.reset,\n      });\n    }\n  }, [reports]);\n  const onClose = () => {\n    onHide();\n  };\n  const onSave = async () => {\n    // Create new Report\n    const newReportValues: Partial<ReportObject> = {\n      crontab: currentReport?.crontab,\n      dashboard: props.props.dashboardId,\n      chart: props.props.chart?.id,\n      description: currentReport?.description,\n      name: currentReport?.name,\n      owners: [props.props.userId],\n      recipients: [\n        {\n          recipient_config_json: { target: props.props.userEmail },\n          type: 'Email',\n        },\n      ],\n      type: 'Report',\n      creation_method: props.props.creationMethod,\n      active: true,\n      report_format: currentReport?.report_format || defaultNotificationFormat,\n      timezone: currentReport?.timezone,\n    };\n\n    if (isEditMode) {\n      await dispatch(\n        editReport(currentReport?.id, newReportValues as ReportObject),\n      );\n    } else {\n      await dispatch(addReport(newReportValues as ReportObject));\n    }\n\n    if (onReportAdd) {\n      onReportAdd();\n    }\n\n    onClose();\n  };\n\n  const wrappedTitle = (\n    <StyledIconWrapper>\n      <Icons.Calendar />\n      <span className=\"text\">\n        {isEditMode ? t('Edit Email Report') : t('New Email Report')}\n      </span>\n    </StyledIconWrapper>\n  );\n\n  const renderModalFooter = (\n    <>\n      <StyledFooterButton key=\"back\" onClick={onClose}>\n        {t('Cancel')}\n      </StyledFooterButton>\n      <StyledFooterButton\n        key=\"submit\"\n        buttonStyle=\"primary\"\n        onClick={onSave}\n        disabled={!currentReport?.name}\n      >\n        {isEditMode ? t('Save') : t('Add')}\n      </StyledFooterButton>\n    </>\n  );\n\n  const renderMessageContentSection = (\n    <>\n      <StyledMessageContentTitle>\n        <h4>{t('Message Content')}</h4>\n      </StyledMessageContentTitle>\n      <div className=\"inline-container\">\n        <StyledRadioGroup\n          onChange={(event: RadioChangeEvent) => {\n            onChange(ActionType.inputChange, {\n              name: 'report_format',\n              value: event.target.value,\n            });\n          }}\n          value={currentReport?.report_format || defaultNotificationFormat}\n        >\n          {TEXT_BASED_VISUALIZATION_TYPES.includes(vizType) && (\n            <StyledRadio value={NOTIFICATION_FORMATS.TEXT}>\n              {t('Text embedded in email')}\n            </StyledRadio>\n          )}\n          <StyledRadio value={NOTIFICATION_FORMATS.PNG}>\n            {t('Image (PNG) embedded in email')}\n          </StyledRadio>\n          <StyledRadio value={NOTIFICATION_FORMATS.CSV}>\n            {t('Formatted CSV attached in email')}\n          </StyledRadio>\n        </StyledRadioGroup>\n      </div>\n    </>\n  );\n\n  return (\n    <StyledModal\n      show={show}\n      onHide={onClose}\n      title={wrappedTitle}\n      footer={renderModalFooter}\n      width=\"432\"\n      centered\n    >\n      <StyledTopSection>\n        <LabeledErrorBoundInput\n          id=\"name\"\n          name=\"name\"\n          value={currentReport?.name || ''}\n          placeholder=\"Weekly Report\"\n          required\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) =>\n              onChange(ActionType.inputChange, {\n                name: target.name,\n                value: target.value,\n              }),\n          }}\n          errorMessage={\n            currentReport?.name === 'error' ? t('REPORT NAME ERROR') : ''\n          }\n          label=\"Report Name\"\n          data-test=\"report-name-test\"\n        />\n\n        <LabeledErrorBoundInput\n          id=\"description\"\n          name=\"description\"\n          value={currentReport?.description || ''}\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) =>\n              onChange(ActionType.inputChange, {\n                name: target.name,\n                value: target.value,\n              }),\n          }}\n          errorMessage={\n            currentReport?.description === 'error' ? t('DESCRIPTION ERROR') : ''\n          }\n          label=\"Description\"\n          placeholder=\"Include a description that will be sent with your report\"\n          css={noBottomMargin}\n          data-test=\"report-description-test\"\n        />\n      </StyledTopSection>\n\n      <StyledBottomSection>\n        <StyledScheduleTitle>\n          <h4 css={(theme: SupersetTheme) => SectionHeaderStyle(theme)}>\n            {t('Schedule')}\n          </h4>\n          <p>{t('Scheduled reports will be sent to your email as a PNG')}</p>\n        </StyledScheduleTitle>\n\n        <StyledCronPicker\n          clearButton={false}\n          value={currentReport?.crontab || '0 12 * * 1'}\n          setValue={(newValue: string) => {\n            onChange(ActionType.inputChange, {\n              name: 'crontab',\n              value: newValue,\n            });\n          }}\n          onError={setError}\n        />\n        <StyledCronError>{error}</StyledCronError>\n        <div\n          className=\"control-label\"\n          css={(theme: SupersetTheme) => TimezoneHeaderStyle(theme)}\n        >\n          {t('Timezone')}\n        </div>\n        <TimezoneSelector\n          onTimezoneChange={value => {\n            setCurrentReport({\n              type: ActionType.inputChange,\n              payload: { name: 'timezone', value },\n            });\n          }}\n          timezone={currentReport?.timezone}\n        />\n        {isChart && renderMessageContentSection}\n      </StyledBottomSection>\n    </StyledModal>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators({ addReport, editReport }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(withToasts(ReportModal));\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}