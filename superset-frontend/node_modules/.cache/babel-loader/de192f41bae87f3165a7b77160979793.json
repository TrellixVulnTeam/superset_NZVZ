{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport shortid from 'shortid';\nimport Button from 'src/components/Button';\nimport * as actions from 'src/SqlLab/actions/sqlLab';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  query: PropTypes.object,\n  errorMessage: PropTypes.string,\n  timeout: PropTypes.number,\n  database: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired };\n\nconst defaultProps = {\n  query: {} };\n\n\nclass ExploreResultsButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.getInvalidColumns = this.getInvalidColumns.bind(this);\n    this.renderInvalidColumnMessage = this.renderInvalidColumnMessage.bind(\n    this);\n\n  }\n\n  getColumns() {\n    const { props } = this;\n    if (\n    props.query &&\n    props.query.results &&\n    props.query.results.selected_columns)\n    {\n      return props.query.results.selected_columns;\n    }\n    return [];\n  }\n\n  getQueryDuration() {\n    return moment.\n    duration(this.props.query.endDttm - this.props.query.startDttm).\n    asSeconds();\n  }\n\n  getInvalidColumns() {\n    const re1 = /__\\d+$/; // duplicate column name pattern\n    const re2 = /^__timestamp/i; // reserved temporal column alias\n\n    return this.props.query.results.selected_columns.\n    map((col) => col.name).\n    filter((col) => re1.test(col) || re2.test(col));\n  }\n\n  datasourceName() {\n    const { query } = this.props;\n    const uniqueId = shortid.generate();\n    let datasourceName = uniqueId;\n    if (query) {\n      datasourceName = query.user ? `${query.user}-` : '';\n      datasourceName += `${query.tab}-${uniqueId}`;\n    }\n    return datasourceName;\n  }\n\n  buildVizOptions() {\n    const { schema, sql, dbId, templateParams } = this.props.query;\n    return {\n      dbId,\n      schema,\n      sql,\n      templateParams,\n      datasourceName: this.datasourceName(),\n      columns: this.getColumns() };\n\n  }\n\n  renderTimeoutWarning() {\n    return (\n      ___EmotionJSX(Alert, {\n        type: \"warning\",\n        message:\n        ___EmotionJSX(React.Fragment, null,\n        t(\n        'This query took %s seconds to run, ',\n        Math.round(this.getQueryDuration())) +\n\n        t(\n        'and the explore view times out at %s seconds ',\n        this.props.timeout) +\n\n        t(\n        'following this flow will most likely lead to your query timing out. ') +\n\n        t(\n        'We recommend your summarize your data further before following that flow. ') +\n\n        t('If activated you can use the '),\n        ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 13 } }, \"CREATE TABLE AS \"),\n        t(\n        'feature to store a summarized data set that you can then explore.')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 104, columnNumber: 7 } }));\n\n\n\n\n\n  }\n\n  renderInvalidColumnMessage() {\n    const invalidColumns = this.getInvalidColumns();\n    if (invalidColumns.length === 0) {\n      return null;\n    }\n    return (\n      ___EmotionJSX(\"div\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 139, columnNumber: 7 } },\n      t('Column name(s) '),\n      ___EmotionJSX(\"code\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 141, columnNumber: 9 } },\n      ___EmotionJSX(\"strong\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 142, columnNumber: 11 } }, invalidColumns.join(', '), \" \")),\n\n      t(`cannot be used as a column name. The column name/alias \"__timestamp\"\n          is reserved for the main temporal expression, and column aliases ending with\n          double underscores followed by a numeric value (e.g. \"my_col__1\") are reserved\n          for deduplicating duplicate column names. Please use aliases to rename the\n          invalid column names.`)));\n\n\n  }\n\n  render() {\n    const allowsSubquery =\n    this.props.database && this.props.database.allows_subquery;\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        onClick: this.props.onClick,\n        disabled: !allowsSubquery,\n        tooltip: t('Explore the result set in the data exploration view'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 158, columnNumber: 9 } },\n\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        icon: \"line-chart\",\n        placement: \"top\",\n        label: \"explore\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 164, columnNumber: 11 } }),\n      ' ',\n      t('Explore'))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ExploreResultsButton.propTypes = propTypes;\nExploreResultsButton.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common }) {\n  return {\n    errorMessage: sqlLab.errorMessage,\n    timeout: common.conf ? common.conf.SUPERSET_WEBSERVER_TIMEOUT : null };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nExploreResultsButton);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");reactHotLoader.register(ExploreResultsButton, \"ExploreResultsButton\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/ExploreResultsButton/index.jsx"],"names":["moment","React","PropTypes","bindActionCreators","connect","Alert","t","InfoTooltipWithTrigger","shortid","Button","actions","propTypes","object","isRequired","query","errorMessage","string","timeout","number","database","onClick","func","defaultProps","ExploreResultsButton","PureComponent","constructor","props","getInvalidColumns","bind","renderInvalidColumnMessage","getColumns","results","selected_columns","getQueryDuration","duration","endDttm","startDttm","asSeconds","re1","re2","map","col","name","filter","test","datasourceName","uniqueId","generate","user","tab","buildVizOptions","schema","sql","dbId","templateParams","columns","renderTimeoutWarning","Math","round","invalidColumns","length","join","render","allowsSubquery","allows_subquery","mapStateToProps","sqlLab","common","conf","SUPERSET_WEBSERVER_TIMEOUT","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport shortid from 'shortid';\nimport Button from 'src/components/Button';\nimport * as actions from 'src/SqlLab/actions/sqlLab';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  query: PropTypes.object,\n  errorMessage: PropTypes.string,\n  timeout: PropTypes.number,\n  database: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nconst defaultProps = {\n  query: {},\n};\n\nclass ExploreResultsButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.getInvalidColumns = this.getInvalidColumns.bind(this);\n    this.renderInvalidColumnMessage = this.renderInvalidColumnMessage.bind(\n      this,\n    );\n  }\n\n  getColumns() {\n    const { props } = this;\n    if (\n      props.query &&\n      props.query.results &&\n      props.query.results.selected_columns\n    ) {\n      return props.query.results.selected_columns;\n    }\n    return [];\n  }\n\n  getQueryDuration() {\n    return moment\n      .duration(this.props.query.endDttm - this.props.query.startDttm)\n      .asSeconds();\n  }\n\n  getInvalidColumns() {\n    const re1 = /__\\d+$/; // duplicate column name pattern\n    const re2 = /^__timestamp/i; // reserved temporal column alias\n\n    return this.props.query.results.selected_columns\n      .map(col => col.name)\n      .filter(col => re1.test(col) || re2.test(col));\n  }\n\n  datasourceName() {\n    const { query } = this.props;\n    const uniqueId = shortid.generate();\n    let datasourceName = uniqueId;\n    if (query) {\n      datasourceName = query.user ? `${query.user}-` : '';\n      datasourceName += `${query.tab}-${uniqueId}`;\n    }\n    return datasourceName;\n  }\n\n  buildVizOptions() {\n    const { schema, sql, dbId, templateParams } = this.props.query;\n    return {\n      dbId,\n      schema,\n      sql,\n      templateParams,\n      datasourceName: this.datasourceName(),\n      columns: this.getColumns(),\n    };\n  }\n\n  renderTimeoutWarning() {\n    return (\n      <Alert\n        type=\"warning\"\n        message={\n          <>\n            {t(\n              'This query took %s seconds to run, ',\n              Math.round(this.getQueryDuration()),\n            ) +\n              t(\n                'and the explore view times out at %s seconds ',\n                this.props.timeout,\n              ) +\n              t(\n                'following this flow will most likely lead to your query timing out. ',\n              ) +\n              t(\n                'We recommend your summarize your data further before following that flow. ',\n              ) +\n              t('If activated you can use the ')}\n            <strong>CREATE TABLE AS </strong>\n            {t(\n              'feature to store a summarized data set that you can then explore.',\n            )}\n          </>\n        }\n      />\n    );\n  }\n\n  renderInvalidColumnMessage() {\n    const invalidColumns = this.getInvalidColumns();\n    if (invalidColumns.length === 0) {\n      return null;\n    }\n    return (\n      <div>\n        {t('Column name(s) ')}\n        <code>\n          <strong>{invalidColumns.join(', ')} </strong>\n        </code>\n        {t(`cannot be used as a column name. The column name/alias \"__timestamp\"\n          is reserved for the main temporal expression, and column aliases ending with\n          double underscores followed by a numeric value (e.g. \"my_col__1\") are reserved\n          for deduplicating duplicate column names. Please use aliases to rename the\n          invalid column names.`)}\n      </div>\n    );\n  }\n\n  render() {\n    const allowsSubquery =\n      this.props.database && this.props.database.allows_subquery;\n    return (\n      <>\n        <Button\n          buttonSize=\"small\"\n          onClick={this.props.onClick}\n          disabled={!allowsSubquery}\n          tooltip={t('Explore the result set in the data exploration view')}\n        >\n          <InfoTooltipWithTrigger\n            icon=\"line-chart\"\n            placement=\"top\"\n            label=\"explore\"\n          />{' '}\n          {t('Explore')}\n        </Button>\n      </>\n    );\n  }\n}\nExploreResultsButton.propTypes = propTypes;\nExploreResultsButton.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common }) {\n  return {\n    errorMessage: sqlLab.errorMessage,\n    timeout: common.conf ? common.conf.SUPERSET_WEBSERVER_TIMEOUT : null,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExploreResultsButton);\n"]},"metadata":{},"sourceType":"module"}