{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Modal from 'src/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/components/MessageToasts/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\nconst DatasetModal = ({ addDangerToast, addSuccessToast, onDatasetAdd, onHide, show }) => {\n  const [currentDatabase, setCurrentDatabase] = useState();\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [disableSave, setDisableSave] = useState(true);\n  const { createResource } = useSingleViewResource('dataset', t('dataset'), addDangerToast);\n  useEffect(() => {\n    setDisableSave(currentDatabase === undefined || currentTableName === '');\n  }, [currentTableName, currentDatabase]);\n  const onDbChange = (db) => {\n    setCurrentDatabase(db);\n  };\n  const onSchemaChange = (schema) => {\n    setSchema(schema);\n  };\n  const onTableChange = (tableName) => {\n    setTableName(tableName);\n  };\n  const clearModal = () => {\n    setSchema('');\n    setTableName('');\n    setCurrentDatabase(undefined);\n    setDisableSave(true);\n  };\n  const hide = () => {\n    clearModal();\n    onHide();\n  };\n  const onSave = () => {\n    if (currentDatabase === undefined) {\n      return;\n    }\n    const data = {\n      database: currentDatabase.id,\n      ...(currentSchema ? { schema: currentSchema } : {}),\n      table_name: currentTableName };\n\n    createResource(data).then((response) => {\n      if (!response) {\n        return;\n      }\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: response.id, ...response });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      hide();\n    });\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: t('Add'), show: show, title: t('Add dataset'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 77, columnNumber: 13 } },\n  ___EmotionJSX(TableSelectorContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 78, columnNumber: 7 } },\n  ___EmotionJSX(TableSelector, { clearable: false, formMode: true, database: currentDatabase, schema: currentSchema, tableName: currentTableName, onDbChange: onDbChange, onSchemaChange: onSchemaChange, onTableChange: onTableChange, handleError: addDangerToast, __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 9 } })));\n\n\n};__signature__(DatasetModal, \"useState{[currentDatabase, setCurrentDatabase]}\\nuseState{[currentSchema, setSchema]('')}\\nuseState{[currentTableName, setTableName]('')}\\nuseState{[disableSave, setDisableSave](true)}\\nuseSingleViewResource{{ createResource }}\\nuseEffect{}\", () => [useSingleViewResource]);const _default =\nwithToasts(DatasetModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableSelectorContainer, \"TableSelectorContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(DatasetModal, \"DatasetModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Modal from 'src/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { DatabaseObject } from 'src/components/DatabaseSelector';\n\ntype DatasetAddObject = {\n  id: number;\n  database: number;\n  schema: string;\n  table_name: string;\n};\ninterface DatasetModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onDatasetAdd?: (dataset: DatasetAddObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\n\nconst DatasetModal: FunctionComponent<DatasetModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onDatasetAdd,\n  onHide,\n  show,\n}) => {\n  const [currentDatabase, setCurrentDatabase] = useState<\n    DatabaseObject | undefined\n  >();\n  const [currentSchema, setSchema] = useState<string | undefined>('');\n  const [currentTableName, setTableName] = useState('');\n  const [disableSave, setDisableSave] = useState(true);\n  const { createResource } = useSingleViewResource<Partial<DatasetAddObject>>(\n    'dataset',\n    t('dataset'),\n    addDangerToast,\n  );\n\n  useEffect(() => {\n    setDisableSave(currentDatabase === undefined || currentTableName === '');\n  }, [currentTableName, currentDatabase]);\n\n  const onDbChange = (db: DatabaseObject) => {\n    setCurrentDatabase(db);\n  };\n\n  const onSchemaChange = (schema?: string) => {\n    setSchema(schema);\n  };\n\n  const onTableChange = (tableName: string) => {\n    setTableName(tableName);\n  };\n\n  const clearModal = () => {\n    setSchema('');\n    setTableName('');\n    setCurrentDatabase(undefined);\n    setDisableSave(true);\n  };\n\n  const hide = () => {\n    clearModal();\n    onHide();\n  };\n\n  const onSave = () => {\n    if (currentDatabase === undefined) {\n      return;\n    }\n    const data = {\n      database: currentDatabase.id,\n      ...(currentSchema ? { schema: currentSchema } : {}),\n      table_name: currentTableName,\n    };\n    createResource(data).then(response => {\n      if (!response) {\n        return;\n      }\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: response.id, ...response });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      hide();\n    });\n  };\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={t('Add')}\n      show={show}\n      title={t('Add dataset')}\n    >\n      <TableSelectorContainer>\n        <TableSelector\n          clearable={false}\n          formMode\n          database={currentDatabase}\n          schema={currentSchema}\n          tableName={currentTableName}\n          onDbChange={onDbChange}\n          onSchemaChange={onSchemaChange}\n          onTableChange={onTableChange}\n          handleError={addDangerToast}\n        />\n      </TableSelectorContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(DatasetModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}