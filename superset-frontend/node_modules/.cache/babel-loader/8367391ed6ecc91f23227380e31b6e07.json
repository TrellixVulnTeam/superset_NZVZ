{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport Icons from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nclass Row extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false };\n\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateMeta = this.handleUpdateMeta.bind(this);\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n    this,\n    'background');\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue } } });\n\n\n\n    }\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, component, parentId } = this.props;\n    deleteComponent(component.id, parentId);\n  }\n\n  render() {\n    const {\n      component: rowComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      occupiedColumnCount,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible } =\n    this.props;\n\n    const rowItems = rowComponent.children || [];\n\n    const backgroundStyle = backgroundStyleOptions.find(\n    (opt) =>\n    opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT));\n\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: rowComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        editMode: editMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 124, columnNumber: 7 } },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(WithPopoverMenu, {\n        isFocused: this.state.isFocused,\n        onChangeFocus: this.handleChangeFocus,\n        disableClick: true,\n        menuItems: [\n        ___EmotionJSX(BackgroundStyleDropdown, {\n          id: `${rowComponent.id}-background`,\n          value: backgroundStyle.value,\n          onChange: this.handleChangeBackground, __self: this, __source: { fileName: _jsxFileName, lineNumber: 139, columnNumber: 15 } })],\n\n\n        editMode: editMode, __self: this, __source: { fileName: _jsxFileName, lineNumber: 134, columnNumber: 11 } },\n\n      editMode &&\n      ___EmotionJSX(HoverMenu, { innerRef: dragSourceRef, position: \"left\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 148, columnNumber: 15 } },\n      ___EmotionJSX(DragHandle, { position: \"left\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 149, columnNumber: 17 } }),\n      ___EmotionJSX(DeleteComponentButton, { onDelete: this.handleDeleteComponent, __self: this, __source: { fileName: _jsxFileName, lineNumber: 150, columnNumber: 17 } }),\n      ___EmotionJSX(IconButton, {\n        onClick: this.handleChangeFocus,\n        icon: ___EmotionJSX(Icons.Cog, { iconSize: \"xl\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 153, columnNumber: 25 } }), __self: this, __source: { fileName: _jsxFileName, lineNumber: 151, columnNumber: 17 } })),\n\n\n\n      ___EmotionJSX(\"div\", {\n        className: cx(\n        'grid-row',\n        rowItems.length === 0 && 'grid-row--empty',\n        backgroundStyle.className),\n\n        \"data-test\": `grid-row-${backgroundStyle.className}`, __self: this, __source: { fileName: _jsxFileName, lineNumber: 157, columnNumber: 13 } },\n\n      rowItems.map((componentId, itemIndex) =>\n      ___EmotionJSX(DashboardComponent, {\n        key: componentId,\n        id: componentId,\n        parentId: rowComponent.id,\n        depth: depth + 1,\n        index: itemIndex,\n        availableColumnCount:\n        availableColumnCount - occupiedColumnCount,\n\n        columnWidth: columnWidth,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        isComponentVisible: isComponentVisible,\n        onChangeTab: onChangeTab, __self: this, __source: { fileName: _jsxFileName, lineNumber: 166, columnNumber: 17 } })),\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", _extends({}, dropIndicatorProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 184, columnNumber: 38 } }))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nRow.propTypes = propTypes;const _default =\n\nRow;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(Row, \"Row\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx"],"names":["React","PropTypes","cx","DragDroppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","Icons","IconButton","BackgroundStyleDropdown","WithPopoverMenu","componentShape","backgroundStyleOptions","BACKGROUND_TRANSPARENT","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","occupiedColumnCount","onResizeStart","func","onResize","onResizeStop","handleComponentDrop","deleteComponent","updateComponents","Row","PureComponent","constructor","props","state","isFocused","handleDeleteComponent","bind","handleUpdateMeta","handleChangeBackground","handleChangeFocus","nextFocus","setState","Boolean","metaKey","nextValue","meta","render","rowComponent","onChangeTab","isComponentVisible","rowItems","children","backgroundStyle","find","opt","value","background","dropIndicatorProps","dragSourceRef","length","className","map","componentId","itemIndex"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport Icons from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nclass Row extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n    };\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateMeta = this.handleUpdateMeta.bind(this);\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n      this,\n      'background',\n    );\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue,\n          },\n        },\n      });\n    }\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, component, parentId } = this.props;\n    deleteComponent(component.id, parentId);\n  }\n\n  render() {\n    const {\n      component: rowComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      occupiedColumnCount,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible,\n    } = this.props;\n\n    const rowItems = rowComponent.children || [];\n\n    const backgroundStyle = backgroundStyleOptions.find(\n      opt =>\n        opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT),\n    );\n\n    return (\n      <DragDroppable\n        component={rowComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <WithPopoverMenu\n            isFocused={this.state.isFocused}\n            onChangeFocus={this.handleChangeFocus}\n            disableClick\n            menuItems={[\n              <BackgroundStyleDropdown\n                id={`${rowComponent.id}-background`}\n                value={backgroundStyle.value}\n                onChange={this.handleChangeBackground}\n              />,\n            ]}\n            editMode={editMode}\n          >\n            {editMode && (\n              <HoverMenu innerRef={dragSourceRef} position=\"left\">\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n                <IconButton\n                  onClick={this.handleChangeFocus}\n                  icon={<Icons.Cog iconSize=\"xl\" />}\n                />\n              </HoverMenu>\n            )}\n            <div\n              className={cx(\n                'grid-row',\n                rowItems.length === 0 && 'grid-row--empty',\n                backgroundStyle.className,\n              )}\n              data-test={`grid-row-${backgroundStyle.className}`}\n            >\n              {rowItems.map((componentId, itemIndex) => (\n                <DashboardComponent\n                  key={componentId}\n                  id={componentId}\n                  parentId={rowComponent.id}\n                  depth={depth + 1}\n                  index={itemIndex}\n                  availableColumnCount={\n                    availableColumnCount - occupiedColumnCount\n                  }\n                  columnWidth={columnWidth}\n                  onResizeStart={onResizeStart}\n                  onResize={onResize}\n                  onResizeStop={onResizeStop}\n                  isComponentVisible={isComponentVisible}\n                  onChangeTab={onChangeTab}\n                />\n              ))}\n\n              {dropIndicatorProps && <div {...dropIndicatorProps} />}\n            </div>\n          </WithPopoverMenu>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nRow.propTypes = propTypes;\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}