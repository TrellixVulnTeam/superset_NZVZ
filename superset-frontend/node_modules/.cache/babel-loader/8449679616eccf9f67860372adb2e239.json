{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { sections } from '@superset-ui/chart-controls';\nimport { t } from '@superset-ui/core';\nimport { sharedControls } from '@superset-ui/chart-controls/lib';\nimport { DEFAULT_FORM_DATA } from './types';\nconst { multiSelect } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  // @ts-ignore\n  sections.legacyRegularTime,\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'groupby',\n      config: {\n        ...sharedControls.groupby,\n        label: 'Columns to show',\n        multiple: true,\n        required: false } }]] },\n\n\n\n\n\n  {\n    label: t('UI Configuration'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'multiSelect',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Multiple select'),\n        default: multiSelect,\n        affectsDataMask: true,\n        resetConfig: true,\n        renderTrigger: true,\n        description: t('Allow selecting multiple values') } }],\n\n\n\n    [\n    {\n      name: 'enableEmptyFilter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Required'),\n        default: false,\n        renderTrigger: true,\n        description: t('User must select a value for this filter.') } }]] }] };const _default =\n\n\n\n\n\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(multiSelect, \"multiSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/GroupBy/controlPanel.ts\");reactHotLoader.register(config, \"config\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/GroupBy/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/GroupBy/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/filters/components/GroupBy/controlPanel.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAA6B,QAA7B,QAA6C,6BAA7C;AACA,SAAS,CAAT,QAAkB,mBAAlB;AACA,SAAS,cAAT,QAA+B,iCAA/B;AACA,SAAS,iBAAT,QAAkC,SAAlC;AAEA,MAAM,EAAE,WAAF,KAAkB,iBAAxB;AAEA,MAAM,MAAM,GAAuB;AACjC,EAAA,oBAAoB,EAAE;AACpB;AACA,EAAA,QAAQ,CAAC,iBAFW;AAGpB;AACE,IAAA,KAAK,EAAE,CAAC,CAAC,OAAD,CADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,cAAc,EAAE;AACd;AACE;AACE,MAAA,IAAI,EAAE,SADR;AAEE,MAAA,MAAM,EAAE;AACN,WAAG,cAAc,CAAC,OADZ;AAEN,QAAA,KAAK,EAAE,iBAFD;AAGN,QAAA,QAAQ,EAAE,IAHJ;AAIN,QAAA,QAAQ,EAAE,KAJJ,EAFV,EADF,CADc,CAHlB,EAHoB;;;;;;AAoBpB;AACE,IAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,CADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,cAAc,EAAE;AACd;AACE;AACE,MAAA,IAAI,EAAE,aADR;AAEE,MAAA,MAAM,EAAE;AACN,QAAA,IAAI,EAAE,iBADA;AAEN,QAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,CAFF;AAGN,QAAA,OAAO,EAAE,WAHH;AAIN,QAAA,eAAe,EAAE,IAJX;AAKN,QAAA,WAAW,EAAE,IALP;AAMN,QAAA,aAAa,EAAE,IANT;AAON,QAAA,WAAW,EAAE,CAAC,CAAC,iCAAD,CAPR,EAFV,EADF,CADc;;;;AAed;AACE;AACE,MAAA,IAAI,EAAE,mBADR;AAEE,MAAA,MAAM,EAAE;AACN,QAAA,IAAI,EAAE,iBADA;AAEN,QAAA,KAAK,EAAE,CAAC,CAAC,UAAD,CAFF;AAGN,QAAA,OAAO,EAAE,KAHH;AAIN,QAAA,aAAa,EAAE,IAJT;AAKN,QAAA,WAAW,EAAE,CAAC,CAAC,2CAAD,CALR,EAFV,EADF,CAfc,CAHlB,EApBoB,CADW,EAAnC,C;;;;;;;;AAwDe,M,CAAf,wB,iLA1DQ,W,6IAEF,M","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ControlPanelConfig, sections } from '@superset-ui/chart-controls';\nimport { t } from '@superset-ui/core';\nimport { sharedControls } from '@superset-ui/chart-controls/lib';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst { multiSelect } = DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    // @ts-ignore\n    sections.legacyRegularTime,\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'groupby',\n            config: {\n              ...sharedControls.groupby,\n              label: 'Columns to show',\n              multiple: true,\n              required: false,\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('UI Configuration'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'multiSelect',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Multiple select'),\n              default: multiSelect,\n              affectsDataMask: true,\n              resetConfig: true,\n              renderTrigger: true,\n              description: t('Allow selecting multiple values'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'enableEmptyFilter',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Required'),\n              default: false,\n              renderTrigger: true,\n              description: t('User must select a value for this filter.'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n};\n\nexport default config;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}