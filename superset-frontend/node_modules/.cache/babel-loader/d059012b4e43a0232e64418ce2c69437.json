{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Form, FormItem } from 'src/components/Form';\nimport { Select } from 'src/components';\nimport { Col, InputNumber, Row } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport { COMPARATOR, MULTIPLE_VALUE_COMPARATORS } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst colorSchemeOptions = [\n{ value: 'rgb(0,255,0)', label: t('green') },\n{ value: 'rgb(255,255,0)', label: t('yellow') },\n{ value: 'rgb(255,0,0)', label: t('red') }];\n\nconst operatorOptions = [\n{ value: COMPARATOR.NONE, label: 'None' },\n{ value: COMPARATOR.GREATER_THAN, label: '>' },\n{ value: COMPARATOR.LESS_THAN, label: '<' },\n{ value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n{ value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n{ value: COMPARATOR.EQUAL, label: '=' },\n{ value: COMPARATOR.NOT_EQUAL, label: '≠' },\n{ value: COMPARATOR.BETWEEN, label: '< x <' },\n{ value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n{ value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n{ value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' }];\n\nconst targetValueValidator = (compare, rejectMessage) => (targetValue) => (_, compareValue) => {\n  if (!targetValue ||\n  !compareValue ||\n  compare(Number(targetValue), Number(compareValue))) {\n    return Promise.resolve();\n  }\n  return Promise.reject(new Error(rejectMessage));\n};\nconst targetValueLeftValidator = targetValueValidator((target, val) => target > val, t('This value should be smaller than the right target value'));\nconst targetValueRightValidator = targetValueValidator((target, val) => target < val, t('This value should be greater than the left target value'));\nconst isOperatorMultiValue = (operator) => operator && MULTIPLE_VALUE_COMPARATORS.includes(operator);\nconst isOperatorNone = (operator) => !operator || operator === COMPARATOR.NONE;\nconst rulesRequired = [{ required: true, message: t('Required') }];\nconst rulesTargetValueLeft = [\n{ required: true, message: t('Required') },\n({ getFieldValue }) => ({\n  validator: targetValueLeftValidator(getFieldValue('targetValueRight')) })];\n\n\nconst rulesTargetValueRight = [\n{ required: true, message: t('Required') },\n({ getFieldValue }) => ({\n  validator: targetValueRightValidator(getFieldValue('targetValueLeft')) })];\n\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\nconst shouldFormItemUpdate = (prevValues, currentValues) => isOperatorNone(prevValues.operator) !==\nisOperatorNone(currentValues.operator) ||\nisOperatorMultiValue(prevValues.operator) !==\nisOperatorMultiValue(currentValues.operator);\nconst operatorField = ___EmotionJSX(FormItem, { name: \"operator\", label: t('Operator'), rules: rulesRequired, initialValue: operatorOptions[0].value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 82, columnNumber: 24 } },\n___EmotionJSX(Select, { ariaLabel: t('Operator'), options: operatorOptions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 83, columnNumber: 5 } }));\n\nconst renderOperatorFields = ({ getFieldValue }) => isOperatorNone(getFieldValue('operator')) ? ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 85, columnNumber: 98 } },\n___EmotionJSX(Col, { span: 6, __self: this, __source: { fileName: _jsxFileName, lineNumber: 86, columnNumber: 7 } }, operatorField)) :\nisOperatorMultiValue(getFieldValue('operator')) ? ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 87, columnNumber: 66 } },\n___EmotionJSX(Col, { span: 9, __self: this, __source: { fileName: _jsxFileName, lineNumber: 88, columnNumber: 7 } },\n___EmotionJSX(FormItem, { name: \"targetValueLeft\", label: t('Left value'), rules: rulesTargetValueLeft, dependencies: targetValueLeftDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 89, columnNumber: 9 } },\n___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 90, columnNumber: 11 } }))),\n\n\n___EmotionJSX(Col, { span: 6, __self: this, __source: { fileName: _jsxFileName, lineNumber: 93, columnNumber: 7 } }, operatorField),\n___EmotionJSX(Col, { span: 9, __self: this, __source: { fileName: _jsxFileName, lineNumber: 94, columnNumber: 7 } },\n___EmotionJSX(FormItem, { name: \"targetValueRight\", label: t('Right value'), rules: rulesTargetValueRight, dependencies: targetValueRightDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 95, columnNumber: 9 } },\n___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 96, columnNumber: 11 } })))) :\n\n\n___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 99, columnNumber: 16 } },\n___EmotionJSX(Col, { span: 6, __self: this, __source: { fileName: _jsxFileName, lineNumber: 100, columnNumber: 7 } }, operatorField),\n___EmotionJSX(Col, { span: 18, __self: this, __source: { fileName: _jsxFileName, lineNumber: 101, columnNumber: 7 } },\n___EmotionJSX(FormItem, { name: \"targetValue\", label: t('Target value'), rules: rulesRequired, __self: this, __source: { fileName: _jsxFileName, lineNumber: 102, columnNumber: 9 } },\n___EmotionJSX(FullWidthInputNumber, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 103, columnNumber: 11 } }))));\n\n\n\nexport const FormattingPopoverContent = ({ config, onChange, columns = [] }) => {var _columns$;return ___EmotionJSX(Form, { onFinish: onChange, initialValues: config, requiredMark: \"optional\", layout: \"vertical\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 107, columnNumber: 83 } },\n  ___EmotionJSX(Row, { gutter: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 108, columnNumber: 5 } },\n  ___EmotionJSX(Col, { span: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 109, columnNumber: 7 } },\n  ___EmotionJSX(FormItem, { name: \"column\", label: t('Column'), rules: rulesRequired, initialValue: (_columns$ = columns[0]) == null ? void 0 : _columns$.value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 110, columnNumber: 9 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Select column'), options: columns, __self: this, __source: { fileName: _jsxFileName, lineNumber: 111, columnNumber: 11 } }))),\n\n\n  ___EmotionJSX(Col, { span: 12, __self: this, __source: { fileName: _jsxFileName, lineNumber: 114, columnNumber: 7 } },\n  ___EmotionJSX(FormItem, { name: \"colorScheme\", label: t('Color scheme'), rules: rulesRequired, initialValue: colorSchemeOptions[0].value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 115, columnNumber: 9 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Color scheme'), options: colorSchemeOptions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 116, columnNumber: 11 } })))),\n\n\n\n  ___EmotionJSX(FormItem, { noStyle: true, shouldUpdate: shouldFormItemUpdate, __self: this, __source: { fileName: _jsxFileName, lineNumber: 120, columnNumber: 5 } },\n  renderOperatorFields),\n\n  ___EmotionJSX(FormItem, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 123, columnNumber: 5 } },\n  ___EmotionJSX(JustifyEnd, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 124, columnNumber: 7 } },\n  ___EmotionJSX(Button, { htmlType: \"submit\", buttonStyle: \"primary\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 125, columnNumber: 9 } },\n  t('Apply')))));};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FullWidthInputNumber, \"FullWidthInputNumber\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(JustifyEnd, \"JustifyEnd\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(colorSchemeOptions, \"colorSchemeOptions\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(operatorOptions, \"operatorOptions\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueValidator, \"targetValueValidator\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueLeftValidator, \"targetValueLeftValidator\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueRightValidator, \"targetValueRightValidator\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(isOperatorMultiValue, \"isOperatorMultiValue\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(isOperatorNone, \"isOperatorNone\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesRequired, \"rulesRequired\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesTargetValueLeft, \"rulesTargetValueLeft\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesTargetValueRight, \"rulesTargetValueRight\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueLeftDeps, \"targetValueLeftDeps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueRightDeps, \"targetValueRightDeps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(shouldFormItemUpdate, \"shouldFormItemUpdate\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(operatorField, \"operatorField\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(renderOperatorFields, \"renderOperatorFields\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(FormattingPopoverContent, \"FormattingPopoverContent\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Form, FormItem, FormProps } from 'src/components/Form';\nimport { Select } from 'src/components';\nimport { Col, InputNumber, Row } from 'src/common/components';\nimport Button from 'src/components/Button';\nimport {\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from './types';\n\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\n\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst colorSchemeOptions = [\n  { value: 'rgb(0,255,0)', label: t('green') },\n  { value: 'rgb(255,255,0)', label: t('yellow') },\n  { value: 'rgb(255,0,0)', label: t('red') },\n];\n\nconst operatorOptions = [\n  { value: COMPARATOR.NONE, label: 'None' },\n  { value: COMPARATOR.GREATER_THAN, label: '>' },\n  { value: COMPARATOR.LESS_THAN, label: '<' },\n  { value: COMPARATOR.GREATER_OR_EQUAL, label: '≥' },\n  { value: COMPARATOR.LESS_OR_EQUAL, label: '≤' },\n  { value: COMPARATOR.EQUAL, label: '=' },\n  { value: COMPARATOR.NOT_EQUAL, label: '≠' },\n  { value: COMPARATOR.BETWEEN, label: '< x <' },\n  { value: COMPARATOR.BETWEEN_OR_EQUAL, label: '≤ x ≤' },\n  { value: COMPARATOR.BETWEEN_OR_LEFT_EQUAL, label: '≤ x <' },\n  { value: COMPARATOR.BETWEEN_OR_RIGHT_EQUAL, label: '< x ≤' },\n];\n\nconst targetValueValidator = (\n  compare: (targetValue: number, compareValue: number) => boolean,\n  rejectMessage: string,\n) => (targetValue: number | string) => (\n  _: any,\n  compareValue: number | string,\n) => {\n  if (\n    !targetValue ||\n    !compareValue ||\n    compare(Number(targetValue), Number(compareValue))\n  ) {\n    return Promise.resolve();\n  }\n  return Promise.reject(new Error(rejectMessage));\n};\n\nconst targetValueLeftValidator = targetValueValidator(\n  (target: number, val: number) => target > val,\n  t('This value should be smaller than the right target value'),\n);\n\nconst targetValueRightValidator = targetValueValidator(\n  (target: number, val: number) => target < val,\n  t('This value should be greater than the left target value'),\n);\n\nconst isOperatorMultiValue = (operator?: COMPARATOR) =>\n  operator && MULTIPLE_VALUE_COMPARATORS.includes(operator);\n\nconst isOperatorNone = (operator?: COMPARATOR) =>\n  !operator || operator === COMPARATOR.NONE;\n\nconst rulesRequired = [{ required: true, message: t('Required') }];\n\ntype GetFieldValue = Pick<Required<FormProps>['form'], 'getFieldValue'>;\nconst rulesTargetValueLeft = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueLeftValidator(getFieldValue('targetValueRight')),\n  }),\n];\n\nconst rulesTargetValueRight = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueRightValidator(getFieldValue('targetValueLeft')),\n  }),\n];\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\n\nconst shouldFormItemUpdate = (\n  prevValues: ConditionalFormattingConfig,\n  currentValues: ConditionalFormattingConfig,\n) =>\n  isOperatorNone(prevValues.operator) !==\n    isOperatorNone(currentValues.operator) ||\n  isOperatorMultiValue(prevValues.operator) !==\n    isOperatorMultiValue(currentValues.operator);\n\nconst operatorField = (\n  <FormItem\n    name=\"operator\"\n    label={t('Operator')}\n    rules={rulesRequired}\n    initialValue={operatorOptions[0].value}\n  >\n    <Select ariaLabel={t('Operator')} options={operatorOptions} />\n  </FormItem>\n);\n\nconst renderOperatorFields = ({ getFieldValue }: GetFieldValue) =>\n  isOperatorNone(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={6}>{operatorField}</Col>\n    </Row>\n  ) : isOperatorMultiValue(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueLeft\"\n          label={t('Left value')}\n          rules={rulesTargetValueLeft}\n          dependencies={targetValueLeftDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n      <Col span={6}>{operatorField}</Col>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueRight\"\n          label={t('Right value')}\n          rules={rulesTargetValueRight}\n          dependencies={targetValueRightDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  ) : (\n    <Row gutter={12}>\n      <Col span={6}>{operatorField}</Col>\n      <Col span={18}>\n        <FormItem\n          name=\"targetValue\"\n          label={t('Target value')}\n          rules={rulesRequired}\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  );\n\nexport const FormattingPopoverContent = ({\n  config,\n  onChange,\n  columns = [],\n}: {\n  config?: ConditionalFormattingConfig;\n  onChange: (config: ConditionalFormattingConfig) => void;\n  columns: { label: string; value: string }[];\n}) => (\n  <Form\n    onFinish={onChange}\n    initialValues={config}\n    requiredMark=\"optional\"\n    layout=\"vertical\"\n  >\n    <Row gutter={12}>\n      <Col span={12}>\n        <FormItem\n          name=\"column\"\n          label={t('Column')}\n          rules={rulesRequired}\n          initialValue={columns[0]?.value}\n        >\n          <Select ariaLabel={t('Select column')} options={columns} />\n        </FormItem>\n      </Col>\n      <Col span={12}>\n        <FormItem\n          name=\"colorScheme\"\n          label={t('Color scheme')}\n          rules={rulesRequired}\n          initialValue={colorSchemeOptions[0].value}\n        >\n          <Select ariaLabel={t('Color scheme')} options={colorSchemeOptions} />\n        </FormItem>\n      </Col>\n    </Row>\n    <FormItem noStyle shouldUpdate={shouldFormItemUpdate}>\n      {renderOperatorFields}\n    </FormItem>\n    <FormItem>\n      <JustifyEnd>\n        <Button htmlType=\"submit\" buttonStyle=\"primary\">\n          {t('Apply')}\n        </Button>\n      </JustifyEnd>\n    </FormItem>\n  </Form>\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}