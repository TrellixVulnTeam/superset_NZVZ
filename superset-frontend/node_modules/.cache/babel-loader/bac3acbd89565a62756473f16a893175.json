{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { datasetToSelectOption } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst localCache = new Map();\nconst cachedSupersetGet = cacheWrapper(SupersetClient.get, localCache, ({ endpoint }) => endpoint || '');\nconst DatasetSelect = ({ onChange, value }) => {\n  const getErrorMessage = useCallback(({ error, message }) => {\n    let errorText = message || error || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this dashboard');\n    }\n    return errorText;\n  }, []);\n  const loadDatasetOptions = async (search, page, pageSize) => {\n    const searchColumn = 'table_name';\n    const query = rison.encode({\n      filters: [{ col: searchColumn, opr: 'ct', value: search }],\n      page,\n      page_size: pageSize,\n      order_column: searchColumn,\n      order_direction: 'asc' });\n\n    return cachedSupersetGet({\n      endpoint: `/api/v1/dataset/?q=${query}` }).\n\n    then((response) => {\n      const data = response.json.result.\n      map(datasetToSelectOption).\n      sort((a, b) => a.label.localeCompare(b.label));\n      return {\n        data,\n        totalCount: response.json.count };\n\n    }).\n    catch(async (error) => {\n      const errorMessage = getErrorMessage(await getClientErrorObject(error));\n      throw new Error(errorMessage);\n    });\n  };\n  return ___EmotionJSX(Select, { ariaLabel: t('Dataset'), value: value, options: loadDatasetOptions, onChange: onChange, __self: this, __source: { fileName: _jsxFileName, lineNumber: 62, columnNumber: 13 } });\n};__signature__(DatasetSelect, \"useCallback{getErrorMessage}\");\nconst MemoizedSelect = (props) =>\n// eslint-disable-next-line react-hooks/exhaustive-deps\nuseMemo(() => ___EmotionJSX(DatasetSelect, _extends({}, props, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 66, columnNumber: 15 } })), []);__signature__(MemoizedSelect, \"useMemo{}\");const _default =\nMemoizedSelect;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(localCache, \"localCache\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\");reactHotLoader.register(cachedSupersetGet, \"cachedSupersetGet\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\");reactHotLoader.register(DatasetSelect, \"DatasetSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\");reactHotLoader.register(MemoizedSelect, \"MemoizedSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DatasetSelect.tsx"],"names":[],"mappings":"2gBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,WAAhB,EAA6B,OAA7B,QAA4C,OAA5C;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,EAAY,cAAZ,QAAkC,mBAAlC;AACA,SAAS,MAAT,QAAuB,gBAAvB;AACA,SAAS,YAAT,QAA6B,wBAA7B;AACA,SAEE,oBAFF,QAGO,gCAHP;AAIA,SAAS,qBAAT,QAAsC,SAAtC,C;AAEA,MAAM,UAAU,GAAG,IAAI,GAAJ,EAAnB;AAEA,MAAM,iBAAiB,GAAG,YAAY,CACpC,cAAc,CAAC,GADqB,EAEpC,UAFoC,EAGpC,CAAC,EAAE,QAAF,EAAD,KAAkB,QAAQ,IAAI,EAHM,CAAtC;AAWA,MAAM,aAAa,GAAG,CAAC,EAAE,QAAF,EAAY,KAAZ,EAAD,KAA4C;AAChE,QAAM,eAAe,GAAG,WAAW,CACjC,CAAC,EAAE,KAAF,EAAS,OAAT,EAAD,KAA0C;AACxC,QAAI,SAAS,GAAG,OAAO,IAAI,KAAX,IAAoB,CAAC,CAAC,uBAAD,CAArC;AACA,QAAI,OAAO,KAAK,WAAhB,EAA6B;AAC3B,MAAA,SAAS,GAAG,CAAC,CAAC,mDAAD,CAAb;AACD;AACD,WAAO,SAAP;AACD,GAPgC,EAQjC,EARiC,CAAnC;AAWA,QAAM,kBAAkB,GAAG,OACzB,MADyB,EAEzB,IAFyB,EAGzB,QAHyB,KAIvB;AACF,UAAM,YAAY,GAAG,YAArB;AACA,UAAM,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa;AACzB,MAAA,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,YAAP,EAAqB,GAAG,EAAE,IAA1B,EAAgC,KAAK,EAAE,MAAvC,EAAD,CADgB;AAEzB,MAAA,IAFyB;AAGzB,MAAA,SAAS,EAAE,QAHc;AAIzB,MAAA,YAAY,EAAE,YAJW;AAKzB,MAAA,eAAe,EAAE,KALQ,EAAb,CAAd;;AAOA,WAAO,iBAAiB,CAAC;AACvB,MAAA,QAAQ,EAAE,sBAAsB,KAAK,EADd,EAAD,CAAjB;;AAGJ,IAAA,IAHI,CAGC,CAAA,QAAQ,KAAG;AACf,YAAM,IAAI,GAGJ,QAAQ,CAAC,IAAT,CAAc,MAAd;AACH,MAAA,GADG,CACC,qBADD;AAEH,MAAA,IAFG,CAEE,CAAC,CAAD,EAAuB,CAAvB,KACJ,CAAC,CAAC,KAAF,CAAQ,aAAR,CAAsB,CAAC,CAAC,KAAxB,CAHE,CAHN;AAQA,aAAO;AACL,QAAA,IADK;AAEL,QAAA,UAAU,EAAE,QAAQ,CAAC,IAAT,CAAc,KAFrB,EAAP;;AAID,KAhBI;AAiBJ,IAAA,KAjBI,CAiBE,OAAM,KAAN,KAAc;AACnB,YAAM,YAAY,GAAG,eAAe,CAAC,MAAM,oBAAoB,CAAC,KAAD,CAA3B,CAApC;AACA,YAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD,KApBI,CAAP;AAqBD,GAlCD;AAoCA,SACE,cAAC,MAAD,IACE,SAAS,EAAE,CAAC,CAAC,SAAD,CADd,EAEE,KAAK,EAAE,KAFT,EAGE,OAAO,EAAE,kBAHX,EAIE,QAAQ,EAAE,QAJZ,yFADF;AAQD,CAxDD,C,cAAM,a;AA0DN,MAAM,cAAc,GAAG,CAAC,KAAD;AACrB;AACA,OAAO,CAAC,MAAM,cAAC,aAAD,eAAmB,KAAnB,4FAAP,EAAqC,EAArC,CAFT,C,cAAM,c;AAIS,c,CAAf,wB,iLA3EM,U,2LAEA,iB,kMAWA,a,8LA0DA,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { cacheWrapper } from 'src/utils/cacheWrapper';\nimport {\n  ClientErrorObject,\n  getClientErrorObject,\n} from 'src/utils/getClientErrorObject';\nimport { datasetToSelectOption } from './utils';\n\nconst localCache = new Map<string, any>();\n\nconst cachedSupersetGet = cacheWrapper(\n  SupersetClient.get,\n  localCache,\n  ({ endpoint }) => endpoint || '',\n);\n\ninterface DatasetSelectProps {\n  onChange: (value: { label: string; value: number }) => void;\n  value?: { label: string; value: number };\n}\n\nconst DatasetSelect = ({ onChange, value }: DatasetSelectProps) => {\n  const getErrorMessage = useCallback(\n    ({ error, message }: ClientErrorObject) => {\n      let errorText = message || error || t('An error has occurred');\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      return errorText;\n    },\n    [],\n  );\n\n  const loadDatasetOptions = async (\n    search: string,\n    page: number,\n    pageSize: number,\n  ) => {\n    const searchColumn = 'table_name';\n    const query = rison.encode({\n      filters: [{ col: searchColumn, opr: 'ct', value: search }],\n      page,\n      page_size: pageSize,\n      order_column: searchColumn,\n      order_direction: 'asc',\n    });\n    return cachedSupersetGet({\n      endpoint: `/api/v1/dataset/?q=${query}`,\n    })\n      .then(response => {\n        const data: {\n          label: string;\n          value: string | number;\n        }[] = response.json.result\n          .map(datasetToSelectOption)\n          .sort((a: { label: string }, b: { label: string }) =>\n            a.label.localeCompare(b.label),\n          );\n        return {\n          data,\n          totalCount: response.json.count,\n        };\n      })\n      .catch(async error => {\n        const errorMessage = getErrorMessage(await getClientErrorObject(error));\n        throw new Error(errorMessage);\n      });\n  };\n\n  return (\n    <Select\n      ariaLabel={t('Dataset')}\n      value={value}\n      options={loadDatasetOptions}\n      onChange={onChange}\n    />\n  );\n};\n\nconst MemoizedSelect = (props: DatasetSelectProps) =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => <DatasetSelect {...props} />, []);\n\nexport default MemoizedSelect;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}