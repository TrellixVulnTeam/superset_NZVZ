{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/FiltersBadge/FilterIndicator/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SearchOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport { getFilterValueForDisplay } from 'src/dashboard/components/nativeFilters/FilterBar/FilterSets/utils';\nimport { FilterIndicatorText, FilterValue, Item, ItemIcon, Title } from 'src/dashboard/components/FiltersBadge/Styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterIndicator = ({ indicator: { column, name, value, path = [] }, onClick = () => {}, text }) => {\n  const resultValue = getFilterValueForDisplay(value);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Item, { onClick: () => onClick([...path, `LABEL-${column}`]), __self: this, __source: { fileName: _jsxFileName, lineNumber: 26, columnNumber: 7 } },\n  ___EmotionJSX(Title, { bold: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 27, columnNumber: 9 } },\n  ___EmotionJSX(ItemIcon, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 28, columnNumber: 11 } },\n  ___EmotionJSX(SearchOutlined, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 29, columnNumber: 13 } })),\n\n  name,\n  resultValue ? ': ' : ''),\n\n  ___EmotionJSX(FilterValue, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 34, columnNumber: 9 } }, resultValue)),\n\n  text && ___EmotionJSX(FilterIndicatorText, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 36, columnNumber: 16 } }, text));\n\n};const _default =\nFilterIndicator;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterIndicator, \"FilterIndicator\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/FiltersBadge/FilterIndicator/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/FiltersBadge/FilterIndicator/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/components/FiltersBadge/FilterIndicator/index.tsx"],"names":[],"mappings":"+aAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,SAAS,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAP,MAA0B,OAA1B;AACA,SAAS,wBAAT,QAAyC,mEAAzC;AACA,SACE,mBADF,EAEE,WAFF,EAGE,IAHF,EAIE,QAJF,EAKE,KALF,QAMO,8CANP,C;AAeA,MAAM,eAAe,GAAuB,CAAC,EAC3C,SAAS,EAAE,EAAE,MAAF,EAAU,IAAV,EAAgB,KAAhB,EAAuB,IAAI,GAAG,EAA9B,EADgC,EAE3C,OAAO,GAAG,MAAK,CAAG,CAFyB,EAG3C,IAH2C,EAAD,KAIvC;AACH,QAAM,WAAW,GAAG,wBAAwB,CAAC,KAAD,CAA5C;AACA,SACE;AACE,gBAAC,IAAD,IAAM,OAAO,EAAE,MAAM,OAAO,CAAC,CAAC,GAAG,IAAJ,EAAU,SAAS,MAAM,EAAzB,CAAD,CAA5B;AACE,gBAAC,KAAD,IAAO,IAAI,MAAX;AACE,gBAAC,QAAD;AACE,gBAAC,cAAD,2FADF,CADF;;AAIG,EAAA,IAJH;AAKG,EAAA,WAAW,GAAG,IAAH,GAAU,EALxB,CADF;;AAQE,gBAAC,WAAD,2FAAc,WAAd,CARF,CADF;;AAWG,EAAA,IAAI,IAAI,cAAC,mBAAD,4FAAsB,IAAtB,CAXX,CADF;;AAeD,CArBD,C;AAuBe,e,CAAf,wB,iLAvBM,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport React, { FC } from 'react';\nimport { getFilterValueForDisplay } from 'src/dashboard/components/nativeFilters/FilterBar/FilterSets/utils';\nimport {\n  FilterIndicatorText,\n  FilterValue,\n  Item,\n  ItemIcon,\n  Title,\n} from 'src/dashboard/components/FiltersBadge/Styles';\nimport { Indicator } from 'src/dashboard/components/FiltersBadge/selectors';\n\nexport interface IndicatorProps {\n  indicator: Indicator;\n  onClick?: (path: string[]) => void;\n  text?: string;\n}\n\nconst FilterIndicator: FC<IndicatorProps> = ({\n  indicator: { column, name, value, path = [] },\n  onClick = () => {},\n  text,\n}) => {\n  const resultValue = getFilterValueForDisplay(value);\n  return (\n    <>\n      <Item onClick={() => onClick([...path, `LABEL-${column}`])}>\n        <Title bold>\n          <ItemIcon>\n            <SearchOutlined />\n          </ItemIcon>\n          {name}\n          {resultValue ? ': ' : ''}\n        </Title>\n        <FilterValue>{resultValue}</FilterValue>\n      </Item>\n      {text && <FilterIndicatorText>{text}</FilterIndicatorText>}\n    </>\n  );\n};\n\nexport default FilterIndicator;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}