{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\nimport { t } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport Collapse from 'src/components/Collapse';\nimport TextControl from 'src/explore/components/controls/TextControl';\nimport MetricsControl from 'src/explore/components/controls/MetricControl/MetricsControl';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport PopoverSection from 'src/components/PopoverSection';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst controlTypes = {\n  fixed: 'fix',\n  metric: 'metric' };\n\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  isFloat: PropTypes.bool,\n  datasource: PropTypes.object.isRequired,\n  default: PropTypes.shape({\n    type: PropTypes.oneOf(['fix', 'metric']),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) }) };\n\n\n\nconst defaultProps = {\n  onChange: () => {},\n  default: { type: controlTypes.fixed, value: 5 } };\n\n\nexport default class FixedOrMetricControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.setType = this.setType.bind(this);\n    this.setFixedValue = this.setFixedValue.bind(this);\n    this.setMetric = this.setMetric.bind(this);\n    const type =\n    (props.value ? props.value.type : props.default.type) ||\n    controlTypes.fixed;\n    const value =\n    (props.value ? props.value.value : props.default.value) || '100';\n    this.state = {\n      type,\n      fixedValue: type === controlTypes.fixed ? value : '',\n      metricValue: type === controlTypes.metric ? value : null };\n\n  }\n\n  onChange() {\n    this.props.onChange({\n      type: this.state.type,\n      value:\n      this.state.type === controlTypes.fixed ?\n      this.state.fixedValue :\n      this.state.metricValue });\n\n  }\n\n  setType(type) {\n    this.setState({ type }, this.onChange);\n  }\n\n  setFixedValue(fixedValue) {\n    this.setState({ fixedValue }, this.onChange);\n  }\n\n  setMetric(metricValue) {\n    this.setState({ metricValue }, this.onChange);\n  }\n\n  render() {\n    const value = this.props.value || this.props.default;\n    const type = value.type || controlTypes.fixed;\n    const columns = this.props.datasource ?\n    this.props.datasource.columns :\n    null;\n    const metrics = this.props.datasource ?\n    this.props.datasource.metrics :\n    null;\n    return (\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(Collapse, {\n        ghost: true,\n        css: (theme) => /*#__PURE__*/css(\"&.ant-collapse>.ant-collapse-item.ant-collapse-no-arrow>.ant-collapse-header{border:0px;padding:0px 0px \",\n\n\n\n\n        theme.gridUnit * 2, \"px 0px;display:inline-block;}&.ant-collapse-ghost>.ant-collapse-item>.ant-collapse-content>.ant-collapse-content-box{padding:0px;& .well{margin-bottom:0px;padding:\",\n\n\n\n\n\n\n\n\n\n\n        theme.gridUnit * 2, \"px;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:FixedOrMetricControl;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n\n\n\n\n      ___EmotionJSX(Collapse.Panel, {\n        showArrow: false,\n        header:\n        ___EmotionJSX(Label, { onClick: () => undefined },\n        this.state.type === controlTypes.fixed &&\n        ___EmotionJSX(\"span\", null, this.state.fixedValue),\n\n        this.state.type === controlTypes.metric &&\n        ___EmotionJSX(\"span\", null,\n        ___EmotionJSX(\"span\", null, \"metric: \"),\n        ___EmotionJSX(\"strong\", null,\n        this.state.metricValue ?\n        this.state.metricValue.label :\n        null))) },\n\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"well\" },\n      ___EmotionJSX(PopoverSection, {\n        title: t('Fixed'),\n        isSelected: type === controlTypes.fixed,\n        onSelect: () => {\n          this.setType(controlTypes.fixed);\n        } },\n\n      ___EmotionJSX(TextControl, {\n        isFloat: true,\n        onChange: this.setFixedValue,\n        onFocus: () => {\n          this.setType(controlTypes.fixed);\n        },\n        value: this.state.fixedValue })),\n\n\n      ___EmotionJSX(PopoverSection, {\n        title: t('Based on a metric'),\n        isSelected: type === controlTypes.metric,\n        onSelect: () => {\n          this.setType(controlTypes.metric);\n        } },\n\n      ___EmotionJSX(MetricsControl, {\n        name: \"metric\",\n        columns: columns,\n        savedMetrics: metrics,\n        multi: false,\n        onFocus: () => {\n          this.setType(controlTypes.metric);\n        },\n        onChange: this.setMetric,\n        value: this.state.metricValue })))))));\n\n\n\n\n\n\n\n  }}\n\n\nFixedOrMetricControl.propTypes = propTypes;\nFixedOrMetricControl.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}