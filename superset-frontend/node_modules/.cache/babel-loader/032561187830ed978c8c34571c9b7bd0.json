{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\ntoggleExpandSlice,\nsetFocusedFilterField,\nunsetFocusedFilterField } from\n'src/dashboard/actions/dashboardState';\nimport { updateComponents } from 'src/dashboard/actions/dashboardLayout';\nimport { changeFilter } from 'src/dashboard/actions/dashboardFilters';\nimport {\naddSuccessToast,\naddDangerToast } from\n'src/components/MessageToasts/actions';\nimport { refreshChart } from 'src/chart/chartAction';\nimport { logEvent } from 'src/logger/actions';\nimport {\ngetActiveFilters,\ngetAppliedFilterValues } from\n'src/dashboard/util/activeDashboardFilters';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport Chart from 'src/dashboard/components/gridComponents/Chart';\nimport { PLACEHOLDER_DATASOURCE } from 'src/dashboard/constants';\n\nconst EMPTY_OBJECT = {};\n\nfunction mapStateToProps(\n{\n  charts: chartQueries,\n  dashboardInfo,\n  dashboardState,\n  dashboardLayout,\n  dataMask,\n  datasources,\n  sliceEntities,\n  nativeFilters,\n  common },\n\nownProps)\n{var _dashboardInfo$metada, _dashboardInfo$metada2, _dataMask$id, _dataMask$id2;\n  const { id } = ownProps;\n  const chart = chartQueries[id] || EMPTY_OBJECT;\n  const datasource =\n  chart && chart.form_data && datasources[chart.form_data.datasource] ||\n  PLACEHOLDER_DATASOURCE;\n  const { colorScheme, colorNamespace } = dashboardState;\n  const labelColors = (dashboardInfo == null ? void 0 : (_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.label_colors) || {};\n  // note: this method caches filters if possible to prevent render cascades\n  const formData = getFormDataWithExtraFilters({\n    layout: dashboardLayout.present,\n    chart,\n    // eslint-disable-next-line camelcase\n    chartConfiguration: (_dashboardInfo$metada2 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada2.chart_configuration,\n    charts: chartQueries,\n    filters: getAppliedFilterValues(id),\n    colorScheme,\n    colorNamespace,\n    sliceId: id,\n    nativeFilters,\n    dataMask,\n    labelColors });\n\n\n  formData.dashboardId = dashboardInfo.id;\n\n  return {\n    chart,\n    datasource,\n    labelColors,\n    slice: sliceEntities.slices[id],\n    timeout: dashboardInfo.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    filters: getActiveFilters() || EMPTY_OBJECT,\n    formData,\n    editMode: dashboardState.editMode,\n    isExpanded: !!dashboardState.expandedSlices[id],\n    supersetCanExplore: !!dashboardInfo.superset_can_explore,\n    supersetCanShare: !!dashboardInfo.superset_can_share,\n    supersetCanCSV: !!dashboardInfo.superset_can_csv,\n    sliceCanEdit: !!dashboardInfo.slice_can_edit,\n    ownState: (_dataMask$id = dataMask[id]) == null ? void 0 : _dataMask$id.ownState,\n    filterState: (_dataMask$id2 = dataMask[id]) == null ? void 0 : _dataMask$id2.filterState,\n    maxRows: common.conf.SQL_MAX_ROW };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    updateComponents,\n    addSuccessToast,\n    addDangerToast,\n    toggleExpandSlice,\n    changeFilter,\n    setFocusedFilterField,\n    unsetFocusedFilterField,\n    refreshChart,\n    logEvent },\n\n  dispatch);\n\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(Chart);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EMPTY_OBJECT, \"EMPTY_OBJECT\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/containers/Chart.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/containers/Chart.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/containers/Chart.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/containers/Chart.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/dashboard/containers/Chart.jsx"],"names":["bindActionCreators","connect","toggleExpandSlice","setFocusedFilterField","unsetFocusedFilterField","updateComponents","changeFilter","addSuccessToast","addDangerToast","refreshChart","logEvent","getActiveFilters","getAppliedFilterValues","getFormDataWithExtraFilters","Chart","PLACEHOLDER_DATASOURCE","EMPTY_OBJECT","mapStateToProps","charts","chartQueries","dashboardInfo","dashboardState","dashboardLayout","dataMask","datasources","sliceEntities","nativeFilters","common","ownProps","id","chart","datasource","form_data","colorScheme","colorNamespace","labelColors","metadata","label_colors","formData","layout","present","chartConfiguration","chart_configuration","filters","sliceId","dashboardId","slice","slices","timeout","conf","SUPERSET_WEBSERVER_TIMEOUT","editMode","isExpanded","expandedSlices","supersetCanExplore","superset_can_explore","supersetCanShare","superset_can_share","supersetCanCSV","superset_can_csv","sliceCanEdit","slice_can_edit","ownState","filterState","maxRows","SQL_MAX_ROW","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  toggleExpandSlice,\n  setFocusedFilterField,\n  unsetFocusedFilterField,\n} from 'src/dashboard/actions/dashboardState';\nimport { updateComponents } from 'src/dashboard/actions/dashboardLayout';\nimport { changeFilter } from 'src/dashboard/actions/dashboardFilters';\nimport {\n  addSuccessToast,\n  addDangerToast,\n} from 'src/components/MessageToasts/actions';\nimport { refreshChart } from 'src/chart/chartAction';\nimport { logEvent } from 'src/logger/actions';\nimport {\n  getActiveFilters,\n  getAppliedFilterValues,\n} from 'src/dashboard/util/activeDashboardFilters';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport Chart from 'src/dashboard/components/gridComponents/Chart';\nimport { PLACEHOLDER_DATASOURCE } from 'src/dashboard/constants';\n\nconst EMPTY_OBJECT = {};\n\nfunction mapStateToProps(\n  {\n    charts: chartQueries,\n    dashboardInfo,\n    dashboardState,\n    dashboardLayout,\n    dataMask,\n    datasources,\n    sliceEntities,\n    nativeFilters,\n    common,\n  },\n  ownProps,\n) {\n  const { id } = ownProps;\n  const chart = chartQueries[id] || EMPTY_OBJECT;\n  const datasource =\n    (chart && chart.form_data && datasources[chart.form_data.datasource]) ||\n    PLACEHOLDER_DATASOURCE;\n  const { colorScheme, colorNamespace } = dashboardState;\n  const labelColors = dashboardInfo?.metadata?.label_colors || {};\n  // note: this method caches filters if possible to prevent render cascades\n  const formData = getFormDataWithExtraFilters({\n    layout: dashboardLayout.present,\n    chart,\n    // eslint-disable-next-line camelcase\n    chartConfiguration: dashboardInfo.metadata?.chart_configuration,\n    charts: chartQueries,\n    filters: getAppliedFilterValues(id),\n    colorScheme,\n    colorNamespace,\n    sliceId: id,\n    nativeFilters,\n    dataMask,\n    labelColors,\n  });\n\n  formData.dashboardId = dashboardInfo.id;\n\n  return {\n    chart,\n    datasource,\n    labelColors,\n    slice: sliceEntities.slices[id],\n    timeout: dashboardInfo.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    filters: getActiveFilters() || EMPTY_OBJECT,\n    formData,\n    editMode: dashboardState.editMode,\n    isExpanded: !!dashboardState.expandedSlices[id],\n    supersetCanExplore: !!dashboardInfo.superset_can_explore,\n    supersetCanShare: !!dashboardInfo.superset_can_share,\n    supersetCanCSV: !!dashboardInfo.superset_can_csv,\n    sliceCanEdit: !!dashboardInfo.slice_can_edit,\n    ownState: dataMask[id]?.ownState,\n    filterState: dataMask[id]?.filterState,\n    maxRows: common.conf.SQL_MAX_ROW,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      updateComponents,\n      addSuccessToast,\n      addDangerToast,\n      toggleExpandSlice,\n      changeFilter,\n      setFocusedFilterField,\n      unsetFocusedFilterField,\n      refreshChart,\n      logEvent,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n"]},"metadata":{},"sourceType":"module"}