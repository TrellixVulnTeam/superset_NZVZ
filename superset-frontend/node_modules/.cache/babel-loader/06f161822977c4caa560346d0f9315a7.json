{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/annotation/AnnotationList.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport Button from 'src/components/Button';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView from 'src/components/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\nimport AnnotationModal from './AnnotationModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nfunction AnnotationList({ addDangerToast, addSuccessToast }) {\n  const { annotationLayerId } = useParams();\n  const { state: { loading, resourceCount: annotationsCount, resourceCollection: annotations, bulkSelectEnabled }, fetchData, refreshData, toggleBulkSelect } = useListViewResource(`annotation_layer/${annotationLayerId}/annotation`, t('annotation'), addDangerToast, false);\n  const [annotationModalOpen, setAnnotationModalOpen] = useState(false);\n  const [annotationLayerName, setAnnotationLayerName] = useState('');\n  const [currentAnnotation, setCurrentAnnotation] = useState(null);\n  const [annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting] = useState(null);\n  const handleAnnotationEdit = (annotation) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n  const fetchAnnotationLayer = useCallback(async function fetchAnnotationLayer() {\n    try {\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/annotation_layer/${annotationLayerId}` });\n\n      setAnnotationLayerName(response.json.result.name);\n    }\n    catch (response) {\n      await getClientErrorObject(response).then(({ error }) => {\n        addDangerToast(error.error || error.statusText || error);\n      });\n    }\n  }, [annotationLayerId]);\n  const handleAnnotationDelete = ({ id, short_descr }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}` }).\n    then(() => {\n      refreshData();\n      setAnnotationCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', short_descr));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', short_descr, errMsg))));\n  };\n  const handleBulkAnnotationsDelete = (annotationsToDelete) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(annotationsToDelete.map(({ id }) => id))}` }).\n    then(({ json = {} }) => {\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected annotations: %s', errMsg))));\n  };\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'short_descr',\n    Header: t('Label') },\n\n  {\n    accessor: 'long_descr',\n    Header: t('Description') },\n\n  {\n    Cell: ({ row: { original: { start_dttm: startDttm } } }) => moment(new Date(startDttm)).format('ll'),\n    Header: t('Start'),\n    accessor: 'start_dttm' },\n\n  {\n    Cell: ({ row: { original: { end_dttm: endDttm } } }) => moment(new Date(endDttm)).format('ll'),\n    Header: t('End'),\n    accessor: 'end_dttm' },\n\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => handleAnnotationEdit(original);\n      const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n      const actions = [\n      {\n        label: 'edit-action',\n        tooltip: t('Edit annotation'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit },\n\n      {\n        label: 'delete-action',\n        tooltip: t('Delete annotation'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete }];\n\n\n      return ___EmotionJSX(ActionsBar, { actions: actions, __self: this, __source: { fileName: _jsxFileName, lineNumber: 121, columnNumber: 24 } });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true }],\n\n  [true, true]);\n  const subMenuButtons = [];\n  subMenuButtons.push({\n    name: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 131, columnNumber: 9 } }), \" \", t('Annotation')),\n\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    } });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select' });\n\n  const StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: 16px;\n      font-size: 12px;\n      font-weight: normal;\n      text-decoration: underline;\n    }\n  `;\n  let hasHistory = true;\n  try {\n    useHistory();\n  }\n  catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n  const EmptyStateButton = ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: () => {\n      handleAnnotationEdit(null);\n    }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 164, columnNumber: 31 } },\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"i\", { className: \"fa fa-plus\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 168, columnNumber: 9 } }), \" \", t('Annotation')));\n\n\n  const emptyState = {\n    message: t('No annotation yet'),\n    slot: EmptyStateButton };\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { name: ___EmotionJSX(StyledHeader, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 176, columnNumber: 22 } },\n    ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 177, columnNumber: 13 } }, t(`Annotation Layer ${annotationLayerName}`)),\n    ___EmotionJSX(\"span\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 178, columnNumber: 13 } },\n    hasHistory ? ___EmotionJSX(Link, { to: \"/annotationlayermodelview/list/\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 179, columnNumber: 30 } }, \"Back to all\") : ___EmotionJSX(\"a\", { href: \"/annotationlayermodelview/list/\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 179, columnNumber: 96 } }, \"Back to all\"))),\n\n    buttons: subMenuButtons, __self: this, __source: { fileName: _jsxFileName, lineNumber: 176, columnNumber: 7 } }),\n  ___EmotionJSX(AnnotationModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, annotation: currentAnnotation, show: annotationModalOpen, onAnnotationAdd: () => refreshData(), annnotationLayerId: annotationLayerId, onHide: () => setAnnotationModalOpen(false), __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 7 } }),\n  annotationCurrentlyDeleting && ___EmotionJSX(DeleteModal, { description: t(`Are you sure you want to delete ${annotationCurrentlyDeleting == null ? void 0 : annotationCurrentlyDeleting.short_descr}?`), onConfirm: () => {\n      if (annotationCurrentlyDeleting) {\n        handleAnnotationDelete(annotationCurrentlyDeleting);\n      }\n    }, onHide: () => setAnnotationCurrentlyDeleting(null), open: true, title: t('Delete Annotation?'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 183, columnNumber: 40 } }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected annotations?'), onConfirm: handleBulkAnnotationsDelete, __self: this, __source: { fileName: _jsxFileName, lineNumber: 188, columnNumber: 7 } },\n  (confirmDelete) => {\n    const bulkActions = [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger' }];\n\n\n    return ___EmotionJSX(ListView, { className: \"annotations-list-view\", bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, columns: columns, count: annotationsCount, data: annotations, disableBulkSelect: toggleBulkSelect, emptyState: emptyState, fetchData: fetchData, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, __self: this, __source: { fileName: _jsxFileName, lineNumber: 198, columnNumber: 21 } });\n  }));\n\n\n}__signature__(AnnotationList, \"useParams{{ annotationLayerId }}\\nuseListViewResource{{ state: { loading, resourceCount: annotationsCount, resourceCollection: annotations, bulkSelectEnabled, }, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[annotationModalOpen, setAnnotationModalOpen](false)}\\nuseState{[annotationLayerName, setAnnotationLayerName]('')}\\nuseState{[currentAnnotation, setCurrentAnnotation,](null)}\\nuseState{[annotationCurrentlyDeleting, setAnnotationCurrentlyDeleting,](null)}\\nuseCallback{fetchAnnotationLayer}\\nuseEffect{}\\nuseMemo{columns}\\nuseHistory{}\", () => [useParams, useListViewResource, useHistory]);const _default =\nwithToasts(AnnotationList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/annotation/AnnotationList.tsx\");reactHotLoader.register(AnnotationList, \"AnnotationList\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/annotation/AnnotationList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/annotation/AnnotationList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/annotation/AnnotationList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport moment from 'moment';\nimport rison from 'rison';\n\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport Button from 'src/components/Button';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ListView, { ListViewProps } from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/components/Menu/SubMenu';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\nimport { AnnotationObject } from './types';\nimport AnnotationModal from './AnnotationModal';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\nfunction AnnotationList({\n  addDangerToast,\n  addSuccessToast,\n}: AnnotationListProps) {\n  const { annotationLayerId }: any = useParams();\n  const {\n    state: {\n      loading,\n      resourceCount: annotationsCount,\n      resourceCollection: annotations,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationObject>(\n    `annotation_layer/${annotationLayerId}/annotation`,\n    t('annotation'),\n    addDangerToast,\n    false,\n  );\n  const [annotationModalOpen, setAnnotationModalOpen] = useState<boolean>(\n    false,\n  );\n  const [annotationLayerName, setAnnotationLayerName] = useState<string>('');\n  const [\n    currentAnnotation,\n    setCurrentAnnotation,\n  ] = useState<AnnotationObject | null>(null);\n  const [\n    annotationCurrentlyDeleting,\n    setAnnotationCurrentlyDeleting,\n  ] = useState<AnnotationObject | null>(null);\n  const handleAnnotationEdit = (annotation: AnnotationObject | null) => {\n    setCurrentAnnotation(annotation);\n    setAnnotationModalOpen(true);\n  };\n\n  const fetchAnnotationLayer = useCallback(\n    async function fetchAnnotationLayer() {\n      try {\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/annotation_layer/${annotationLayerId}`,\n        });\n        setAnnotationLayerName(response.json.result.name);\n      } catch (response) {\n        await getClientErrorObject(response).then(({ error }: any) => {\n          addDangerToast(error.error || error.statusText || error);\n        });\n      }\n    },\n    [annotationLayerId],\n  );\n\n  const handleAnnotationDelete = ({ id, short_descr }: AnnotationObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setAnnotationCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', short_descr));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting %s: %s', short_descr, errMsg),\n        ),\n      ),\n    );\n  };\n\n  const handleBulkAnnotationsDelete = (\n    annotationsToDelete: AnnotationObject[],\n  ) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${annotationLayerId}/annotation/?q=${rison.encode(\n        annotationsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected annotations: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  // get the Annotation Layer\n  useEffect(() => {\n    fetchAnnotationLayer();\n  }, [fetchAnnotationLayer]);\n\n  const initialSort = [{ id: 'short_descr', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'short_descr',\n        Header: t('Label'),\n      },\n      {\n        accessor: 'long_descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { start_dttm: startDttm },\n          },\n        }: any) => moment(new Date(startDttm)).format('ll'),\n        Header: t('Start'),\n        accessor: 'start_dttm',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { end_dttm: endDttm },\n          },\n        }: any) => moment(new Date(endDttm)).format('ll'),\n        Header: t('End'),\n        accessor: 'end_dttm',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationEdit(original);\n          const handleDelete = () => setAnnotationCurrentlyDeleting(original);\n          const actions = [\n            {\n              label: 'edit-action',\n              tooltip: t('Edit annotation'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'delete-action',\n              tooltip: t('Delete annotation'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ];\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [true, true],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    onClick: () => {\n      handleAnnotationEdit(null);\n    },\n  });\n\n  subMenuButtons.push({\n    name: t('Bulk select'),\n    onClick: toggleBulkSelect,\n    buttonStyle: 'secondary',\n    'data-test': 'annotation-bulk-select',\n  });\n\n  const StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    a,\n    Link {\n      margin-left: 16px;\n      font-size: 12px;\n      font-weight: normal;\n      text-decoration: underline;\n    }\n  `;\n\n  let hasHistory = true;\n\n  try {\n    useHistory();\n  } catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n\n  const EmptyStateButton = (\n    <Button\n      buttonStyle=\"primary\"\n      onClick={() => {\n        handleAnnotationEdit(null);\n      }}\n    >\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation')}\n      </>\n    </Button>\n  );\n\n  const emptyState = {\n    message: t('No annotation yet'),\n    slot: EmptyStateButton,\n  };\n\n  return (\n    <>\n      <SubMenu\n        name={\n          <StyledHeader>\n            <span>{t(`Annotation Layer ${annotationLayerName}`)}</span>\n            <span>\n              {hasHistory ? (\n                <Link to=\"/annotationlayermodelview/list/\">Back to all</Link>\n              ) : (\n                <a href=\"/annotationlayermodelview/list/\">Back to all</a>\n              )}\n            </span>\n          </StyledHeader>\n        }\n        buttons={subMenuButtons}\n      />\n      <AnnotationModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        annotation={currentAnnotation}\n        show={annotationModalOpen}\n        onAnnotationAdd={() => refreshData()}\n        annnotationLayerId={annotationLayerId}\n        onHide={() => setAnnotationModalOpen(false)}\n      />\n      {annotationCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            `Are you sure you want to delete ${annotationCurrentlyDeleting?.short_descr}?`,\n          )}\n          onConfirm={() => {\n            if (annotationCurrentlyDeleting) {\n              handleAnnotationDelete(annotationCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setAnnotationCurrentlyDeleting(null)}\n          open\n          title={t('Delete Annotation?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected annotations?',\n        )}\n        onConfirm={handleBulkAnnotationsDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [\n            {\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            },\n          ];\n\n          return (\n            <ListView<AnnotationObject>\n              className=\"annotations-list-view\"\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              columns={columns}\n              count={annotationsCount}\n              data={annotations}\n              disableBulkSelect={toggleBulkSelect}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}