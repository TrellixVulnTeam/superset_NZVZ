{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\nconst CssTemplateModal = ({ addDangerToast, onCssTemplateAdd, onHide, show, cssTemplate = null }) => {\n  const [disableSave, setDisableSave] = useState(true);\n  const [currentCssTemplate, setCurrentCssTemplate] = useState(null);\n  const [isHidden, setIsHidden] = useState(true);\n  const isEditMode = cssTemplate !== null;\n  // cssTemplate fetch logic\n  const { state: { loading, resource }, fetchResource, createResource, updateResource } = useSingleViewResource('css_template', t('css_template'), addDangerToast);\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate && currentCssTemplate.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then((response) => {\n          if (!response) {\n            return;\n          }\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n          hide();\n        });\n      }\n    } else\n    if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then((response) => {\n        if (!response) {\n          return;\n        }\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n        hide();\n      });\n    }\n  };\n  const onTemplateNameChange = (event) => {\n    const { target } = event;\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '' };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n  const onCssChange = (css) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css };\n\n    setCurrentCssTemplate(data);\n  };\n  const validate = () => {\n    if (currentCssTemplate &&\n    currentCssTemplate.template_name.length &&\n    currentCssTemplate.css &&\n    currentCssTemplate.css.length) {\n      setDisableSave(false);\n    } else\n    {\n      setDisableSave(true);\n    }\n  };\n  // Initialize\n  useEffect(() => {\n    if (isEditMode && (\n    !currentCssTemplate ||\n    !currentCssTemplate.id ||\n    cssTemplate && cssTemplate.id !== currentCssTemplate.id ||\n    isHidden && show)) {\n      if (cssTemplate && cssTemplate.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n        fetchResource(id);\n      }\n    } else\n    if (!isEditMode && (\n    !currentCssTemplate || currentCssTemplate.id || isHidden && show)) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '' });\n\n    }\n  }, [cssTemplate]);\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n  currentCssTemplate ? currentCssTemplate.template_name : '',\n  currentCssTemplate ? currentCssTemplate.css : '']);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: hide, primaryButtonName: isEditMode ? t('Save') : t('Add'), show: show, width: \"55%\", title: ___EmotionJSX(\"h4\", { \"data-test\": \"css-template-modal-title\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 163, columnNumber: 186 } },\n    isEditMode ? ___EmotionJSX(Icons.EditAlt, { css: StyledIcon, __self: this, __source: { fileName: _jsxFileName, lineNumber: 164, columnNumber: 26 } }) : ___EmotionJSX(Icons.PlusLarge, { css: StyledIcon, __self: this, __source: { fileName: _jsxFileName, lineNumber: 164, columnNumber: 64 } }),\n    isEditMode ?\n    t('Edit CSS template properties') :\n    t('Add CSS template')), __self: this, __source: { fileName: _jsxFileName, lineNumber: 163, columnNumber: 13 } },\n\n  ___EmotionJSX(StyledCssTemplateTitle, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 169, columnNumber: 7 } },\n  ___EmotionJSX(\"h4\", { __self: this, __source: { fileName: _jsxFileName, lineNumber: 170, columnNumber: 9 } }, t('Basic information'))),\n\n  ___EmotionJSX(TemplateContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 172, columnNumber: 7 } },\n  ___EmotionJSX(\"div\", { className: \"control-label\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 173, columnNumber: 9 } },\n  t('CSS template name'),\n  ___EmotionJSX(\"span\", { className: \"required\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 175, columnNumber: 11 } }, \"*\")),\n\n  ___EmotionJSX(\"input\", { name: \"template_name\", onChange: onTemplateNameChange, type: \"text\", value: currentCssTemplate == null ? void 0 : currentCssTemplate.template_name, __self: this, __source: { fileName: _jsxFileName, lineNumber: 177, columnNumber: 9 } })),\n\n  ___EmotionJSX(TemplateContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 179, columnNumber: 7 } },\n  ___EmotionJSX(\"div\", { className: \"control-label\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 180, columnNumber: 9 } },\n  t('css'),\n  ___EmotionJSX(\"span\", { className: \"required\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 182, columnNumber: 11 } }, \"*\")),\n\n  ___EmotionJSX(StyledCssEditor, { onChange: onCssChange, value: currentCssTemplate == null ? void 0 : currentCssTemplate.css, width: \"100%\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 184, columnNumber: 9 } })));\n\n\n};__signature__(CssTemplateModal, \"useState{[disableSave, setDisableSave](true)}\\nuseState{[currentCssTemplate, setCurrentCssTemplate,](null)}\\nuseState{[isHidden, setIsHidden](true)}\\nuseSingleViewResource{{ state: { loading, resource }, fetchResource, createResource, updateResource, }}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useSingleViewResource]);const _default =\nwithToasts(CssTemplateModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCssTemplateTitle, \"StyledCssTemplateTitle\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\");reactHotLoader.register(StyledCssEditor, \"StyledCssEditor\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\");reactHotLoader.register(TemplateContainer, \"TemplateContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\");reactHotLoader.register(CssTemplateModal, \"CssTemplateModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/views/CRUD/csstemplates/CssTemplateModal.tsx"],"names":[],"mappings":"gaAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAmC,QAAnC,EAA6C,SAA7C,QAA8D,OAA9D;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,SAAS,qBAAT,QAAsC,sBAAtC;AAEA,OAAO,KAAP,MAAkB,sBAAlB;AACA,SAAS,UAAT,QAA2B,sBAA3B;AACA,OAAO,KAAP,MAAkB,sBAAlB;AACA,OAAO,UAAP,MAAuB,yCAAvB;AACA,SAAS,SAAT,QAA0B,+BAA1B,C;AAYA,MAAM,sBAAsB,GAAG,MAAM,CAAC,GAAG;YAC7B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;MACvC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;AACtC,CAHD;AAKA,MAAM,eAAe,GAAG,MAAM,CAAC,SAAD,CAAW;mBACtB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,YAAY;sBAC9B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;AACjE,CAHD;AAKA,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG;mBACjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,EAAE;;;qBAGhC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;;mBAInC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;aACvC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,IAAI;;;;eAIpC,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,GAAG;QAC1C,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;wBACjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;qBAC/C,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAQ;;;AAGjD,CAnBD;AAqBA,MAAM,gBAAgB,GAA6C,CAAC,EAClE,cADkE,EAElE,gBAFkE,EAGlE,MAHkE,EAIlE,IAJkE,EAKlE,WAAW,GAAG,IALoD,EAAD,KAM9D;AACH,QAAM,CAAC,WAAD,EAAc,cAAd,IAAgC,QAAQ,CAAU,IAAV,CAA9C;AACA,QAAM,CACJ,kBADI,EAEJ,qBAFI,IAGF,QAAQ,CAAwB,IAAxB,CAHZ;AAIA,QAAM,CAAC,QAAD,EAAW,WAAX,IAA0B,QAAQ,CAAU,IAAV,CAAxC;AACA,QAAM,UAAU,GAAG,WAAW,KAAK,IAAnC;AAEA;AACA,QAAM,EACJ,KAAK,EAAE,EAAE,OAAF,EAAW,QAAX,EADH,EAEJ,aAFI,EAGJ,cAHI,EAIJ,cAJI,KAKF,qBAAqB,CACvB,cADuB,EAEvB,CAAC,CAAC,cAAD,CAFsB,EAGvB,cAHuB,CALzB;AAWA;AACA,QAAM,IAAI,GAAG,MAAK;AAChB,IAAA,WAAW,CAAC,IAAD,CAAX;AACA,IAAA,MAAM;AACP,GAHD;AAKA,QAAM,MAAM,GAAG,MAAK;AAClB,QAAI,UAAJ,EAAgB;AACd;AACA,UAAI,kBAAkB,IAAI,kBAAkB,CAAC,EAA7C,EAAiD;AAC/C,cAAM,SAAS,GAAG,kBAAkB,CAAC,EAArC;AACA,eAAO,kBAAkB,CAAC,EAA1B;AACA,eAAO,kBAAkB,CAAC,UAA1B;AACA,QAAA,cAAc,CAAC,SAAD,EAAY,kBAAZ,CAAd,CAA8C,IAA9C,CAAmD,CAAA,QAAQ,KAAG;AAC5D,cAAI,CAAC,QAAL,EAAe;AACb;AACD;AAED,cAAI,gBAAJ,EAAsB;AACpB,YAAA,gBAAgB;AACjB;AAED,UAAA,IAAI;AACL,SAVD;AAWD;AACF,KAlBD;AAkBO,QAAI,kBAAJ,EAAwB;AAC7B;AACA,MAAA,cAAc,CAAC,kBAAD,CAAd,CAAmC,IAAnC,CAAwC,CAAA,QAAQ,KAAG;AACjD,YAAI,CAAC,QAAL,EAAe;AACb;AACD;AAED,YAAI,gBAAJ,EAAsB;AACpB,UAAA,gBAAgB;AACjB;AAED,QAAA,IAAI;AACL,OAVD;AAWD;AACF,GAjCD;AAmCA,QAAM,oBAAoB,GAAG,CAAC,KAAD,KAA+C;AAC1E,UAAM,EAAE,MAAF,KAAa,KAAnB;AAEA,UAAM,IAAI,GAAG;AACX,SAAG,kBADQ;AAEX,MAAA,aAAa,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,aAAtB,GAAsC,EAF5D;AAGX,MAAA,GAAG,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,GAAtB,GAA4B,EAHxC,EAAb;;AAMA,IAAA,IAAI,CAAC,MAAM,CAAC,IAAR,CAAJ,GAAoB,MAAM,CAAC,KAA3B;AACA,IAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAXD;AAaA,QAAM,WAAW,GAAG,CAAC,GAAD,KAAgB;AAClC,UAAM,IAAI,GAAG;AACX,SAAG,kBADQ;AAEX,MAAA,aAAa,EAAE,kBAAkB,GAAG,kBAAkB,CAAC,aAAtB,GAAsC,EAF5D;AAGX,MAAA,GAHW,EAAb;;AAKA,IAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAPD;AASA,QAAM,QAAQ,GAAG,MAAK;AACpB,QACE,kBAAkB;AAClB,IAAA,kBAAkB,CAAC,aAAnB,CAAiC,MADjC;AAEA,IAAA,kBAAkB,CAAC,GAFnB;AAGA,IAAA,kBAAkB,CAAC,GAAnB,CAAuB,MAJzB,EAKE;AACA,MAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAPD;AAOO;AACL,MAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAXD;AAaA;AACA,EAAA,SAAS,CAAC,MAAK;AACb,QACE,UAAU;AACT,KAAC,kBAAD;AACC,KAAC,kBAAkB,CAAC,EADrB;AAEE,IAAA,WAAW,IAAI,WAAW,CAAC,EAAZ,KAAmB,kBAAkB,CAAC,EAFvD;AAGE,IAAA,QAAQ,IAAI,IAJL,CADZ,EAME;AACA,UAAI,WAAW,IAAI,WAAW,CAAC,EAAZ,KAAmB,IAAlC,IAA0C,CAAC,OAA/C,EAAwD;AACtD,cAAM,EAAE,GAAG,WAAW,CAAC,EAAZ,IAAkB,CAA7B;AAEA,QAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAZD;AAYO,QACL,CAAC,UAAD;AACC,KAAC,kBAAD,IAAuB,kBAAkB,CAAC,EAA1C,IAAiD,QAAQ,IAAI,IAD9D,CADK,EAGL;AACA,MAAA,qBAAqB,CAAC;AACpB,QAAA,aAAa,EAAE,EADK;AAEpB,QAAA,GAAG,EAAE,EAFe,EAAD,CAArB;;AAID;AACF,GAtBQ,EAsBN,CAAC,WAAD,CAtBM,CAAT;AAwBA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,QAAJ,EAAc;AACZ,MAAA,qBAAqB,CAAC,QAAD,CAArB;AACD;AACF,GAJQ,EAIN,CAAC,QAAD,CAJM,CAAT;AAMA;AACA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,QAAQ;AACT,GAFQ,EAEN;AACD,EAAA,kBAAkB,GAAG,kBAAkB,CAAC,aAAtB,GAAsC,EADvD;AAED,EAAA,kBAAkB,GAAG,kBAAkB,CAAC,GAAtB,GAA4B,EAF7C,CAFM,CAAT;;AAOA;AACA,MAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,IAAA,WAAW,CAAC,KAAD,CAAX;AACD;AAED,SACE,cAAC,KAAD,IACE,oBAAoB,EAAE,WADxB,EAEE,sBAAsB,EAAE,MAF1B,EAGE,MAAM,EAAE,IAHV,EAIE,iBAAiB,EAAE,UAAU,GAAG,CAAC,CAAC,MAAD,CAAJ,GAAe,CAAC,CAAC,KAAD,CAJ/C,EAKE,IAAI,EAAE,IALR,EAME,KAAK,EAAC,KANR,EAOE,KAAK,EACH,sBAAI,aAAU,0BAAd;AACG,IAAA,UAAU,GACT,cAAC,KAAD,CAAO,OAAP,IAAe,GAAG,EAAE,UAApB,0FADS,GAGT,cAAC,KAAD,CAAO,SAAP,IAAiB,GAAG,EAAE,UAAtB,0FAJJ;AAMG,IAAA,UAAU;AACP,IAAA,CAAC,CAAC,8BAAD,CADM;AAEP,IAAA,CAAC,CAAC,kBAAD,CARP,CARJ;;AAoBE,gBAAC,sBAAD;AACE,gHAAK,CAAC,CAAC,mBAAD,CAAN,CADF,CApBF;;AAuBE,gBAAC,iBAAD;AACE,yBAAK,SAAS,EAAC,eAAf;AACG,EAAA,CAAC,CAAC,mBAAD,CADJ;AAEE,0BAAM,SAAS,EAAC,UAAhB,+FAFF,CADF;;AAKE,2BACE,IAAI,EAAC,eADP,EAEE,QAAQ,EAAE,oBAFZ,EAGE,IAAI,EAAC,MAHP,EAIE,KAAK,EAAE,kBAAF,oBAAE,kBAAkB,CAAE,aAJ7B,yFALF,CAvBF;;AAmCE,gBAAC,iBAAD;AACE,yBAAK,SAAS,EAAC,eAAf;AACG,EAAA,CAAC,CAAC,KAAD,CADJ;AAEE,0BAAM,SAAS,EAAC,UAAhB,+FAFF,CADF;;AAKE,gBAAC,eAAD,IACE,QAAQ,EAAE,WADZ,EAEE,KAAK,EAAE,kBAAF,oBAAE,kBAAkB,CAAE,GAF7B,EAGE,KAAK,EAAC,MAHR,yFALF,CAnCF,CADF;;;AAiDD,CApMD,C,cAAM,gB,iTAqBA,qB;AAiLS,UAAU,CAAC,gBAAD,C,CAAzB,wB,iLArOM,sB,0JAKA,e,mJAKA,iB,qJAqBA,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { StyledIcon } from 'src/views/CRUD/utils';\nimport Modal from 'src/components/Modal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { CssEditor } from 'src/components/AsyncAceEditor';\n\nimport { TemplateObject } from './types';\n\ninterface CssTemplateModalProps {\n  addDangerToast: (msg: string) => void;\n  cssTemplate?: TemplateObject | null;\n  onCssTemplateAdd?: (cssTemplate?: TemplateObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledCssTemplateTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n`;\n\nconst StyledCssEditor = styled(CssEditor)`\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary.light2};\n`;\n\nconst TemplateContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 10}px;\n\n  .control-label {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  input[type='text'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    width: 50%;\n  }\n`;\n\nconst CssTemplateModal: FunctionComponent<CssTemplateModalProps> = ({\n  addDangerToast,\n  onCssTemplateAdd,\n  onHide,\n  show,\n  cssTemplate = null,\n}) => {\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [\n    currentCssTemplate,\n    setCurrentCssTemplate,\n  ] = useState<TemplateObject | null>(null);\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const isEditMode = cssTemplate !== null;\n\n  // cssTemplate fetch logic\n  const {\n    state: { loading, resource },\n    fetchResource,\n    createResource,\n    updateResource,\n  } = useSingleViewResource<TemplateObject>(\n    'css_template',\n    t('css_template'),\n    addDangerToast,\n  );\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n  };\n\n  const onSave = () => {\n    if (isEditMode) {\n      // Edit\n      if (currentCssTemplate && currentCssTemplate.id) {\n        const update_id = currentCssTemplate.id;\n        delete currentCssTemplate.id;\n        delete currentCssTemplate.created_by;\n        updateResource(update_id, currentCssTemplate).then(response => {\n          if (!response) {\n            return;\n          }\n\n          if (onCssTemplateAdd) {\n            onCssTemplateAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentCssTemplate) {\n      // Create\n      createResource(currentCssTemplate).then(response => {\n        if (!response) {\n          return;\n        }\n\n        if (onCssTemplateAdd) {\n          onCssTemplateAdd();\n        }\n\n        hide();\n      });\n    }\n  };\n\n  const onTemplateNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css: currentCssTemplate ? currentCssTemplate.css : '',\n    };\n\n    data[target.name] = target.value;\n    setCurrentCssTemplate(data);\n  };\n\n  const onCssChange = (css: string) => {\n    const data = {\n      ...currentCssTemplate,\n      template_name: currentCssTemplate ? currentCssTemplate.template_name : '',\n      css,\n    };\n    setCurrentCssTemplate(data);\n  };\n\n  const validate = () => {\n    if (\n      currentCssTemplate &&\n      currentCssTemplate.template_name.length &&\n      currentCssTemplate.css &&\n      currentCssTemplate.css.length\n    ) {\n      setDisableSave(false);\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentCssTemplate ||\n        !currentCssTemplate.id ||\n        (cssTemplate && cssTemplate.id !== currentCssTemplate.id) ||\n        (isHidden && show))\n    ) {\n      if (cssTemplate && cssTemplate.id !== null && !loading) {\n        const id = cssTemplate.id || 0;\n\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentCssTemplate || currentCssTemplate.id || (isHidden && show))\n    ) {\n      setCurrentCssTemplate({\n        template_name: '',\n        css: '',\n      });\n    }\n  }, [cssTemplate]);\n\n  useEffect(() => {\n    if (resource) {\n      setCurrentCssTemplate(resource);\n    }\n  }, [resource]);\n\n  // Validation\n  useEffect(() => {\n    validate();\n  }, [\n    currentCssTemplate ? currentCssTemplate.template_name : '',\n    currentCssTemplate ? currentCssTemplate.css : '',\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={isEditMode ? t('Save') : t('Add')}\n      show={show}\n      width=\"55%\"\n      title={\n        <h4 data-test=\"css-template-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode\n            ? t('Edit CSS template properties')\n            : t('Add CSS template')}\n        </h4>\n      }\n    >\n      <StyledCssTemplateTitle>\n        <h4>{t('Basic information')}</h4>\n      </StyledCssTemplateTitle>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('CSS template name')}\n          <span className=\"required\">*</span>\n        </div>\n        <input\n          name=\"template_name\"\n          onChange={onTemplateNameChange}\n          type=\"text\"\n          value={currentCssTemplate?.template_name}\n        />\n      </TemplateContainer>\n      <TemplateContainer>\n        <div className=\"control-label\">\n          {t('css')}\n          <span className=\"required\">*</span>\n        </div>\n        <StyledCssEditor\n          onChange={onCssChange}\n          value={currentCssTemplate?.css}\n          width=\"100%\"\n        />\n      </TemplateContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(CssTemplateModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}