{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/CardSortSelect.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { SELECT_WIDTH } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  align-items: center;\n  text-align: left;\n  width: ${SELECT_WIDTH}px;\n`;\nexport const CardSortSelect = ({ initialSort, onChange, options, pageIndex, pageSize }) => {\n  const defaultSort = initialSort && options.find(({ id }) => id === initialSort[0].id) ||\n  options[0];\n  const [value, setValue] = useState({\n    label: defaultSort.label,\n    value: defaultSort.value });\n\n  const formattedOptions = useMemo(() => options.map((option) => ({ label: option.label, value: option.value })), [options]);\n  const handleOnChange = (selected) => {\n    setValue(selected);\n    const originalOption = options.find(({ value }) => value === selected.value);\n    if (originalOption) {\n      const sortBy = [\n      {\n        id: originalOption.id,\n        desc: originalOption.desc }];\n\n\n      onChange({ pageIndex, pageSize, sortBy, filters: [] });\n    }\n  };\n  return ___EmotionJSX(SortContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 52, columnNumber: 13 } },\n  ___EmotionJSX(Select, { ariaLabel: t('Sort'), header: ___EmotionJSX(FormLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 53, columnNumber: 45 } }, t('Sort')), labelInValue: true, onChange: (value) => handleOnChange(value), options: formattedOptions, showSearch: true, value: value, __self: this, __source: { fileName: _jsxFileName, lineNumber: 53, columnNumber: 7 } }));\n\n};__signature__(CardSortSelect, \"useState{[value, setValue]({\\n        label: defaultSort.label,\\n        value: defaultSort.value,\\n    })}\\nuseMemo{formattedOptions}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortContainer, \"SortContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/CardSortSelect.tsx\");reactHotLoader.register(CardSortSelect, \"CardSortSelect\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/CardSortSelect.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/CardSortSelect.tsx"],"names":[],"mappings":"0ZAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,EAA0B,OAA1B,QAAyC,OAAzC;AACA,SAAS,MAAT,EAAiB,CAAjB,QAA0B,mBAA1B;AACA,SAAS,MAAT,QAAuB,gBAAvB;AACA,SAAS,SAAT,QAA0B,qBAA1B;AACA,SAAS,YAAT,QAA6B,SAA7B,C;AAGA,MAAM,aAAa,GAAG,MAAM,CAAC,GAAG;;eAEjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,CAAC;;;WAG3C,YAAY;AACtB,CAND;AAgBA,OAAO,MAAM,cAAc,GAAG,CAAC,EAC7B,WAD6B,EAE7B,QAF6B,EAG7B,OAH6B,EAI7B,SAJ6B,EAK7B,QAL6B,EAAD,KAMA;AAC5B,QAAM,WAAW,GACd,WAAW,IAAI,OAAO,CAAC,IAAR,CAAa,CAAC,EAAE,EAAF,EAAD,KAAY,EAAE,KAAK,WAAW,CAAC,CAAD,CAAX,CAAe,EAA/C,CAAhB;AACA,EAAA,OAAO,CAAC,CAAD,CAFT;AAIA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAC;AACjC,IAAA,KAAK,EAAE,WAAW,CAAC,KADc;AAEjC,IAAA,KAAK,EAAE,WAAW,CAAC,KAFc,EAAD,CAAlC;;AAKA,QAAM,gBAAgB,GAAG,OAAO,CAC9B,MAAM,OAAO,CAAC,GAAR,CAAY,CAAA,MAAM,MAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAhB,EAAuB,KAAK,EAAE,MAAM,CAAC,KAArC,EAAL,CAAlB,CADwB,EAE9B,CAAC,OAAD,CAF8B,CAAhC;AAKA,QAAM,cAAc,GAAG,CAAC,QAAD,KAA+C;AACpE,IAAA,QAAQ,CAAC,QAAD,CAAR;AACA,UAAM,cAAc,GAAG,OAAO,CAAC,IAAR,CACrB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,KAAK,QAAQ,CAAC,KADb,CAAvB;AAGA,QAAI,cAAJ,EAAoB;AAClB,YAAM,MAAM,GAAG;AACb;AACE,QAAA,EAAE,EAAE,cAAc,CAAC,EADrB;AAEE,QAAA,IAAI,EAAE,cAAc,CAAC,IAFvB,EADa,CAAf;;;AAMA,MAAA,QAAQ,CAAC,EAAE,SAAF,EAAa,QAAb,EAAuB,MAAvB,EAA+B,OAAO,EAAE,EAAxC,EAAD,CAAR;AACD;AACF,GAdD;AAgBA,SACE,cAAC,aAAD;AACE,gBAAC,MAAD,IACE,SAAS,EAAE,CAAC,CAAC,MAAD,CADd,EAEE,MAAM,EAAE,cAAC,SAAD,4FAAY,CAAC,CAAC,MAAD,CAAb,CAFV,EAGE,YAAY,MAHd,EAIE,QAAQ,EAAE,CAAC,KAAD,KAAiC,cAAc,CAAC,KAAD,CAJ3D,EAKE,OAAO,EAAE,gBALX,EAME,UAAU,MANZ,EAOE,KAAK,EAAE,KAPT,wFADF,CADF;;AAaD,CAlDM,C,cAAM,c,6TAhBP,a,2IAgBO,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { SELECT_WIDTH } from './utils';\nimport { CardSortSelectOption, FetchDataConfig, SortColumn } from './types';\n\nconst SortContainer = styled.div`\n  display: inline-flex;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  align-items: center;\n  text-align: left;\n  width: ${SELECT_WIDTH}px;\n`;\n\ninterface CardViewSelectSortProps {\n  onChange: (conf: FetchDataConfig) => any;\n  options: Array<CardSortSelectOption>;\n  initialSort?: SortColumn[];\n  pageIndex: number;\n  pageSize: number;\n}\n\nexport const CardSortSelect = ({\n  initialSort,\n  onChange,\n  options,\n  pageIndex,\n  pageSize,\n}: CardViewSelectSortProps) => {\n  const defaultSort =\n    (initialSort && options.find(({ id }) => id === initialSort[0].id)) ||\n    options[0];\n\n  const [value, setValue] = useState({\n    label: defaultSort.label,\n    value: defaultSort.value,\n  });\n\n  const formattedOptions = useMemo(\n    () => options.map(option => ({ label: option.label, value: option.value })),\n    [options],\n  );\n\n  const handleOnChange = (selected: { label: string; value: string }) => {\n    setValue(selected);\n    const originalOption = options.find(\n      ({ value }) => value === selected.value,\n    );\n    if (originalOption) {\n      const sortBy = [\n        {\n          id: originalOption.id,\n          desc: originalOption.desc,\n        },\n      ];\n      onChange({ pageIndex, pageSize, sortBy, filters: [] });\n    }\n  };\n\n  return (\n    <SortContainer>\n      <Select\n        ariaLabel={t('Sort')}\n        header={<FormLabel>{t('Sort')}</FormLabel>}\n        labelInValue\n        onChange={(value: CardSortSelectOption) => handleOnChange(value)}\n        options={formattedOptions}\n        showSearch\n        value={value}\n      />\n    </SortContainer>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}