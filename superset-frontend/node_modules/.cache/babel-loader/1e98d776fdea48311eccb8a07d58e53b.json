{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/OmniContainer/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useRef, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Modal from 'src/components/Modal';\nimport { useComponentDidMount } from 'src/common/hooks/useComponentDidMount';\nimport { logEvent } from 'src/logger/actions';\nimport { Omnibar } from './Omnibar';\nimport { LOG_ACTIONS_OMNIBAR_TRIGGERED } from '../../logger/LogUtils';\nimport { getDashboards } from './getDashboards';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst OmniModal = styled(Modal)`\n  margin-top: 20%;\n\n  .ant-modal-body {\n    padding: 0;\n    overflow: visible;\n  }\n`;\nexport default function OmniContainer() {\n  const showOmni = useRef();\n  const modalRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const handleLogEvent = (show) => logEvent(LOG_ACTIONS_OMNIBAR_TRIGGERED, {\n    show_omni: show });\n\n  const handleClose = () => {\n    showOmni.current = false;\n    setShowModal(false);\n    handleLogEvent(false);\n  };\n  useComponentDidMount(() => {\n    showOmni.current = false;\n    function handleKeydown(event) {\n      if (!isFeatureEnabled(FeatureFlag.OMNIBAR))\n      return;\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      const isOk = ['KeyK'].includes(event.code);\n      const isEsc = event.key === 'Escape';\n      if (isEsc && showOmni.current) {\n        handleClose();\n        return;\n      }\n      if (controlOrCommand && isOk) {\n        showOmni.current = !showOmni.current;\n        setShowModal(showOmni.current);\n        handleLogEvent(!!showOmni.current);\n      }\n    }\n    function handleClickOutside(event) {\n      if (modalRef.current &&\n      !modalRef.current.contains(event.target)) {\n        handleClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n  return ___EmotionJSX(OmniModal, { title: \"\", show: showModal, hideFooter: true, closable: false, onHide: () => {}, destroyOnClose: true, __self: this, __source: { fileName: _jsxFileName, lineNumber: 79, columnNumber: 13 } },\n  ___EmotionJSX(\"div\", { ref: modalRef, __self: this, __source: { fileName: _jsxFileName, lineNumber: 80, columnNumber: 7 } },\n  ___EmotionJSX(Omnibar, { id: \"InputOmnibar\", placeholder: t('Search all dashboards'), extensions: [getDashboards], __self: this, __source: { fileName: _jsxFileName, lineNumber: 81, columnNumber: 9 } })));\n\n\n}__signature__(OmniContainer, \"useRef{showOmni}\\nuseRef{modalRef}\\nuseState{[showModal, setShowModal](false)}\\nuseComponentDidMount{}\", () => [useComponentDidMount]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OmniModal, \"OmniModal\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/OmniContainer/index.tsx\");reactHotLoader.register(OmniContainer, \"OmniContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/OmniContainer/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/OmniContainer/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport Modal from 'src/components/Modal';\nimport { useComponentDidMount } from 'src/common/hooks/useComponentDidMount';\nimport { logEvent } from 'src/logger/actions';\nimport { Omnibar } from './Omnibar';\nimport { LOG_ACTIONS_OMNIBAR_TRIGGERED } from '../../logger/LogUtils';\nimport { getDashboards } from './getDashboards';\n\nconst OmniModal = styled(Modal)`\n  margin-top: 20%;\n\n  .ant-modal-body {\n    padding: 0;\n    overflow: visible;\n  }\n`;\n\nexport default function OmniContainer() {\n  const showOmni = useRef<boolean>();\n  const modalRef = useRef<HTMLDivElement>(null);\n  const [showModal, setShowModal] = useState(false);\n  const handleLogEvent = (show: boolean) =>\n    logEvent(LOG_ACTIONS_OMNIBAR_TRIGGERED, {\n      show_omni: show,\n    });\n  const handleClose = () => {\n    showOmni.current = false;\n    setShowModal(false);\n    handleLogEvent(false);\n  };\n\n  useComponentDidMount(() => {\n    showOmni.current = false;\n\n    function handleKeydown(event: KeyboardEvent) {\n      if (!isFeatureEnabled(FeatureFlag.OMNIBAR)) return;\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      const isOk = ['KeyK'].includes(event.code);\n      const isEsc = event.key === 'Escape';\n\n      if (isEsc && showOmni.current) {\n        handleClose();\n        return;\n      }\n      if (controlOrCommand && isOk) {\n        showOmni.current = !showOmni.current;\n        setShowModal(showOmni.current);\n        handleLogEvent(!!showOmni.current);\n      }\n    }\n\n    function handleClickOutside(event: MouseEvent) {\n      if (\n        modalRef.current &&\n        !modalRef.current.contains(event.target as Node)\n      ) {\n        handleClose();\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  return (\n    <OmniModal\n      title=\"\"\n      show={showModal}\n      hideFooter\n      closable={false}\n      onHide={() => {}}\n      destroyOnClose\n    >\n      <div ref={modalRef}>\n        <Omnibar\n          id=\"InputOmnibar\"\n          placeholder={t('Search all dashboards')}\n          extensions={[getDashboards]}\n        />\n      </div>\n    </OmniModal>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}