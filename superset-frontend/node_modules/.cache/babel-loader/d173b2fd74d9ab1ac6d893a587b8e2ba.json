{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * From https://stackoverflow.com/questions/36871299/how-to-extend-function-with-es6-classes\n */\nexport default class ExtensibleFunction extends Function {\n  constructor(fn) {\n    super(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return, no-constructor-return\n\n    return Object.setPrototypeOf(fn, new.target.prototype);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ExtensibleFunction, \"ExtensibleFunction\", \"/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/models/ExtensibleFunction.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/node_modules/@encodable/color/esm/models/ExtensibleFunction.js"],"names":["ExtensibleFunction","Function","constructor","fn","Object","setPrototypeOf","new","target","prototype"],"mappings":"wSAAA;AACA;AACA;AACA,eAAe,MAAMA,kBAAN,SAAiCC,QAAjC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,YADc,CACL;;AAET,WAAOC,MAAM,CAACC,cAAP,CAAsBF,EAAtB,EAA0BG,GAAG,CAACC,MAAJ,CAAWC,SAArC,CAAP;AACD,GALsD;AAAA;AAAA,6B,iLAApCR,kB","sourcesContent":["/**\n * From https://stackoverflow.com/questions/36871299/how-to-extend-function-with-es6-classes\n */\nexport default class ExtensibleFunction extends Function {\n  constructor(fn) {\n    super(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return, no-constructor-return\n\n    return Object.setPrototypeOf(fn, new.target.prototype);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}