{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();import _URLSearchParams from \"@babel/runtime-corejs3/core-js-stable/url-search-params\";var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * 'License'); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nimport { getClientErrorObject } from './getClientErrorObject';\nexport function getUrlParam({ name, type }) {\n  const urlParam = new _URLSearchParams(window.location.search).get(name);\n  switch (type) {\n    case 'number':\n      if (!urlParam) {\n        return null;\n      }\n      if (urlParam === 'true') {\n        return 1;\n      }\n      if (urlParam === 'false') {\n        return 0;\n      }\n      if (!Number.isNaN(Number(urlParam))) {\n        return Number(urlParam);\n      }\n      return null;\n    case 'object':\n      if (!urlParam) {\n        return null;\n      }\n      return JSON.parse(urlParam);\n    case 'boolean':\n      if (!urlParam) {\n        return null;\n      }\n      return urlParam !== 'false' && urlParam !== '0';\n    case 'rison':\n      if (!urlParam) {\n        return null;\n      }\n      try {\n        return rison.decode(urlParam);\n      }\n      catch {\n        return null;\n      }\n    default:\n      return urlParam;}\n\n}\nexport function getShortUrl(longUrl) {\n  return SupersetClient.post({\n    endpoint: '/r/shortner/',\n    postPayload: { data: `/${longUrl}` },\n    parseMethod: 'text',\n    stringify: false // the url saves with an extra set of string quotes without this\n  }).\n  then(({ text }) => text).\n  catch((response) =>\n  // @ts-ignore\n  getClientErrorObject(response).then(({ error, statusText }) => Promise.reject(error || statusText)));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getUrlParam, \"getUrlParam\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/urlUtils.ts\");reactHotLoader.register(getShortUrl, \"getShortUrl\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/urlUtils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/utils/urlUtils.ts"],"names":[],"mappings":"+XAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,oBAAT,QAAqC,wBAArC;AAUA,OAAM,SAAU,WAAV,CAAsB,EAAE,IAAF,EAAQ,IAAR,EAAtB,EAA8C;AAClD,QAAM,QAAQ,GAAG,qBAAoB,MAAM,CAAC,QAAP,CAAgB,MAApC,EAA4C,GAA5C,CAAgD,IAAhD,CAAjB;AACA,UAAQ,IAAR;AACE,SAAK,QAAL;AACE,UAAI,CAAC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;AACD,UAAI,QAAQ,KAAK,MAAjB,EAAyB;AACvB,eAAO,CAAP;AACD;AACD,UAAI,QAAQ,KAAK,OAAjB,EAA0B;AACxB,eAAO,CAAP;AACD;AACD,UAAI,CAAC,MAAM,CAAC,KAAP,CAAa,MAAM,CAAC,QAAD,CAAnB,CAAL,EAAqC;AACnC,eAAO,MAAM,CAAC,QAAD,CAAb;AACD;AACD,aAAO,IAAP;AACF,SAAK,QAAL;AACE,UAAI,CAAC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;AACD,aAAO,IAAI,CAAC,KAAL,CAAW,QAAX,CAAP;AACF,SAAK,SAAL;AACE,UAAI,CAAC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;AACD,aAAO,QAAQ,KAAK,OAAb,IAAwB,QAAQ,KAAK,GAA5C;AACF,SAAK,OAAL;AACE,UAAI,CAAC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;AACD,UAAI;AACF,eAAO,KAAK,CAAC,MAAN,CAAa,QAAb,CAAP;AACD;AAAC,YAAM;AACN,eAAO,IAAP;AACD;AACH;AACE,aAAO,QAAP,CAnCJ;;AAqCD;AAED,OAAM,SAAU,WAAV,CAAsB,OAAtB,EAAqC;AACzC,SAAO,cAAc,CAAC,IAAf,CAAoB;AACzB,IAAA,QAAQ,EAAE,cADe;AAEzB,IAAA,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,OAAO,EAAnB,EAFY;AAGzB,IAAA,WAAW,EAAE,MAHY;AAIzB,IAAA,SAAS,EAAE,KAJc,CAIP;AAJO,GAApB;AAMJ,EAAA,IANI,CAMC,CAAC,EAAE,IAAF,EAAD,KAAc,IANf;AAOJ,EAAA,KAPI,CAOE,CAAA,QAAQ;AACb;AACA,EAAA,oBAAoB,CAAC,QAAD,CAApB,CAA+B,IAA/B,CAAoC,CAAC,EAAE,KAAF,EAAS,UAAT,EAAD,KAClC,OAAO,CAAC,MAAR,CAAe,KAAK,IAAI,UAAxB,CADF,CATG,CAAP;AAaD,C,iLAvDe,W,oHAyCA,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * 'License'); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/core';\nimport rison from 'rison';\nimport { getClientErrorObject } from './getClientErrorObject';\nimport { URL_PARAMS } from '../constants';\n\nexport type UrlParamType = 'string' | 'number' | 'boolean' | 'object' | 'rison';\nexport type UrlParam = typeof URL_PARAMS[keyof typeof URL_PARAMS];\nexport function getUrlParam(param: UrlParam & { type: 'string' }): string;\nexport function getUrlParam(param: UrlParam & { type: 'number' }): number;\nexport function getUrlParam(param: UrlParam & { type: 'boolean' }): boolean;\nexport function getUrlParam(param: UrlParam & { type: 'object' }): object;\nexport function getUrlParam(param: UrlParam & { type: 'rison' }): object;\nexport function getUrlParam({ name, type }: UrlParam): unknown {\n  const urlParam = new URLSearchParams(window.location.search).get(name);\n  switch (type) {\n    case 'number':\n      if (!urlParam) {\n        return null;\n      }\n      if (urlParam === 'true') {\n        return 1;\n      }\n      if (urlParam === 'false') {\n        return 0;\n      }\n      if (!Number.isNaN(Number(urlParam))) {\n        return Number(urlParam);\n      }\n      return null;\n    case 'object':\n      if (!urlParam) {\n        return null;\n      }\n      return JSON.parse(urlParam);\n    case 'boolean':\n      if (!urlParam) {\n        return null;\n      }\n      return urlParam !== 'false' && urlParam !== '0';\n    case 'rison':\n      if (!urlParam) {\n        return null;\n      }\n      try {\n        return rison.decode(urlParam);\n      } catch {\n        return null;\n      }\n    default:\n      return urlParam;\n  }\n}\n\nexport function getShortUrl(longUrl: string) {\n  return SupersetClient.post({\n    endpoint: '/r/shortner/',\n    postPayload: { data: `/${longUrl}` }, // note: url should contain 2x '/' to redirect properly\n    parseMethod: 'text',\n    stringify: false, // the url saves with an extra set of string quotes without this\n  })\n    .then(({ text }) => text)\n    .catch(response =>\n      // @ts-ignore\n      getClientErrorObject(response).then(({ error, statusText }) =>\n        Promise.reject(error || statusText),\n      ),\n    );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}