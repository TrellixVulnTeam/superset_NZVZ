{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/Filters/Select.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { FormLabel } from 'src/components/Form';\nimport { FilterContainer } from './Base';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction SelectFilter({ Header, name, fetchSelects, initialValue, onSelect, selects = [] }) {\n  const [selectedOption, setSelectedOption] = useState(initialValue);\n  const onChange = (selected) => {\n    onSelect(selected ? { label: selected.label, value: selected.value } : undefined);\n    setSelectedOption(selected);\n  };\n  const onClear = () => {\n    onSelect(undefined);\n    setSelectedOption(undefined);\n  };\n  const fetchAndFormatSelects = useMemo(() => async (inputValue, page, pageSize) => {\n    if (fetchSelects) {\n      const selectValues = await fetchSelects(inputValue, page, pageSize);\n      return {\n        data: selectValues.data,\n        totalCount: selectValues.totalCount };\n\n    }\n    return {\n      data: [],\n      totalCount: 0 };\n\n  }, [fetchSelects]);\n  return ___EmotionJSX(FilterContainer, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 47, columnNumber: 13 } },\n  ___EmotionJSX(Select, { allowClear: true, ariaLabel: typeof Header === 'string' ? Header : name || t('Filter'), labelInValue: true, \"data-test\": \"filters-select\", header: ___EmotionJSX(FormLabel, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 48, columnNumber: 144 } }, Header), onChange: onChange, onClear: onClear, options: fetchSelects ? fetchAndFormatSelects : selects, placeholder: t('Select or type a value'), showSearch: true, value: selectedOption, __self: this, __source: { fileName: _jsxFileName, lineNumber: 48, columnNumber: 7 } }));\n\n}__signature__(SelectFilter, \"useState{[selectedOption, setSelectedOption](initialValue)}\\nuseMemo{fetchAndFormatSelects}\");const _default =\nSelectFilter;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SelectFilter, \"SelectFilter\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/Filters/Select.tsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/Filters/Select.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/components/ListView/Filters/Select.tsx"],"names":[],"mappings":"0ZAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,EAA0B,OAA1B,QAAyC,OAAzC;AACA,SAAS,CAAT,QAAkB,mBAAlB;AACA,SAAS,MAAT,QAAuB,gBAAvB;AAEA,SAAS,SAAT,QAA0B,qBAA1B;AACA,SAAS,eAAT,QAA4C,QAA5C,C;AAUA,SAAS,YAAT,CAAsB,EACpB,MADoB,EAEpB,IAFoB,EAGpB,YAHoB,EAIpB,YAJoB,EAKpB,QALoB,EAMpB,OAAO,GAAG,EANU,EAAtB,EAOoB;AAClB,QAAM,CAAC,cAAD,EAAiB,iBAAjB,IAAsC,QAAQ,CAAC,YAAD,CAApD;AAEA,QAAM,QAAQ,GAAG,CAAC,QAAD,KAA2B;AAC1C,IAAA,QAAQ,CACN,QAAQ,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAlB,EAAyB,KAAK,EAAE,QAAQ,CAAC,KAAzC,EAAH,GAAsD,SADxD,CAAR;AAGA,IAAA,iBAAiB,CAAC,QAAD,CAAjB;AACD,GALD;AAOA,QAAM,OAAO,GAAG,MAAK;AACnB,IAAA,QAAQ,CAAC,SAAD,CAAR;AACA,IAAA,iBAAiB,CAAC,SAAD,CAAjB;AACD,GAHD;AAKA,QAAM,qBAAqB,GAAG,OAAO,CACnC,MAAM,OAAO,UAAP,EAA2B,IAA3B,EAAyC,QAAzC,KAA6D;AACjE,QAAI,YAAJ,EAAkB;AAChB,YAAM,YAAY,GAAG,MAAM,YAAY,CAAC,UAAD,EAAa,IAAb,EAAmB,QAAnB,CAAvC;AACA,aAAO;AACL,QAAA,IAAI,EAAE,YAAY,CAAC,IADd;AAEL,QAAA,UAAU,EAAE,YAAY,CAAC,UAFpB,EAAP;;AAID;AACD,WAAO;AACL,MAAA,IAAI,EAAE,EADD;AAEL,MAAA,UAAU,EAAE,CAFP,EAAP;;AAID,GAbkC,EAcnC,CAAC,YAAD,CAdmC,CAArC;AAiBA,SACE,cAAC,eAAD;AACE,gBAAC,MAAD,IACE,UAAU,MADZ,EAEE,SAAS,EAAE,OAAO,MAAP,KAAkB,QAAlB,GAA6B,MAA7B,GAAsC,IAAI,IAAI,CAAC,CAAC,QAAD,CAF5D,EAGE,YAAY,MAHd,EAIE,aAAU,gBAJZ,EAKE,MAAM,EAAE,cAAC,SAAD,6FAAY,MAAZ,CALV,EAME,QAAQ,EAAE,QANZ,EAOE,OAAO,EAAE,OAPX,EAQE,OAAO,EAAE,YAAY,GAAG,qBAAH,GAA2B,OARlD,EASE,WAAW,EAAE,CAAC,CAAC,wBAAD,CAThB,EAUE,UAAU,MAVZ,EAWE,KAAK,EAAE,cAXT,wFADF,CADF;;AAiBD,C,cAxDQ,Y;AAyDM,Y,CAAf,wB,iLAzDS,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { Filter, SelectOption } from 'src/components/ListView/types';\nimport { FormLabel } from 'src/components/Form';\nimport { FilterContainer, BaseFilter } from './Base';\n\ninterface SelectFilterProps extends BaseFilter {\n  fetchSelects?: Filter['fetchSelects'];\n  name?: string;\n  onSelect: (selected: SelectOption | undefined) => void;\n  paginate?: boolean;\n  selects: Filter['selects'];\n}\n\nfunction SelectFilter({\n  Header,\n  name,\n  fetchSelects,\n  initialValue,\n  onSelect,\n  selects = [],\n}: SelectFilterProps) {\n  const [selectedOption, setSelectedOption] = useState(initialValue);\n\n  const onChange = (selected: SelectOption) => {\n    onSelect(\n      selected ? { label: selected.label, value: selected.value } : undefined,\n    );\n    setSelectedOption(selected);\n  };\n\n  const onClear = () => {\n    onSelect(undefined);\n    setSelectedOption(undefined);\n  };\n\n  const fetchAndFormatSelects = useMemo(\n    () => async (inputValue: string, page: number, pageSize: number) => {\n      if (fetchSelects) {\n        const selectValues = await fetchSelects(inputValue, page, pageSize);\n        return {\n          data: selectValues.data,\n          totalCount: selectValues.totalCount,\n        };\n      }\n      return {\n        data: [],\n        totalCount: 0,\n      };\n    },\n    [fetchSelects],\n  );\n\n  return (\n    <FilterContainer>\n      <Select\n        allowClear\n        ariaLabel={typeof Header === 'string' ? Header : name || t('Filter')}\n        labelInValue\n        data-test=\"filters-select\"\n        header={<FormLabel>{Header}</FormLabel>}\n        onChange={onChange}\n        onClear={onClear}\n        options={fetchSelects ? fetchAndFormatSelects : selects}\n        placeholder={t('Select or type a value')}\n        showSearch\n        value={selectedOption}\n      />\n    </FilterContainer>\n  );\n}\nexport default SelectFilter;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}