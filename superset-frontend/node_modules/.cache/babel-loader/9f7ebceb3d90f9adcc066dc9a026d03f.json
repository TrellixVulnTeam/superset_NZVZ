{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { styled } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from 'src/explore/components/optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DatasourceItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  cursor: pointer;\n\n  > div {\n    width: 100%;\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.grayscale.light2};\n  }\n`;\nexport default function DatasourcePanelDragOption(props) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type },\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging() }) });\n\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true };\n\n  return ___EmotionJSX(DatasourceItemContainer, { \"data-test\": \"DatasourcePanelDragOption\", ref: drag, __self: this, __source: { fileName: _jsxFileName, lineNumber: 55, columnNumber: 13 } },\n  type === DndItemType.Column ? ___EmotionJSX(StyledColumnOption, _extends({ column: value }, optionProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 56, columnNumber: 39 } })) : ___EmotionJSX(StyledMetricOption, _extends({ metric: value }, optionProps, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 56, columnNumber: 97 } })));\n\n}__signature__(DatasourcePanelDragOption, \"useDrag{[{ isDragging }, drag]}\", () => [useDrag]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceItemContainer, \"DatasourceItemContainer\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx\");reactHotLoader.register(DatasourcePanelDragOption, \"DatasourcePanelDragOption\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx"],"names":[],"mappings":"wfAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAiB,MAAjB,QAA+B,mBAA/B;AACA,SAAS,WAAT,QAA4B,oCAA5B;AACA,SACE,kBADF,EAEE,kBAFF,QAGO,wCAHP,C;AAOA,MAAM,uBAAuB,GAAG,MAAM,CAAC,GAAG;;;;YAI9B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,QAAN,GAAiB,CAAC;;;;;;;;wBAQrB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;AAEnE,CAdD;AAyBA,eAAc,SAAU,yBAAV,CACZ,KADY,EACyB;AAErC,QAAM,EAAE,QAAF,EAAY,WAAZ,EAAyB,IAAzB,EAA+B,KAA/B,KAAyC,KAA/C;AACA,QAAM,CAAC,EAAE,UAAF,EAAD,EAAiB,IAAjB,IAAyB,OAAO,CAAC;AACrC,IAAA,IAAI,EAAE;AACJ,MAAA,KAAK,EAAE,KAAK,CAAC,KADT;AAEJ,MAAA,IAAI,EAAE,KAAK,CAAC,IAFR,EAD+B;;AAKrC,IAAA,OAAO,EAAE,CAAA,OAAO,MAAK;AACnB,MAAA,UAAU,EAAE,OAAO,CAAC,UAAR,EADO,EAAL,CALqB,EAAD,CAAtC;;;AAUA,QAAM,WAAW,GAAG;AAClB,IAAA,QADkB;AAElB,IAAA,WAAW,EAAE,CAAC,UAAD,IAAe,WAFV;AAGlB,IAAA,QAAQ,EAAE,IAHQ,EAApB;;AAMA,SACE,cAAC,uBAAD,IAAyB,aAAU,2BAAnC,EAA+D,GAAG,EAAE,IAApE;AACG,EAAA,IAAI,KAAK,WAAW,CAAC,MAArB,GACC,cAAC,kBAAD,aAAoB,MAAM,EAAE,KAA5B,IAAqD,WAArD,4FADD,GAGC,cAAC,kBAAD,aAAoB,MAAM,EAAE,KAA5B,IAAuD,WAAvD,4FAJJ,CADF;;AASD,C,cA7BuB,yB,4CAIS,O,oLA7B3B,uB,qLAyBkB,yB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Metric, styled } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  cursor: pointer;\n\n  > div {\n    width: 100%;\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.grayscale.light2};\n  }\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: React.RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n    </DatasourceItemContainer>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}