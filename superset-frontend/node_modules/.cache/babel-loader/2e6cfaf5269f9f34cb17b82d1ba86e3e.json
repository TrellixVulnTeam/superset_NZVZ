{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { Menu } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport { areArraysShallowEqual } from 'src/reduxUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport SqlEditor from '../SqlEditor';\nimport TabStatusIcon from '../TabStatusIcon';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null };\n\n\nlet queryCount = 1;\n\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [] };\n\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.renameTab = this.renameTab.bind(this);\n    this.toggleLeftBar = this.toggleLeftBar.bind(this);\n    this.removeAllOtherQueryEditors = this.removeAllOtherQueryEditors.bind(\n    this);\n\n    this.duplicateQueryEditor = this.duplicateQueryEditor.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {\n      const localStorageTables = this.props.tables.filter(\n      (table) => table.inLocalStorage);\n\n      const localStorageQueries = Object.values(this.props.queries).filter(\n      (query) => query.inLocalStorage);\n\n      this.props.queryEditors.\n      filter((qe) => qe.inLocalStorage).\n      forEach((qe) => {\n        // get all queries associated with the query editor\n        const queries = localStorageQueries.filter(\n        (query) => query.sqlEditorId === qe.id);\n\n        const tables = localStorageTables.filter(\n        (table) => table.queryEditorId === qe.id);\n\n        this.props.actions.migrateQueryEditorFromLocalStorage(\n        qe,\n        tables,\n        queries);\n\n      });\n    }\n\n    // merge post form data with GET search params\n    // Hack: this data should be comming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const appContainer = document.getElementById('app');\n    const bootstrapData = JSON.parse(\n    (appContainer == null ? void 0 : appContainer.getAttribute('data-bootstrap')) || '{}');\n\n    const query = {\n      ...bootstrapData.requested_query,\n      ...URI(window.location).search(true) };\n\n\n    // Popping a new tab based on the querystring\n    if (\n    query.id ||\n    query.sql ||\n    query.savedQueryId ||\n    query.datasourceKey ||\n    query.queryId)\n    {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.queryId) {\n        this.props.actions.popQuery(query.queryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = parseInt(dbId, 10);\n        } else {\n          const { databases } = this.props;\n          const dbName = query.dbname;\n          if (dbName) {\n            Object.keys(databases).forEach((db) => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql };\n\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (query.new || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (query.new) {\n        window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n      isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery &&\n      latestQuery.resultsKey)\n      {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n        latestQuery,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextActiveQeId =\n    nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = Object.values(nextProps.queries).filter(\n    (query) => query.sqlEditorId === nextActiveQeId);\n\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    nextProps.tables.forEach((table) => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n      queryId &&\n      nextProps.queries[queryId] &&\n      table.queryEditorId === nextActiveQeId)\n      {\n        dataPreviewQueries.push({\n          ...nextProps.queries[queryId],\n          tableName: table.name });\n\n      }\n    });\n    if (\n    !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries))\n    {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n\n  popNewTab() {\n    queryCount += 1;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find((qe) => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {\n    queryCount += 1;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n    ...Object.values(this.props.databases).map((database) => database.id));\n\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) ?\n    '' :\n    `${t(\n    '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.')\n    }\\n\\n`;\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n      activeQueryEditor && activeQueryEditor.dbId ?\n      activeQueryEditor.dbId :\n      this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: `${warning}SELECT ...`,\n      queryLimit: this.props.defaultQueryLimit };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  handleSelect(key) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {\n      const queryEditor = this.props.queryEditors.find((qe) => qe.id === key);\n      this.props.actions.switchQueryEditor(\n      queryEditor,\n      this.props.displayLimit);\n\n    }\n  }\n\n  handleEdit(key, action) {\n    if (action === 'remove') {\n      const qe = this.props.queryEditors.find((qe) => qe.id === key);\n      this.removeQueryEditor(qe);\n    }\n    if (action === 'add') {\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  removeAllOtherQueryEditors(cqe) {\n    this.props.queryEditors.forEach(\n    (qe) => qe !== cqe && this.removeQueryEditor(qe));\n\n  }\n\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n\n  toggleLeftBar(qe) {\n    this.props.actions.toggleLeftBar(qe);\n  }\n\n  render() {\n    const editors = this.props.queryEditors.map((qe) => {\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const menu =\n      ___EmotionJSX(Menu, { style: { width: 176 }, __self: this, __source: { fileName: _jsxFileName, lineNumber: 330, columnNumber: 9 } },\n      ___EmotionJSX(Menu.Item, {\n        className: \"close-btn\",\n        key: \"1\",\n        onClick: () => this.removeQueryEditor(qe),\n        \"data-test\": \"close-tab-menu-option\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 331, columnNumber: 11 } },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 337, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", { className: \"fa fa-close\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 338, columnNumber: 15 } })),\n\n      t('Close tab')),\n\n      ___EmotionJSX(Menu.Item, { key: \"2\", onClick: () => this.renameTab(qe), __self: this, __source: { fileName: _jsxFileName, lineNumber: 342, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 343, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", { className: \"fa fa-i-cursor\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 344, columnNumber: 15 } })),\n\n      t('Rename tab')),\n\n      ___EmotionJSX(Menu.Item, { key: \"3\", onClick: () => this.toggleLeftBar(qe), __self: this, __source: { fileName: _jsxFileName, lineNumber: 348, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 349, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", { className: \"fa fa-cogs\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 350, columnNumber: 15 } })),\n\n      qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')),\n\n      ___EmotionJSX(Menu.Item, {\n        key: \"4\",\n        onClick: () => this.removeAllOtherQueryEditors(qe), __self: this, __source: { fileName: _jsxFileName, lineNumber: 354, columnNumber: 11 } },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 358, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", { className: \"fa fa-times-circle-o\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 359, columnNumber: 15 } })),\n\n      t('Close all other tabs')),\n\n      ___EmotionJSX(Menu.Item, { key: \"5\", onClick: () => this.duplicateQueryEditor(qe), __self: this, __source: { fileName: _jsxFileName, lineNumber: 363, columnNumber: 11 } },\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 364, columnNumber: 13 } },\n      ___EmotionJSX(\"i\", { className: \"fa fa-files-o\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 365, columnNumber: 15 } })),\n\n      t('Duplicate tab')));\n\n\n\n      const tabHeader =\n      ___EmotionJSX(TabTitleWrapper, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 372, columnNumber: 9 } },\n      ___EmotionJSX(\"div\", { \"data-test\": \"dropdown-toggle-button\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 373, columnNumber: 11 } },\n      ___EmotionJSX(Dropdown, { overlay: menu, trigger: ['click'], __self: this, __source: { fileName: _jsxFileName, lineNumber: 374, columnNumber: 13 } })),\n\n      ___EmotionJSX(TabTitle, { __self: this, __source: { fileName: _jsxFileName, lineNumber: 376, columnNumber: 11 } }, qe.title), \" \", ___EmotionJSX(TabStatusIcon, { tabState: state, __self: this, __source: { fileName: _jsxFileName, lineNumber: 376, columnNumber: 43 } }), ' ');\n\n\n      return (\n        ___EmotionJSX(EditableTabs.TabPane, {\n          key: qe.id,\n          tab: tabHeader\n          // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n          , \"data-key\": qe.id, __self: this, __source: { fileName: _jsxFileName, lineNumber: 380, columnNumber: 9 } },\n\n        ___EmotionJSX(SqlEditor, {\n          tables: this.props.tables.filter((xt) => xt.queryEditorId === qe.id),\n          queryEditorId: qe.id,\n          editorQueries: this.state.queriesArray,\n          dataPreviewQueries: this.state.dataPreviewQueries,\n          latestQuery: latestQuery,\n          database: database,\n          actions: this.props.actions,\n          hideLeftBar: qe.hideLeftBar,\n          defaultQueryLimit: this.props.defaultQueryLimit,\n          maxRow: this.props.maxRow,\n          displayLimit: this.props.displayLimit,\n          saveQueryWarning: this.props.saveQueryWarning,\n          scheduleQueryWarning: this.props.scheduleQueryWarning, __self: this, __source: { fileName: _jsxFileName, lineNumber: 386, columnNumber: 11 } })));\n\n\n\n    });\n\n    return (\n      ___EmotionJSX(EditableTabs, {\n        activeKey: this.props.tabHistory[this.props.tabHistory.length - 1],\n        id: \"a11y-query-editor-tabs\",\n        className: \"SqlEditorTabs\",\n        \"data-test\": \"sql-editor-tabs\",\n        onChange: this.handleSelect,\n        fullWidth: false,\n        hideAdd: this.props.offline,\n        onEdit: this.handleEdit,\n        addIcon:\n        ___EmotionJSX(Tooltip, {\n          id: \"add-tab\",\n          placement: \"bottom\",\n          title:\n          userOS === 'Windows' ?\n          t('New tab (Ctrl + q)') :\n          t('New tab (Ctrl + t)'), __self: this, __source: { fileName: _jsxFileName, lineNumber: 416, columnNumber: 11 } },\n\n\n        ___EmotionJSX(\"i\", { \"data-test\": \"add-tab-icon\", className: \"fa fa-plus-circle\", __self: this, __source: { fileName: _jsxFileName, lineNumber: 425, columnNumber: 13 } })), __self: this, __source: { fileName: _jsxFileName, lineNumber: 406, columnNumber: 7 } },\n\n\n\n      editors));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery };\n\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch) };\n\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(queryCount, \"queryCount\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(TabTitleWrapper, \"TabTitleWrapper\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(TabTitle, \"TabTitle\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(userOS, \"userOS\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/ubuntu/my_plugin/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx"],"names":["React","PropTypes","Dropdown","EditableTabs","Menu","connect","bindActionCreators","URI","styled","t","isFeatureEnabled","FeatureFlag","areArraysShallowEqual","Tooltip","detectOS","Actions","SqlEditor","TabStatusIcon","propTypes","actions","object","isRequired","defaultDbId","number","displayLimit","defaultQueryLimit","maxRow","databases","queries","queryEditors","array","requestedQuery","tabHistory","tables","offline","bool","saveQueryWarning","string","scheduleQueryWarning","defaultProps","queryCount","TabTitleWrapper","div","TabTitle","span","theme","gridUnit","userOS","TabbedSqlEditors","PureComponent","constructor","props","sqlLabUrl","state","queriesArray","dataPreviewQueries","removeQueryEditor","bind","renameTab","toggleLeftBar","removeAllOtherQueryEditors","duplicateQueryEditor","handleSelect","handleEdit","componentDidMount","SQLLAB_BACKEND_PERSISTENCE","localStorageTables","filter","table","inLocalStorage","localStorageQueries","Object","values","query","qe","forEach","sqlEditorId","id","queryEditorId","migrateQueryEditorFromLocalStorage","appContainer","document","getElementById","bootstrapData","JSON","parse","getAttribute","requested_query","window","location","search","sql","savedQueryId","datasourceKey","queryId","popStoredQuery","popSavedQuery","popQuery","popDatasourceQuery","dbId","dbid","parseInt","dbName","dbname","keys","db","database_name","newQueryEditor","title","schema","autorun","addQueryEditor","popNewTab","new","length","history","replaceState","activeQueryEditor","latestQuery","latestQueryId","resultsKey","fetchQueryResults","UNSAFE_componentWillReceiveProps","nextProps","nextActiveQeId","setState","dataPreviewQueryId","push","tableName","name","newTitle","prompt","queryEditorSetTitle","qeid","find","firstDbId","Math","min","map","database","warning","queryLimit","key","queryEditor","switchQueryEditor","action","cqe","cloneQueryToNewTab","render","editors","menu","width","hideLeftBar","tabHeader","xt","mapStateToProps","sqlLab","common","conf","DISPLAY_MAX_ROW","DEFAULT_SQLLAB_LIMIT","SQL_MAX_ROW","SQLLAB_SAVE_WARNING_MESSAGE","SQLLAB_SCHEDULE_WARNING_MESSAGE","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { Menu } from 'src/common/components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { styled, t } from '@superset-ui/core';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport { areArraysShallowEqual } from 'src/reduxUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport SqlEditor from '../SqlEditor';\nimport TabStatusIcon from '../TabStatusIcon';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null,\n};\n\nlet queryCount = 1;\n\nconst TabTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [],\n    };\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.renameTab = this.renameTab.bind(this);\n    this.toggleLeftBar = this.toggleLeftBar.bind(this);\n    this.removeAllOtherQueryEditors = this.removeAllOtherQueryEditors.bind(\n      this,\n    );\n    this.duplicateQueryEditor = this.duplicateQueryEditor.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {\n      const localStorageTables = this.props.tables.filter(\n        table => table.inLocalStorage,\n      );\n      const localStorageQueries = Object.values(this.props.queries).filter(\n        query => query.inLocalStorage,\n      );\n      this.props.queryEditors\n        .filter(qe => qe.inLocalStorage)\n        .forEach(qe => {\n          // get all queries associated with the query editor\n          const queries = localStorageQueries.filter(\n            query => query.sqlEditorId === qe.id,\n          );\n          const tables = localStorageTables.filter(\n            table => table.queryEditorId === qe.id,\n          );\n          this.props.actions.migrateQueryEditorFromLocalStorage(\n            qe,\n            tables,\n            queries,\n          );\n        });\n    }\n\n    // merge post form data with GET search params\n    // Hack: this data should be comming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const appContainer = document.getElementById('app');\n    const bootstrapData = JSON.parse(\n      appContainer?.getAttribute('data-bootstrap') || '{}',\n    );\n    const query = {\n      ...bootstrapData.requested_query,\n      ...URI(window.location).search(true),\n    };\n\n    // Popping a new tab based on the querystring\n    if (\n      query.id ||\n      query.sql ||\n      query.savedQueryId ||\n      query.datasourceKey ||\n      query.queryId\n    ) {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.queryId) {\n        this.props.actions.popQuery(query.queryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = parseInt(dbId, 10);\n        } else {\n          const { databases } = this.props;\n          const dbName = query.dbname;\n          if (dbName) {\n            Object.keys(databases).forEach(db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql,\n        };\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (query.new || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (query.new) {\n        window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n        isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n        latestQuery &&\n        latestQuery.resultsKey\n      ) {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n          latestQuery,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextActiveQeId =\n      nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = Object.values(nextProps.queries).filter(\n      query => query.sqlEditorId === nextActiveQeId,\n    );\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    nextProps.tables.forEach(table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n        queryId &&\n        nextProps.queries[queryId] &&\n        table.queryEditorId === nextActiveQeId\n      ) {\n        dataPreviewQueries.push({\n          ...nextProps.queries[queryId],\n          tableName: table.name,\n        });\n      }\n    });\n    if (\n      !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries)\n    ) {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n\n  popNewTab() {\n    queryCount += 1;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find(qe => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {\n    queryCount += 1;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n      ...Object.values(this.props.databases).map(database => database.id),\n    );\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)\n      ? ''\n      : `${t(\n          '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.',\n        )}\\n\\n`;\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n        activeQueryEditor && activeQueryEditor.dbId\n          ? activeQueryEditor.dbId\n          : this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: `${warning}SELECT ...`,\n      queryLimit: this.props.defaultQueryLimit,\n    };\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  handleSelect(key) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {\n      const queryEditor = this.props.queryEditors.find(qe => qe.id === key);\n      this.props.actions.switchQueryEditor(\n        queryEditor,\n        this.props.displayLimit,\n      );\n    }\n  }\n\n  handleEdit(key, action) {\n    if (action === 'remove') {\n      const qe = this.props.queryEditors.find(qe => qe.id === key);\n      this.removeQueryEditor(qe);\n    }\n    if (action === 'add') {\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  removeAllOtherQueryEditors(cqe) {\n    this.props.queryEditors.forEach(\n      qe => qe !== cqe && this.removeQueryEditor(qe),\n    );\n  }\n\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n\n  toggleLeftBar(qe) {\n    this.props.actions.toggleLeftBar(qe);\n  }\n\n  render() {\n    const editors = this.props.queryEditors.map(qe => {\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const menu = (\n        <Menu style={{ width: 176 }}>\n          <Menu.Item\n            className=\"close-btn\"\n            key=\"1\"\n            onClick={() => this.removeQueryEditor(qe)}\n            data-test=\"close-tab-menu-option\"\n          >\n            <div className=\"icon-container\">\n              <i className=\"fa fa-close\" />\n            </div>\n            {t('Close tab')}\n          </Menu.Item>\n          <Menu.Item key=\"2\" onClick={() => this.renameTab(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-i-cursor\" />\n            </div>\n            {t('Rename tab')}\n          </Menu.Item>\n          <Menu.Item key=\"3\" onClick={() => this.toggleLeftBar(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-cogs\" />\n            </div>\n            {qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')}\n          </Menu.Item>\n          <Menu.Item\n            key=\"4\"\n            onClick={() => this.removeAllOtherQueryEditors(qe)}\n          >\n            <div className=\"icon-container\">\n              <i className=\"fa fa-times-circle-o\" />\n            </div>\n            {t('Close all other tabs')}\n          </Menu.Item>\n          <Menu.Item key=\"5\" onClick={() => this.duplicateQueryEditor(qe)}>\n            <div className=\"icon-container\">\n              <i className=\"fa fa-files-o\" />\n            </div>\n            {t('Duplicate tab')}\n          </Menu.Item>\n        </Menu>\n      );\n      const tabHeader = (\n        <TabTitleWrapper>\n          <div data-test=\"dropdown-toggle-button\">\n            <Dropdown overlay={menu} trigger={['click']} />\n          </div>\n          <TabTitle>{qe.title}</TabTitle> <TabStatusIcon tabState={state} />{' '}\n        </TabTitleWrapper>\n      );\n      return (\n        <EditableTabs.TabPane\n          key={qe.id}\n          tab={tabHeader}\n          // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n          data-key={qe.id}\n        >\n          <SqlEditor\n            tables={this.props.tables.filter(xt => xt.queryEditorId === qe.id)}\n            queryEditorId={qe.id}\n            editorQueries={this.state.queriesArray}\n            dataPreviewQueries={this.state.dataPreviewQueries}\n            latestQuery={latestQuery}\n            database={database}\n            actions={this.props.actions}\n            hideLeftBar={qe.hideLeftBar}\n            defaultQueryLimit={this.props.defaultQueryLimit}\n            maxRow={this.props.maxRow}\n            displayLimit={this.props.displayLimit}\n            saveQueryWarning={this.props.saveQueryWarning}\n            scheduleQueryWarning={this.props.scheduleQueryWarning}\n          />\n        </EditableTabs.TabPane>\n      );\n    });\n\n    return (\n      <EditableTabs\n        activeKey={this.props.tabHistory[this.props.tabHistory.length - 1]}\n        id=\"a11y-query-editor-tabs\"\n        className=\"SqlEditorTabs\"\n        data-test=\"sql-editor-tabs\"\n        onChange={this.handleSelect}\n        fullWidth={false}\n        hideAdd={this.props.offline}\n        onEdit={this.handleEdit}\n        addIcon={\n          <Tooltip\n            id=\"add-tab\"\n            placement=\"bottom\"\n            title={\n              userOS === 'Windows'\n                ? t('New tab (Ctrl + q)')\n                : t('New tab (Ctrl + t)')\n            }\n          >\n            <i data-test=\"add-tab-icon\" className=\"fa fa-plus-circle\" />\n          </Tooltip>\n        }\n      >\n        {editors}\n      </EditableTabs>\n    );\n  }\n}\nTabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);\n"]},"metadata":{},"sourceType":"module"}